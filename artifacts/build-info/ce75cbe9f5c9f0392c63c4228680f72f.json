{"id":"ce75cbe9f5c9f0392c63c4228680f72f","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"contracts/Vault.sol":{"content":"//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\n/*  This is a generic vault where a set of loans are held\r\n    Loans are  */\r\n\r\nimport \"./CAT.sol\";\r\nimport \"./Loan.sol\";\r\n\r\ncontract Vault {\r\n    CAT private immutable i_token;\r\n    mapping(address => Loan) private s_addressesToLoans; //the list of outstanding loans\r\n\r\n    constructor(string memory name, string memory symbol) {\r\n        i_token = new CAT(0, name, symbol);\r\n        //TODO: add address of price feed of CAT\r\n    }\r\n\r\n    function borrow(uint256 toBorrowAmount) public {\r\n        /**1. check if this user is allowed to borrow: i.e. has remaining free collateral\r\n         * 2. mint the tokens & send to user\r\n         * 3. update Loan object\r\n         * 4. add Loan object to s_addressesToLoans\r\n         */\r\n\r\n        //TODO: 1. check if user is allowed to borrw\r\n\r\n        //2. mint the tokens and send to user\r\n        i_token._mintCAT(msg.sender, toBorrowAmount);\r\n\r\n        //3. update Loan object\r\n    }\r\n\r\n    function getToken() public view returns (CAT) {\r\n        return i_token;\r\n    }\r\n}\r\n"},"contracts/CAT.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.17;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract CAT is ERC20 {\r\n    constructor(\r\n        uint256 initialSupply,\r\n        string memory name,\r\n        string memory symbol\r\n    ) ERC20(name, symbol) {\r\n        _mint(msg.sender, initialSupply);\r\n    }\r\n\r\n    function _mintCAT(address receivingAddress, uint256 amount) public {\r\n        _mint(receivingAddress, amount);\r\n    }\r\n}\r\n"},"contracts/Loan.sol":{"content":"//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\n/*A loan  */\r\ncontract Loan {\r\n    //simply holds the collateral value and the outstanding loan value and the issue date from which the interest needs to be calculated by liquidators and checked by liquidation contract\r\n    uint256 private s_blockHeightLastInterestUpdate;\r\n    mapping(address => uint256) collateralAmountByToken;\r\n\r\n    address public immutable i_token;\r\n\r\n    constructor(address commodityToken) {\r\n        i_token = commodityToken;\r\n        s_blockHeightLastInterestUpdate = block.timestamp;\r\n    }\r\n\r\n    uint256 private s_amountBorrowedPerToken;\r\n\r\n    //mapping(address, uint256) accruedInterestPerToken\r\n}\r\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./AggregatorInterface.sol\";\nimport \"./AggregatorV3Interface.sol\";\n\ninterface AggregatorV2V3Interface is AggregatorInterface, AggregatorV3Interface {}\n"},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorInterface {\n  function latestAnswer() external view returns (int256);\n\n  function latestTimestamp() external view returns (uint256);\n\n  function latestRound() external view returns (uint256);\n\n  function getAnswer(uint256 roundId) external view returns (int256);\n\n  function getTimestamp(uint256 roundId) external view returns (uint256);\n\n  event AnswerUpdated(int256 indexed current, uint256 indexed roundId, uint256 updatedAt);\n\n  event NewRound(uint256 indexed roundId, address indexed startedBy, uint256 startedAt);\n}\n"},"@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../interfaces/AggregatorV2V3Interface.sol\";\n\n/**\n * @title MockV3Aggregator\n * @notice Based on the FluxAggregator contract\n * @notice Use this contract when you need to test\n * other contract's ability to read data from an\n * aggregator contract, but how the aggregator got\n * its answer is unimportant\n */\ncontract MockV3Aggregator is AggregatorV2V3Interface {\n  uint256 public constant override version = 0;\n\n  uint8 public override decimals;\n  int256 public override latestAnswer;\n  uint256 public override latestTimestamp;\n  uint256 public override latestRound;\n\n  mapping(uint256 => int256) public override getAnswer;\n  mapping(uint256 => uint256) public override getTimestamp;\n  mapping(uint256 => uint256) private getStartedAt;\n\n  constructor(uint8 _decimals, int256 _initialAnswer) {\n    decimals = _decimals;\n    updateAnswer(_initialAnswer);\n  }\n\n  function updateAnswer(int256 _answer) public {\n    latestAnswer = _answer;\n    latestTimestamp = block.timestamp;\n    latestRound++;\n    getAnswer[latestRound] = _answer;\n    getTimestamp[latestRound] = block.timestamp;\n    getStartedAt[latestRound] = block.timestamp;\n  }\n\n  function updateRoundData(\n    uint80 _roundId,\n    int256 _answer,\n    uint256 _timestamp,\n    uint256 _startedAt\n  ) public {\n    latestRound = _roundId;\n    latestAnswer = _answer;\n    latestTimestamp = _timestamp;\n    getAnswer[latestRound] = _answer;\n    getTimestamp[latestRound] = _timestamp;\n    getStartedAt[latestRound] = _startedAt;\n  }\n\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    override\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    )\n  {\n    return (_roundId, getAnswer[_roundId], getStartedAt[_roundId], getTimestamp[_roundId], _roundId);\n  }\n\n  function latestRoundData()\n    external\n    view\n    override\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    )\n  {\n    return (\n      uint80(latestRound),\n      getAnswer[latestRound],\n      getStartedAt[latestRound],\n      getTimestamp[latestRound],\n      uint80(latestRound)\n    );\n  }\n\n  function description() external pure override returns (string memory) {\n    return \"v0.8/tests/MockV3Aggregator.sol\";\n  }\n}\n"},"contracts/test/MockV3Aggregator.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol\";\r\n"},"contracts/Gold-feed.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// CAT (Commodity Asset Token) LINK Contract Demo Gold\r\n// GOAL: aggregate the gold price feed over the Goerli Testnet\r\n\r\npragma solidity ^0.8.1;\r\n\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\n\r\ncontract GoldPriceFeed {\r\n    AggregatorV3Interface internal priceFeed;\r\n\r\n    /**\r\n     * DEMO: Goerli Testnet via LINK Proxy IDs\r\n     * Aggregator1: Gold XAU/USD\r\n     * Address: 0x7b219F57a8e9C7303204Af681e9fA69d17ef626f\r\n     */\r\n    constructor() public {\r\n        priceFeed = AggregatorV3Interface(0x7b219F57a8e9C7303204Af681e9fA69d17ef626f);\r\n    }\r\n\r\n    /**\r\n     * Return the latest gold price\r\n     */\r\n\r\n    function getLatestPriceGold() public view returns (int256) {\r\n        (\r\n            uint80 roundID,\r\n            int256 price,\r\n            uint256 startedAt,\r\n            uint256 timeStamp,\r\n            uint80 answeredInRound\r\n        ) = priceFeed.latestRoundData();\r\n        return price;\r\n    }\r\n} //end contract\r\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"2462","formattedMessage":"Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/Gold-feed.sol:17:5:\n   |\n17 |     constructor() public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":618,"file":"contracts/Gold-feed.sol","start":501},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/Gold-feed.sol:27:13:\n   |\n27 |             uint80 roundID,\n   |             ^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":782,"file":"contracts/Gold-feed.sol","start":768},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/Gold-feed.sol:29:13:\n   |\n29 |             uint256 startedAt,\n   |             ^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":841,"file":"contracts/Gold-feed.sol","start":824},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/Gold-feed.sol:30:13:\n   |\n30 |             uint256 timeStamp,\n   |             ^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":873,"file":"contracts/Gold-feed.sol","start":856},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/Gold-feed.sol:31:13:\n   |\n31 |             uint80 answeredInRound\n   |             ^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":910,"file":"contracts/Gold-feed.sol","start":888},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol","exportedSymbols":{"AggregatorInterface":[47]},"id":48,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"AggregatorInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":47,"linearizedBaseContracts":[47],"name":"AggregatorInterface","nameLocation":"67:19:0","nodeType":"ContractDefinition","nodes":[{"functionSelector":"50d25bcd","id":6,"implemented":false,"kind":"function","modifiers":[],"name":"latestAnswer","nameLocation":"100:12:0","nodeType":"FunctionDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"112:2:0"},"returnParameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6,"src":"138:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3,"name":"int256","nodeType":"ElementaryTypeName","src":"138:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"137:8:0"},"scope":47,"src":"91:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8205bf6a","id":11,"implemented":false,"kind":"function","modifiers":[],"name":"latestTimestamp","nameLocation":"159:15:0","nodeType":"FunctionDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"174:2:0"},"returnParameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11,"src":"200:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"200:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"199:9:0"},"scope":47,"src":"150:59:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"668a0f02","id":16,"implemented":false,"kind":"function","modifiers":[],"name":"latestRound","nameLocation":"222:11:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"233:2:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16,"src":"259:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"259:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"258:9:0"},"scope":47,"src":"213:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b5ab58dc","id":23,"implemented":false,"kind":"function","modifiers":[],"name":"getAnswer","nameLocation":"281:9:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"roundId","nameLocation":"299:7:0","nodeType":"VariableDeclaration","scope":23,"src":"291:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"291:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"290:17:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":23,"src":"331:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":20,"name":"int256","nodeType":"ElementaryTypeName","src":"331:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"330:8:0"},"scope":47,"src":"272:67:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b633620c","id":30,"implemented":false,"kind":"function","modifiers":[],"name":"getTimestamp","nameLocation":"352:12:0","nodeType":"FunctionDefinition","parameters":{"id":26,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"mutability":"mutable","name":"roundId","nameLocation":"373:7:0","nodeType":"VariableDeclaration","scope":30,"src":"365:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"365:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"364:17:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":30,"src":"405:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"405:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:9:0"},"scope":47,"src":"343:71:0","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"eventSelector":"0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f","id":38,"name":"AnswerUpdated","nameLocation":"424:13:0","nodeType":"EventDefinition","parameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"indexed":true,"mutability":"mutable","name":"current","nameLocation":"453:7:0","nodeType":"VariableDeclaration","scope":38,"src":"438:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":31,"name":"int256","nodeType":"ElementaryTypeName","src":"438:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34,"indexed":true,"mutability":"mutable","name":"roundId","nameLocation":"478:7:0","nodeType":"VariableDeclaration","scope":38,"src":"462:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"462:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36,"indexed":false,"mutability":"mutable","name":"updatedAt","nameLocation":"495:9:0","nodeType":"VariableDeclaration","scope":38,"src":"487:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35,"name":"uint256","nodeType":"ElementaryTypeName","src":"487:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"437:68:0"},"src":"418:88:0"},{"anonymous":false,"eventSelector":"0109fc6f55cf40689f02fbaad7af7fe7bbac8a3d2186600afc7d3e10cac60271","id":46,"name":"NewRound","nameLocation":"516:8:0","nodeType":"EventDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"indexed":true,"mutability":"mutable","name":"roundId","nameLocation":"541:7:0","nodeType":"VariableDeclaration","scope":46,"src":"525:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39,"name":"uint256","nodeType":"ElementaryTypeName","src":"525:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42,"indexed":true,"mutability":"mutable","name":"startedBy","nameLocation":"566:9:0","nodeType":"VariableDeclaration","scope":46,"src":"550:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":44,"indexed":false,"mutability":"mutable","name":"startedAt","nameLocation":"585:9:0","nodeType":"VariableDeclaration","scope":46,"src":"577:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":43,"name":"uint256","nodeType":"ElementaryTypeName","src":"577:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"524:71:0"},"src":"510:86:0"}],"scope":48,"src":"57:541:0","usedErrors":[]}],"src":"32:567:0"},"id":0},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol","exportedSymbols":{"AggregatorInterface":[47],"AggregatorV2V3Interface":[56],"AggregatorV3Interface":[102]},"id":57,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":49,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol","file":"./AggregatorInterface.sol","id":50,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":57,"sourceUnit":48,"src":"57:35:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"./AggregatorV3Interface.sol","id":51,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":57,"sourceUnit":103,"src":"93:37:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":52,"name":"AggregatorInterface","nameLocations":["169:19:1"],"nodeType":"IdentifierPath","referencedDeclaration":47,"src":"169:19:1"},"id":53,"nodeType":"InheritanceSpecifier","src":"169:19:1"},{"baseName":{"id":54,"name":"AggregatorV3Interface","nameLocations":["190:21:1"],"nodeType":"IdentifierPath","referencedDeclaration":102,"src":"190:21:1"},"id":55,"nodeType":"InheritanceSpecifier","src":"190:21:1"}],"canonicalName":"AggregatorV2V3Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":56,"linearizedBaseContracts":[56,102,47],"name":"AggregatorV2V3Interface","nameLocation":"142:23:1","nodeType":"ContractDefinition","nodes":[],"scope":57,"src":"132:82:1","usedErrors":[]}],"src":"32:183:1"},"id":1},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[102]},"id":103,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":58,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"AggregatorV3Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":102,"linearizedBaseContracts":[102],"name":"AggregatorV3Interface","nameLocation":"67:21:2","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":63,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"102:8:2","nodeType":"FunctionDefinition","parameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"110:2:2"},"returnParameters":{"id":62,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"136:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":60,"name":"uint8","nodeType":"ElementaryTypeName","src":"136:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"135:7:2"},"scope":102,"src":"93:50:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":68,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"156:11:2","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[],"src":"167:2:2"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":68,"src":"193:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":65,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"192:15:2"},"scope":102,"src":"147:61:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":73,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"221:7:2","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"228:2:2"},"returnParameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":73,"src":"254:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:2"},"scope":102,"src":"212:51:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":88,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"276:12:2","nodeType":"FunctionDefinition","parameters":{"id":76,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"mutability":"mutable","name":"_roundId","nameLocation":"296:8:2","nodeType":"VariableDeclaration","scope":88,"src":"289:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":74,"name":"uint80","nodeType":"ElementaryTypeName","src":"289:6:2","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"288:17:2"},"returnParameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"roundId","nameLocation":"355:7:2","nodeType":"VariableDeclaration","scope":88,"src":"348:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":77,"name":"uint80","nodeType":"ElementaryTypeName","src":"348:6:2","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":80,"mutability":"mutable","name":"answer","nameLocation":"377:6:2","nodeType":"VariableDeclaration","scope":88,"src":"370:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":79,"name":"int256","nodeType":"ElementaryTypeName","src":"370:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":82,"mutability":"mutable","name":"startedAt","nameLocation":"399:9:2","nodeType":"VariableDeclaration","scope":88,"src":"391:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"391:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":84,"mutability":"mutable","name":"updatedAt","nameLocation":"424:9:2","nodeType":"VariableDeclaration","scope":88,"src":"416:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":83,"name":"uint256","nodeType":"ElementaryTypeName","src":"416:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":86,"mutability":"mutable","name":"answeredInRound","nameLocation":"448:15:2","nodeType":"VariableDeclaration","scope":88,"src":"441:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":85,"name":"uint80","nodeType":"ElementaryTypeName","src":"441:6:2","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"340:129:2"},"scope":102,"src":"267:203:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":101,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"483:15:2","nodeType":"FunctionDefinition","parameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"498:2:2"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"roundId","nameLocation":"550:7:2","nodeType":"VariableDeclaration","scope":101,"src":"543:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":90,"name":"uint80","nodeType":"ElementaryTypeName","src":"543:6:2","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"answer","nameLocation":"572:6:2","nodeType":"VariableDeclaration","scope":101,"src":"565:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":92,"name":"int256","nodeType":"ElementaryTypeName","src":"565:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"startedAt","nameLocation":"594:9:2","nodeType":"VariableDeclaration","scope":101,"src":"586:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"586:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"updatedAt","nameLocation":"619:9:2","nodeType":"VariableDeclaration","scope":101,"src":"611:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"611:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"answeredInRound","nameLocation":"643:15:2","nodeType":"VariableDeclaration","scope":101,"src":"636:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":98,"name":"uint80","nodeType":"ElementaryTypeName","src":"636:6:2","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"535:129:2"},"scope":102,"src":"474:191:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":103,"src":"57:610:2","usedErrors":[]}],"src":"32:636:2"},"id":2},"@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol","exportedSymbols":{"AggregatorInterface":[47],"AggregatorV2V3Interface":[56],"AggregatorV3Interface":[102],"MockV3Aggregator":[308]},"id":309,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":104,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol","file":"../interfaces/AggregatorV2V3Interface.sol","id":105,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":309,"sourceUnit":57,"src":"57:51:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":107,"name":"AggregatorV2V3Interface","nameLocations":["402:23:3"],"nodeType":"IdentifierPath","referencedDeclaration":56,"src":"402:23:3"},"id":108,"nodeType":"InheritanceSpecifier","src":"402:23:3"}],"canonicalName":"MockV3Aggregator","contractDependencies":[],"contractKind":"contract","documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"110:262:3","text":" @title MockV3Aggregator\n @notice Based on the FluxAggregator contract\n @notice Use this contract when you need to test\n other contract's ability to read data from an\n aggregator contract, but how the aggregator got\n its answer is unimportant"},"fullyImplemented":true,"id":308,"linearizedBaseContracts":[308,56,102,47],"name":"MockV3Aggregator","nameLocation":"382:16:3","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[73],"constant":true,"functionSelector":"54fd4d50","id":112,"mutability":"constant","name":"version","nameLocation":"463:7:3","nodeType":"VariableDeclaration","overrides":{"id":110,"nodeType":"OverrideSpecifier","overrides":[],"src":"454:8:3"},"scope":308,"src":"430:44:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":109,"name":"uint256","nodeType":"ElementaryTypeName","src":"430:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"473:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"baseFunctions":[63],"constant":false,"functionSelector":"313ce567","id":115,"mutability":"mutable","name":"decimals","nameLocation":"501:8:3","nodeType":"VariableDeclaration","overrides":{"id":114,"nodeType":"OverrideSpecifier","overrides":[],"src":"492:8:3"},"scope":308,"src":"479:30:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":113,"name":"uint8","nodeType":"ElementaryTypeName","src":"479:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"public"},{"baseFunctions":[6],"constant":false,"functionSelector":"50d25bcd","id":118,"mutability":"mutable","name":"latestAnswer","nameLocation":"536:12:3","nodeType":"VariableDeclaration","overrides":{"id":117,"nodeType":"OverrideSpecifier","overrides":[],"src":"527:8:3"},"scope":308,"src":"513:35:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":116,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"public"},{"baseFunctions":[11],"constant":false,"functionSelector":"8205bf6a","id":121,"mutability":"mutable","name":"latestTimestamp","nameLocation":"576:15:3","nodeType":"VariableDeclaration","overrides":{"id":120,"nodeType":"OverrideSpecifier","overrides":[],"src":"567:8:3"},"scope":308,"src":"552:39:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[16],"constant":false,"functionSelector":"668a0f02","id":124,"mutability":"mutable","name":"latestRound","nameLocation":"619:11:3","nodeType":"VariableDeclaration","overrides":{"id":123,"nodeType":"OverrideSpecifier","overrides":[],"src":"610:8:3"},"scope":308,"src":"595:35:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":122,"name":"uint256","nodeType":"ElementaryTypeName","src":"595:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[23],"constant":false,"functionSelector":"b5ab58dc","id":129,"mutability":"mutable","name":"getAnswer","nameLocation":"678:9:3","nodeType":"VariableDeclaration","overrides":{"id":128,"nodeType":"OverrideSpecifier","overrides":[],"src":"669:8:3"},"scope":308,"src":"635:52:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"},"typeName":{"id":127,"keyType":{"id":125,"name":"uint256","nodeType":"ElementaryTypeName","src":"643:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"635:26:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"},"valueType":{"id":126,"name":"int256","nodeType":"ElementaryTypeName","src":"654:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}},"visibility":"public"},{"baseFunctions":[30],"constant":false,"functionSelector":"b633620c","id":134,"mutability":"mutable","name":"getTimestamp","nameLocation":"735:12:3","nodeType":"VariableDeclaration","overrides":{"id":133,"nodeType":"OverrideSpecifier","overrides":[],"src":"726:8:3"},"scope":308,"src":"691:56:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":132,"keyType":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"691:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"710:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"id":138,"mutability":"mutable","name":"getStartedAt","nameLocation":"787:12:3","nodeType":"VariableDeclaration","scope":308,"src":"751:48:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":137,"keyType":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"759:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"751:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"770:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":153,"nodeType":"Block","src":"856:65:3","statements":[{"expression":{"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":145,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"862:8:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":146,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"873:9:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"862:20:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":148,"nodeType":"ExpressionStatement","src":"862:20:3"},{"expression":{"arguments":[{"id":150,"name":"_initialAnswer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"901:14:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":149,"name":"updateAnswer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"888:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_int256_$returns$__$","typeString":"function (int256)"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"888:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":152,"nodeType":"ExpressionStatement","src":"888:28:3"}]},"id":154,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"_decimals","nameLocation":"822:9:3","nodeType":"VariableDeclaration","scope":154,"src":"816:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":139,"name":"uint8","nodeType":"ElementaryTypeName","src":"816:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":142,"mutability":"mutable","name":"_initialAnswer","nameLocation":"840:14:3","nodeType":"VariableDeclaration","scope":154,"src":"833:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":141,"name":"int256","nodeType":"ElementaryTypeName","src":"833:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"815:40:3"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[],"src":"856:0:3"},"scope":308,"src":"804:117:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":191,"nodeType":"Block","src":"970:227:3","statements":[{"expression":{"id":161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":159,"name":"latestAnswer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"976:12:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":160,"name":"_answer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"991:7:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"976:22:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":162,"nodeType":"ExpressionStatement","src":"976:22:3"},{"expression":{"id":166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":163,"name":"latestTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"1004:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":164,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1022:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1028:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"1022:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1004:33:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":167,"nodeType":"ExpressionStatement","src":"1004:33:3"},{"expression":{"id":169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1043:13:3","subExpression":{"id":168,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1043:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":170,"nodeType":"ExpressionStatement","src":"1043:13:3"},{"expression":{"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":171,"name":"getAnswer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"1062:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"}},"id":173,"indexExpression":{"id":172,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1072:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1062:22:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":174,"name":"_answer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"1087:7:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1062:32:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":176,"nodeType":"ExpressionStatement","src":"1062:32:3"},{"expression":{"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":177,"name":"getTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"1100:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":179,"indexExpression":{"id":178,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1113:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1100:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":180,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1128:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1134:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"1128:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1100:43:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":183,"nodeType":"ExpressionStatement","src":"1100:43:3"},{"expression":{"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":184,"name":"getStartedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"1149:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":186,"indexExpression":{"id":185,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1162:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1149:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":187,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1177:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1183:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"1177:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1149:43:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":190,"nodeType":"ExpressionStatement","src":"1149:43:3"}]},"functionSelector":"a87a20ce","id":192,"implemented":true,"kind":"function","modifiers":[],"name":"updateAnswer","nameLocation":"934:12:3","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"_answer","nameLocation":"954:7:3","nodeType":"VariableDeclaration","scope":192,"src":"947:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":155,"name":"int256","nodeType":"ElementaryTypeName","src":"947:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"946:16:3"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"970:0:3"},"scope":308,"src":"925:272:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":233,"nodeType":"Block","src":"1326:221:3","statements":[{"expression":{"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":203,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1332:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":204,"name":"_roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"1346:8:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"1332:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":206,"nodeType":"ExpressionStatement","src":"1332:22:3"},{"expression":{"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":207,"name":"latestAnswer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"1360:12:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":208,"name":"_answer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"1375:7:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1360:22:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":210,"nodeType":"ExpressionStatement","src":"1360:22:3"},{"expression":{"id":213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":211,"name":"latestTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"1388:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":212,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"1406:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1388:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":214,"nodeType":"ExpressionStatement","src":"1388:28:3"},{"expression":{"id":219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":215,"name":"getAnswer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"1422:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"}},"id":217,"indexExpression":{"id":216,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1432:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1422:22:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":218,"name":"_answer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"1447:7:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1422:32:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":220,"nodeType":"ExpressionStatement","src":"1422:32:3"},{"expression":{"id":225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":221,"name":"getTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"1460:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":223,"indexExpression":{"id":222,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1473:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1460:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":224,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"1488:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1460:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":226,"nodeType":"ExpressionStatement","src":"1460:38:3"},{"expression":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":227,"name":"getStartedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"1504:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":229,"indexExpression":{"id":228,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1517:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1504:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":230,"name":"_startedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"1532:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1504:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":232,"nodeType":"ExpressionStatement","src":"1504:38:3"}]},"functionSelector":"4aa2011f","id":234,"implemented":true,"kind":"function","modifiers":[],"name":"updateRoundData","nameLocation":"1210:15:3","nodeType":"FunctionDefinition","parameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"mutability":"mutable","name":"_roundId","nameLocation":"1238:8:3","nodeType":"VariableDeclaration","scope":234,"src":"1231:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":193,"name":"uint80","nodeType":"ElementaryTypeName","src":"1231:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":196,"mutability":"mutable","name":"_answer","nameLocation":"1259:7:3","nodeType":"VariableDeclaration","scope":234,"src":"1252:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":195,"name":"int256","nodeType":"ElementaryTypeName","src":"1252:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":198,"mutability":"mutable","name":"_timestamp","nameLocation":"1280:10:3","nodeType":"VariableDeclaration","scope":234,"src":"1272:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"1272:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"_startedAt","nameLocation":"1304:10:3","nodeType":"VariableDeclaration","scope":234,"src":"1296:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1296:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1225:93:3"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"1326:0:3"},"scope":308,"src":"1201:346:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[88],"body":{"id":263,"nodeType":"Block","src":"1769:107:3","statements":[{"expression":{"components":[{"id":250,"name":"_roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"1783:8:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},{"baseExpression":{"id":251,"name":"getAnswer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"1793:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"}},"id":253,"indexExpression":{"id":252,"name":"_roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"1803:8:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1793:19:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"baseExpression":{"id":254,"name":"getStartedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"1814:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":256,"indexExpression":{"id":255,"name":"_roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"1827:8:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1814:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":257,"name":"getTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"1838:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":259,"indexExpression":{"id":258,"name":"_roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"1851:8:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1838:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":260,"name":"_roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"1862:8:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}}],"id":261,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1782:89:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"functionReturnParameters":249,"id":262,"nodeType":"Return","src":"1775:96:3"}]},"functionSelector":"9a6fc8f5","id":264,"implemented":true,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"1560:12:3","nodeType":"FunctionDefinition","overrides":{"id":238,"nodeType":"OverrideSpecifier","overrides":[],"src":"1616:8:3"},"parameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"_roundId","nameLocation":"1580:8:3","nodeType":"VariableDeclaration","scope":264,"src":"1573:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":235,"name":"uint80","nodeType":"ElementaryTypeName","src":"1573:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"1572:17:3"},"returnParameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"roundId","nameLocation":"1652:7:3","nodeType":"VariableDeclaration","scope":264,"src":"1645:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":239,"name":"uint80","nodeType":"ElementaryTypeName","src":"1645:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"answer","nameLocation":"1674:6:3","nodeType":"VariableDeclaration","scope":264,"src":"1667:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":241,"name":"int256","nodeType":"ElementaryTypeName","src":"1667:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"startedAt","nameLocation":"1696:9:3","nodeType":"VariableDeclaration","scope":264,"src":"1688:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":246,"mutability":"mutable","name":"updatedAt","nameLocation":"1721:9:3","nodeType":"VariableDeclaration","scope":264,"src":"1713:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"answeredInRound","nameLocation":"1745:15:3","nodeType":"VariableDeclaration","scope":264,"src":"1738:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":247,"name":"uint80","nodeType":"ElementaryTypeName","src":"1738:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"1637:129:3"},"scope":308,"src":"1551:325:3","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[101],"body":{"id":297,"nodeType":"Block","src":"2086:174:3","statements":[{"expression":{"components":[{"arguments":[{"id":280,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"2114:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2107:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":278,"name":"uint80","nodeType":"ElementaryTypeName","src":"2107:6:3","typeDescriptions":{}}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},{"baseExpression":{"id":282,"name":"getAnswer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"2134:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"}},"id":284,"indexExpression":{"id":283,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"2144:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2134:22:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"baseExpression":{"id":285,"name":"getStartedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2164:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":287,"indexExpression":{"id":286,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"2177:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2164:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":288,"name":"getTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"2197:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":290,"indexExpression":{"id":289,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"2210:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2197:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":293,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"2237:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2230:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":291,"name":"uint80","nodeType":"ElementaryTypeName","src":"2230:6:3","typeDescriptions":{}}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2230:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}}],"id":295,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2099:156:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"functionReturnParameters":277,"id":296,"nodeType":"Return","src":"2092:163:3"}]},"functionSelector":"feaf968c","id":298,"implemented":true,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"1889:15:3","nodeType":"FunctionDefinition","overrides":{"id":266,"nodeType":"OverrideSpecifier","overrides":[],"src":"1933:8:3"},"parameters":{"id":265,"nodeType":"ParameterList","parameters":[],"src":"1904:2:3"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"roundId","nameLocation":"1969:7:3","nodeType":"VariableDeclaration","scope":298,"src":"1962:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":267,"name":"uint80","nodeType":"ElementaryTypeName","src":"1962:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"answer","nameLocation":"1991:6:3","nodeType":"VariableDeclaration","scope":298,"src":"1984:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":269,"name":"int256","nodeType":"ElementaryTypeName","src":"1984:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"startedAt","nameLocation":"2013:9:3","nodeType":"VariableDeclaration","scope":298,"src":"2005:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"2005:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":274,"mutability":"mutable","name":"updatedAt","nameLocation":"2038:9:3","nodeType":"VariableDeclaration","scope":298,"src":"2030:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"answeredInRound","nameLocation":"2062:15:3","nodeType":"VariableDeclaration","scope":298,"src":"2055:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":275,"name":"uint80","nodeType":"ElementaryTypeName","src":"2055:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"1954:129:3"},"scope":308,"src":"1880:380:3","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[68],"body":{"id":306,"nodeType":"Block","src":"2334:51:3","statements":[{"expression":{"hexValue":"76302e382f74657374732f4d6f636b563341676772656761746f722e736f6c","id":304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2347:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_1583df519de0267d1fe0fb4803ed81323a5c7e5832c55a7505336a880acbae83","typeString":"literal_string \"v0.8/tests/MockV3Aggregator.sol\""},"value":"v0.8/tests/MockV3Aggregator.sol"},"functionReturnParameters":303,"id":305,"nodeType":"Return","src":"2340:40:3"}]},"functionSelector":"7284e416","id":307,"implemented":true,"kind":"function","modifiers":[],"name":"description","nameLocation":"2273:11:3","nodeType":"FunctionDefinition","overrides":{"id":300,"nodeType":"OverrideSpecifier","overrides":[],"src":"2301:8:3"},"parameters":{"id":299,"nodeType":"ParameterList","parameters":[],"src":"2284:2:3"},"returnParameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":307,"src":"2319:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":301,"name":"string","nodeType":"ElementaryTypeName","src":"2319:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2318:15:3"},"scope":308,"src":"2264:121:3","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":309,"src":"373:2014:3","usedErrors":[]}],"src":"32:2356:3"},"id":3},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1019],"ERC20":[894],"IERC20":[972],"IERC20Metadata":[997]},"id":895,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":310,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":311,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":895,"sourceUnit":973,"src":"130:22:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":312,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":895,"sourceUnit":998,"src":"153:41:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":895,"sourceUnit":1020,"src":"195:33:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":315,"name":"Context","nameLocations":["1421:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"1421:7:4"},"id":316,"nodeType":"InheritanceSpecifier","src":"1421:7:4"},{"baseName":{"id":317,"name":"IERC20","nameLocations":["1430:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":972,"src":"1430:6:4"},"id":318,"nodeType":"InheritanceSpecifier","src":"1430:6:4"},{"baseName":{"id":319,"name":"IERC20Metadata","nameLocations":["1438:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":997,"src":"1438:14:4"},"id":320,"nodeType":"InheritanceSpecifier","src":"1438:14:4"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"230:1172:4","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":894,"linearizedBaseContracts":[894,997,972,1019],"name":"ERC20","nameLocation":"1412:5:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":324,"mutability":"mutable","name":"_balances","nameLocation":"1495:9:4","nodeType":"VariableDeclaration","scope":894,"src":"1459:45:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":323,"keyType":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1467:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1459:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"1478:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":330,"mutability":"mutable","name":"_allowances","nameLocation":"1567:11:4","nodeType":"VariableDeclaration","scope":894,"src":"1511:67:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":329,"keyType":{"id":325,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1511:47:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":328,"keyType":{"id":326,"name":"address","nodeType":"ElementaryTypeName","src":"1538:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1530:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":332,"mutability":"mutable","name":"_totalSupply","nameLocation":"1601:12:4","nodeType":"VariableDeclaration","scope":894,"src":"1585:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"1585:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":334,"mutability":"mutable","name":"_name","nameLocation":"1635:5:4","nodeType":"VariableDeclaration","scope":894,"src":"1620:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":333,"name":"string","nodeType":"ElementaryTypeName","src":"1620:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":336,"mutability":"mutable","name":"_symbol","nameLocation":"1661:7:4","nodeType":"VariableDeclaration","scope":894,"src":"1646:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":335,"name":"string","nodeType":"ElementaryTypeName","src":"1646:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":352,"nodeType":"Block","src":"2034:57:4","statements":[{"expression":{"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":344,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2044:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":345,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"2052:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2044:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":347,"nodeType":"ExpressionStatement","src":"2044:13:4"},{"expression":{"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":348,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"2067:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":349,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"2077:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2067:17:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":351,"nodeType":"ExpressionStatement","src":"2067:17:4"}]},"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"1675:298:4","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":353,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"name_","nameLocation":"2004:5:4","nodeType":"VariableDeclaration","scope":353,"src":"1990:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":338,"name":"string","nodeType":"ElementaryTypeName","src":"1990:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"symbol_","nameLocation":"2025:7:4","nodeType":"VariableDeclaration","scope":353,"src":"2011:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":340,"name":"string","nodeType":"ElementaryTypeName","src":"2011:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1989:44:4"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[],"src":"2034:0:4"},"scope":894,"src":"1978:113:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[984],"body":{"id":362,"nodeType":"Block","src":"2225:29:4","statements":[{"expression":{"id":360,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2242:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":359,"id":361,"nodeType":"Return","src":"2235:12:4"}]},"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2097:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":363,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2165:4:4","nodeType":"FunctionDefinition","overrides":{"id":356,"nodeType":"OverrideSpecifier","overrides":[],"src":"2192:8:4"},"parameters":{"id":355,"nodeType":"ParameterList","parameters":[],"src":"2169:2:4"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"2210:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":357,"name":"string","nodeType":"ElementaryTypeName","src":"2210:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2209:15:4"},"scope":894,"src":"2156:98:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[990],"body":{"id":372,"nodeType":"Block","src":"2438:31:4","statements":[{"expression":{"id":370,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"2455:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":369,"id":371,"nodeType":"Return","src":"2448:14:4"}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"2260:102:4","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":373,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2376:6:4","nodeType":"FunctionDefinition","overrides":{"id":366,"nodeType":"OverrideSpecifier","overrides":[],"src":"2405:8:4"},"parameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"2382:2:4"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":373,"src":"2423:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":367,"name":"string","nodeType":"ElementaryTypeName","src":"2423:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2422:15:4"},"scope":894,"src":"2367:102:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[996],"body":{"id":382,"nodeType":"Block","src":"3158:26:4","statements":[{"expression":{"hexValue":"3138","id":380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3175:2:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":379,"id":381,"nodeType":"Return","src":"3168:9:4"}]},"documentation":{"id":374,"nodeType":"StructuredDocumentation","src":"2475:613:4","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":383,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3102:8:4","nodeType":"FunctionDefinition","overrides":{"id":376,"nodeType":"OverrideSpecifier","overrides":[],"src":"3133:8:4"},"parameters":{"id":375,"nodeType":"ParameterList","parameters":[],"src":"3110:2:4"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":383,"src":"3151:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":377,"name":"uint8","nodeType":"ElementaryTypeName","src":"3151:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3150:7:4"},"scope":894,"src":"3093:91:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[921],"body":{"id":392,"nodeType":"Block","src":"3314:36:4","statements":[{"expression":{"id":390,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3331:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":389,"id":391,"nodeType":"Return","src":"3324:19:4"}]},"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"3190:49:4","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":393,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3253:11:4","nodeType":"FunctionDefinition","overrides":{"id":386,"nodeType":"OverrideSpecifier","overrides":[],"src":"3287:8:4"},"parameters":{"id":385,"nodeType":"ParameterList","parameters":[],"src":"3264:2:4"},"returnParameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":393,"src":"3305:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"3305:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3304:9:4"},"scope":894,"src":"3244:106:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[929],"body":{"id":406,"nodeType":"Block","src":"3491:42:4","statements":[{"expression":{"baseExpression":{"id":402,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"3508:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":404,"indexExpression":{"id":403,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"3518:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3508:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":401,"id":405,"nodeType":"Return","src":"3501:25:4"}]},"documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"3356:47:4","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":407,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3417:9:4","nodeType":"FunctionDefinition","overrides":{"id":398,"nodeType":"OverrideSpecifier","overrides":[],"src":"3464:8:4"},"parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"account","nameLocation":"3435:7:4","nodeType":"VariableDeclaration","scope":407,"src":"3427:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"3427:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3426:17:4"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":407,"src":"3482:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"3482:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3481:9:4"},"scope":894,"src":"3408:125:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[939],"body":{"id":431,"nodeType":"Block","src":"3814:104:4","statements":[{"assignments":[419],"declarations":[{"constant":false,"id":419,"mutability":"mutable","name":"owner","nameLocation":"3832:5:4","nodeType":"VariableDeclaration","scope":431,"src":"3824:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"3824:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":422,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":420,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"3840:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3840:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3824:28:4"},{"expression":{"arguments":[{"id":424,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"3872:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":425,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"3879:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":426,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"3883:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":423,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"3862:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"ExpressionStatement","src":"3862:28:4"},{"expression":{"hexValue":"74727565","id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3907:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":417,"id":430,"nodeType":"Return","src":"3900:11:4"}]},"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"3539:185:4","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":432,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3738:8:4","nodeType":"FunctionDefinition","overrides":{"id":414,"nodeType":"OverrideSpecifier","overrides":[],"src":"3790:8:4"},"parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"to","nameLocation":"3755:2:4","nodeType":"VariableDeclaration","scope":432,"src":"3747:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"3747:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":412,"mutability":"mutable","name":"amount","nameLocation":"3767:6:4","nodeType":"VariableDeclaration","scope":432,"src":"3759:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":411,"name":"uint256","nodeType":"ElementaryTypeName","src":"3759:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3746:28:4"},"returnParameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":432,"src":"3808:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":415,"name":"bool","nodeType":"ElementaryTypeName","src":"3808:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3807:6:4"},"scope":894,"src":"3729:189:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[949],"body":{"id":449,"nodeType":"Block","src":"4074:51:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":443,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"4091:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":445,"indexExpression":{"id":444,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"4103:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4091:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":447,"indexExpression":{"id":446,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"4110:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4091:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":442,"id":448,"nodeType":"Return","src":"4084:34:4"}]},"documentation":{"id":433,"nodeType":"StructuredDocumentation","src":"3924:47:4","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":450,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3985:9:4","nodeType":"FunctionDefinition","overrides":{"id":439,"nodeType":"OverrideSpecifier","overrides":[],"src":"4047:8:4"},"parameters":{"id":438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"owner","nameLocation":"4003:5:4","nodeType":"VariableDeclaration","scope":450,"src":"3995:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":434,"name":"address","nodeType":"ElementaryTypeName","src":"3995:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":437,"mutability":"mutable","name":"spender","nameLocation":"4018:7:4","nodeType":"VariableDeclaration","scope":450,"src":"4010:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"4010:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3994:32:4"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":450,"src":"4065:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":440,"name":"uint256","nodeType":"ElementaryTypeName","src":"4065:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4064:9:4"},"scope":894,"src":"3976:149:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[959],"body":{"id":474,"nodeType":"Block","src":"4522:108:4","statements":[{"assignments":[462],"declarations":[{"constant":false,"id":462,"mutability":"mutable","name":"owner","nameLocation":"4540:5:4","nodeType":"VariableDeclaration","scope":474,"src":"4532:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"4532:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":465,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":463,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"4548:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4548:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4532:28:4"},{"expression":{"arguments":[{"id":467,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4579:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":468,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"4586:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"4595:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":466,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"4570:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4570:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"4570:32:4"},{"expression":{"hexValue":"74727565","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4619:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":460,"id":473,"nodeType":"Return","src":"4612:11:4"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"4131:297:4","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":475,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4442:7:4","nodeType":"FunctionDefinition","overrides":{"id":457,"nodeType":"OverrideSpecifier","overrides":[],"src":"4498:8:4"},"parameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"spender","nameLocation":"4458:7:4","nodeType":"VariableDeclaration","scope":475,"src":"4450:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"4450:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"amount","nameLocation":"4475:6:4","nodeType":"VariableDeclaration","scope":475,"src":"4467:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":454,"name":"uint256","nodeType":"ElementaryTypeName","src":"4467:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:33:4"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":475,"src":"4516:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":458,"name":"bool","nodeType":"ElementaryTypeName","src":"4516:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4515:6:4"},"scope":894,"src":"4433:197:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[971],"body":{"id":507,"nodeType":"Block","src":"5325:153:4","statements":[{"assignments":[489],"declarations":[{"constant":false,"id":489,"mutability":"mutable","name":"spender","nameLocation":"5343:7:4","nodeType":"VariableDeclaration","scope":507,"src":"5335:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"5335:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":492,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":490,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"5353:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5353:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5335:30:4"},{"expression":{"arguments":[{"id":494,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"5391:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":495,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"5397:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":496,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"5406:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":493,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"5375:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":498,"nodeType":"ExpressionStatement","src":"5375:38:4"},{"expression":{"arguments":[{"id":500,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"5433:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":501,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"5439:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":502,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"5443:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":499,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"5423:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5423:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"ExpressionStatement","src":"5423:27:4"},{"expression":{"hexValue":"74727565","id":505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5467:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":487,"id":506,"nodeType":"Return","src":"5460:11:4"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"4636:551:4","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":508,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5201:12:4","nodeType":"FunctionDefinition","overrides":{"id":484,"nodeType":"OverrideSpecifier","overrides":[],"src":"5301:8:4"},"parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"from","nameLocation":"5231:4:4","nodeType":"VariableDeclaration","scope":508,"src":"5223:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"5223:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"to","nameLocation":"5253:2:4","nodeType":"VariableDeclaration","scope":508,"src":"5245:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"5245:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"amount","nameLocation":"5273:6:4","nodeType":"VariableDeclaration","scope":508,"src":"5265:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"5265:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5213:72:4"},"returnParameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":508,"src":"5319:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":485,"name":"bool","nodeType":"ElementaryTypeName","src":"5319:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5318:6:4"},"scope":894,"src":"5192:286:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":536,"nodeType":"Block","src":"5967:140:4","statements":[{"assignments":[519],"declarations":[{"constant":false,"id":519,"mutability":"mutable","name":"owner","nameLocation":"5985:5:4","nodeType":"VariableDeclaration","scope":536,"src":"5977:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"5977:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":522,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":520,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"5993:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5993:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5977:28:4"},{"expression":{"arguments":[{"id":524,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"6024:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":525,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"6031:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":527,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"6050:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":528,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"6057:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":526,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6040:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6040:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":530,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"6068:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:38:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":523,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"6015:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6015:64:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"6015:64:4"},{"expression":{"hexValue":"74727565","id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6096:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":517,"id":535,"nodeType":"Return","src":"6089:11:4"}]},"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"5484:384:4","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":537,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5882:17:4","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"spender","nameLocation":"5908:7:4","nodeType":"VariableDeclaration","scope":537,"src":"5900:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"5900:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"addedValue","nameLocation":"5925:10:4","nodeType":"VariableDeclaration","scope":537,"src":"5917:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":512,"name":"uint256","nodeType":"ElementaryTypeName","src":"5917:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5899:37:4"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":537,"src":"5961:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":515,"name":"bool","nodeType":"ElementaryTypeName","src":"5961:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5960:6:4"},"scope":894,"src":"5873:234:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":577,"nodeType":"Block","src":"6693:328:4","statements":[{"assignments":[548],"declarations":[{"constant":false,"id":548,"mutability":"mutable","name":"owner","nameLocation":"6711:5:4","nodeType":"VariableDeclaration","scope":577,"src":"6703:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":547,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":551,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":549,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"6719:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6719:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6703:28:4"},{"assignments":[553],"declarations":[{"constant":false,"id":553,"mutability":"mutable","name":"currentAllowance","nameLocation":"6749:16:4","nodeType":"VariableDeclaration","scope":577,"src":"6741:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"6741:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":558,"initialValue":{"arguments":[{"id":555,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"6778:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":556,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"6785:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":554,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6768:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6768:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6741:52:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":560,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"6811:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":561,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"6831:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6811:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6848:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":559,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6803:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6803:85:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":565,"nodeType":"ExpressionStatement","src":"6803:85:4"},{"id":574,"nodeType":"UncheckedBlock","src":"6898:95:4","statements":[{"expression":{"arguments":[{"id":567,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"6931:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":568,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"6938:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":569,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"6947:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":570,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"6966:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6947:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":566,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"6922:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":573,"nodeType":"ExpressionStatement","src":"6922:60:4"}]},{"expression":{"hexValue":"74727565","id":575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7010:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":546,"id":576,"nodeType":"Return","src":"7003:11:4"}]},"documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"6113:476:4","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":578,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6603:17:4","nodeType":"FunctionDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":540,"mutability":"mutable","name":"spender","nameLocation":"6629:7:4","nodeType":"VariableDeclaration","scope":578,"src":"6621:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"6621:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":542,"mutability":"mutable","name":"subtractedValue","nameLocation":"6646:15:4","nodeType":"VariableDeclaration","scope":578,"src":"6638:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":541,"name":"uint256","nodeType":"ElementaryTypeName","src":"6638:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6620:42:4"},"returnParameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":578,"src":"6687:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":544,"name":"bool","nodeType":"ElementaryTypeName","src":"6687:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6686:6:4"},"scope":894,"src":"6594:427:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":654,"nodeType":"Block","src":"7583:543:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":589,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"7601:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7617:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7609:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"7609:7:4","typeDescriptions":{}}},"id":593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7609:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7601:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7621:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":588,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7593:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":597,"nodeType":"ExpressionStatement","src":"7593:68:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":599,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"7679:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7693:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7685:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"7685:7:4","typeDescriptions":{}}},"id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7685:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7679:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7697:37:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":598,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7671:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7671:64:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"7671:64:4"},{"expression":{"arguments":[{"id":609,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"7767:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":610,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"7773:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":611,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"7777:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":608,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"7746:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7746:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":613,"nodeType":"ExpressionStatement","src":"7746:38:4"},{"assignments":[615],"declarations":[{"constant":false,"id":615,"mutability":"mutable","name":"fromBalance","nameLocation":"7803:11:4","nodeType":"VariableDeclaration","scope":654,"src":"7795:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":614,"name":"uint256","nodeType":"ElementaryTypeName","src":"7795:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":619,"initialValue":{"baseExpression":{"id":616,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"7817:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":618,"indexExpression":{"id":617,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"7827:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7817:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7795:37:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":621,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"7850:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":622,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"7865:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7873:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":620,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7842:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7842:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":626,"nodeType":"ExpressionStatement","src":"7842:72:4"},{"id":635,"nodeType":"UncheckedBlock","src":"7924:73:4","statements":[{"expression":{"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":627,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"7948:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":629,"indexExpression":{"id":628,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"7958:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7948:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":630,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"7966:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":631,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"7980:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7966:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:38:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":634,"nodeType":"ExpressionStatement","src":"7948:38:4"}]},{"expression":{"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":636,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"8006:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":638,"indexExpression":{"id":637,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"8016:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8006:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":639,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"8023:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8006:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":641,"nodeType":"ExpressionStatement","src":"8006:23:4"},{"eventCall":{"arguments":[{"id":643,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"8054:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":644,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"8060:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":645,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"8064:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":642,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"8045:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8045:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":647,"nodeType":"EmitStatement","src":"8040:31:4"},{"expression":{"arguments":[{"id":649,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"8102:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":650,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"8108:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":651,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"8112:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":648,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"8082:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8082:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"ExpressionStatement","src":"8082:37:4"}]},"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"7027:443:4","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":655,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7484:9:4","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"from","nameLocation":"7511:4:4","nodeType":"VariableDeclaration","scope":655,"src":"7503:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"7503:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":583,"mutability":"mutable","name":"to","nameLocation":"7533:2:4","nodeType":"VariableDeclaration","scope":655,"src":"7525:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":582,"name":"address","nodeType":"ElementaryTypeName","src":"7525:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":585,"mutability":"mutable","name":"amount","nameLocation":"7553:6:4","nodeType":"VariableDeclaration","scope":655,"src":"7545:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":584,"name":"uint256","nodeType":"ElementaryTypeName","src":"7545:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7493:72:4"},"returnParameters":{"id":587,"nodeType":"ParameterList","parameters":[],"src":"7583:0:4"},"scope":894,"src":"7475:651:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":710,"nodeType":"Block","src":"8467:324:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":664,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"8485:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8504:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8496:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"8496:7:4","typeDescriptions":{}}},"id":668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8496:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8485:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8508:33:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":663,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8477:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8477:65:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":672,"nodeType":"ExpressionStatement","src":"8477:65:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8582:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8574:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"8574:7:4","typeDescriptions":{}}},"id":677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8574:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":678,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"8586:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":679,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"8595:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":673,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"8553:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8553:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":681,"nodeType":"ExpressionStatement","src":"8553:49:4"},{"expression":{"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":682,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"8613:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":683,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"8629:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":685,"nodeType":"ExpressionStatement","src":"8613:22:4"},{"expression":{"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":686,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"8645:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":688,"indexExpression":{"id":687,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"8655:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8645:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":689,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"8667:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8645:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":691,"nodeType":"ExpressionStatement","src":"8645:28:4"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8705:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8697:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"8697:7:4","typeDescriptions":{}}},"id":696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8697:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":697,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"8709:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":698,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"8718:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":692,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"8688:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8688:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":700,"nodeType":"EmitStatement","src":"8683:42:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8764:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8756:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":702,"name":"address","nodeType":"ElementaryTypeName","src":"8756:7:4","typeDescriptions":{}}},"id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8756:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":706,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"8768:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":707,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"8777:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":701,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"8736:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8736:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":709,"nodeType":"ExpressionStatement","src":"8736:48:4"}]},"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"8132:265:4","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":711,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8411:5:4","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"account","nameLocation":"8425:7:4","nodeType":"VariableDeclaration","scope":711,"src":"8417:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"8417:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":660,"mutability":"mutable","name":"amount","nameLocation":"8442:6:4","nodeType":"VariableDeclaration","scope":711,"src":"8434:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":659,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8416:33:4"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"8467:0:4"},"scope":894,"src":"8402:389:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":782,"nodeType":"Block","src":"9176:511:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":720,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"9194:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9213:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9205:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"9205:7:4","typeDescriptions":{}}},"id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9205:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9194:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9217:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":719,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9186:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:67:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":728,"nodeType":"ExpressionStatement","src":"9186:67:4"},{"expression":{"arguments":[{"id":730,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"9285:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9302:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9294:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"9294:7:4","typeDescriptions":{}}},"id":734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9294:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":735,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"9306:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":729,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"9264:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9264:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":737,"nodeType":"ExpressionStatement","src":"9264:49:4"},{"assignments":[739],"declarations":[{"constant":false,"id":739,"mutability":"mutable","name":"accountBalance","nameLocation":"9332:14:4","nodeType":"VariableDeclaration","scope":782,"src":"9324:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"9324:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":743,"initialValue":{"baseExpression":{"id":740,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"9349:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":742,"indexExpression":{"id":741,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"9359:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9349:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9324:43:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":745,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"9385:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":746,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"9403:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9385:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9411:36:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":744,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9377:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9377:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":750,"nodeType":"ExpressionStatement","src":"9377:71:4"},{"id":759,"nodeType":"UncheckedBlock","src":"9458:79:4","statements":[{"expression":{"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":751,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"9482:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":753,"indexExpression":{"id":752,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"9492:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9482:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":754,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"9503:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":755,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"9520:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9503:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9482:44:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":758,"nodeType":"ExpressionStatement","src":"9482:44:4"}]},{"expression":{"id":762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":760,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"9546:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":761,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"9562:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9546:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":763,"nodeType":"ExpressionStatement","src":"9546:22:4"},{"eventCall":{"arguments":[{"id":765,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"9593:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9610:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9602:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"9602:7:4","typeDescriptions":{}}},"id":769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9602:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":770,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"9614:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":764,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"9584:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9584:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":772,"nodeType":"EmitStatement","src":"9579:42:4"},{"expression":{"arguments":[{"id":774,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"9652:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9669:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9661:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":775,"name":"address","nodeType":"ElementaryTypeName","src":"9661:7:4","typeDescriptions":{}}},"id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9661:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":779,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"9673:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":773,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"9632:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9632:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":781,"nodeType":"ExpressionStatement","src":"9632:48:4"}]},"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"8797:309:4","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":783,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9120:5:4","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"account","nameLocation":"9134:7:4","nodeType":"VariableDeclaration","scope":783,"src":"9126:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"9126:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"amount","nameLocation":"9151:6:4","nodeType":"VariableDeclaration","scope":783,"src":"9143:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":715,"name":"uint256","nodeType":"ElementaryTypeName","src":"9143:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9125:33:4"},"returnParameters":{"id":718,"nodeType":"ParameterList","parameters":[],"src":"9176:0:4"},"scope":894,"src":"9111:576:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":827,"nodeType":"Block","src":"10223:257:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":794,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10241:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10258:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10250:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"10250:7:4","typeDescriptions":{}}},"id":798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10250:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10241:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10262:38:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":793,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10233:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10233:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":802,"nodeType":"ExpressionStatement","src":"10233:68:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":804,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"10319:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10338:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10330:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"10330:7:4","typeDescriptions":{}}},"id":808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10330:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10319:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10342:36:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":803,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10311:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10311:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":812,"nodeType":"ExpressionStatement","src":"10311:68:4"},{"expression":{"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":813,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"10390:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":816,"indexExpression":{"id":814,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10402:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10390:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":817,"indexExpression":{"id":815,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"10409:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10390:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":818,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"10420:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10390:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":820,"nodeType":"ExpressionStatement","src":"10390:36:4"},{"eventCall":{"arguments":[{"id":822,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10450:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":823,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"10457:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":824,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"10466:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":821,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"10441:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10441:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":826,"nodeType":"EmitStatement","src":"10436:37:4"}]},"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"9693:412:4","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":828,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10119:8:4","nodeType":"FunctionDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"owner","nameLocation":"10145:5:4","nodeType":"VariableDeclaration","scope":828,"src":"10137:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":788,"mutability":"mutable","name":"spender","nameLocation":"10168:7:4","nodeType":"VariableDeclaration","scope":828,"src":"10160:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":787,"name":"address","nodeType":"ElementaryTypeName","src":"10160:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"amount","nameLocation":"10193:6:4","nodeType":"VariableDeclaration","scope":828,"src":"10185:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":789,"name":"uint256","nodeType":"ElementaryTypeName","src":"10185:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10127:78:4"},"returnParameters":{"id":792,"nodeType":"ParameterList","parameters":[],"src":"10223:0:4"},"scope":894,"src":"10110:370:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":870,"nodeType":"Block","src":"10881:321:4","statements":[{"assignments":[839],"declarations":[{"constant":false,"id":839,"mutability":"mutable","name":"currentAllowance","nameLocation":"10899:16:4","nodeType":"VariableDeclaration","scope":870,"src":"10891:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"10891:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":844,"initialValue":{"arguments":[{"id":841,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"10928:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":842,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"10935:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":840,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"10918:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10918:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10891:52:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":845,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"10957:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10982:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":847,"name":"uint256","nodeType":"ElementaryTypeName","src":"10982:7:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":846,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10977:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10977:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10991:3:4","memberName":"max","nodeType":"MemberAccess","src":"10977:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10957:37:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":869,"nodeType":"IfStatement","src":"10953:243:4","trueBody":{"id":868,"nodeType":"Block","src":"10996:200:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":853,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"11018:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":854,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"11038:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11018:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11046:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":852,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11010:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11010:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":858,"nodeType":"ExpressionStatement","src":"11010:68:4"},{"id":867,"nodeType":"UncheckedBlock","src":"11092:94:4","statements":[{"expression":{"arguments":[{"id":860,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"11129:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":861,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"11136:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":862,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"11145:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":863,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"11164:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11145:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":859,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"11120:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11120:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":866,"nodeType":"ExpressionStatement","src":"11120:51:4"}]}]}}]},"documentation":{"id":829,"nodeType":"StructuredDocumentation","src":"10486:270:4","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":871,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10770:15:4","nodeType":"FunctionDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"owner","nameLocation":"10803:5:4","nodeType":"VariableDeclaration","scope":871,"src":"10795:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"10795:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":833,"mutability":"mutable","name":"spender","nameLocation":"10826:7:4","nodeType":"VariableDeclaration","scope":871,"src":"10818:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"10818:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":835,"mutability":"mutable","name":"amount","nameLocation":"10851:6:4","nodeType":"VariableDeclaration","scope":871,"src":"10843:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"10843:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10785:78:4"},"returnParameters":{"id":837,"nodeType":"ParameterList","parameters":[],"src":"10881:0:4"},"scope":894,"src":"10761:441:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":881,"nodeType":"Block","src":"11905:2:4","statements":[]},"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"11208:573:4","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":882,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"11795:20:4","nodeType":"FunctionDefinition","parameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"from","nameLocation":"11833:4:4","nodeType":"VariableDeclaration","scope":882,"src":"11825:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"11825:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":876,"mutability":"mutable","name":"to","nameLocation":"11855:2:4","nodeType":"VariableDeclaration","scope":882,"src":"11847:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"11847:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":878,"mutability":"mutable","name":"amount","nameLocation":"11875:6:4","nodeType":"VariableDeclaration","scope":882,"src":"11867:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":877,"name":"uint256","nodeType":"ElementaryTypeName","src":"11867:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11815:72:4"},"returnParameters":{"id":880,"nodeType":"ParameterList","parameters":[],"src":"11905:0:4"},"scope":894,"src":"11786:121:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":892,"nodeType":"Block","src":"12613:2:4","statements":[]},"documentation":{"id":883,"nodeType":"StructuredDocumentation","src":"11913:577:4","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":893,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12504:19:4","nodeType":"FunctionDefinition","parameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"from","nameLocation":"12541:4:4","nodeType":"VariableDeclaration","scope":893,"src":"12533:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":884,"name":"address","nodeType":"ElementaryTypeName","src":"12533:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":887,"mutability":"mutable","name":"to","nameLocation":"12563:2:4","nodeType":"VariableDeclaration","scope":893,"src":"12555:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"12555:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":889,"mutability":"mutable","name":"amount","nameLocation":"12583:6:4","nodeType":"VariableDeclaration","scope":893,"src":"12575:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":888,"name":"uint256","nodeType":"ElementaryTypeName","src":"12575:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12523:72:4"},"returnParameters":{"id":891,"nodeType":"ParameterList","parameters":[],"src":"12613:0:4"},"scope":894,"src":"12495:120:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":895,"src":"1403:11214:4","usedErrors":[]}],"src":"105:12513:4"},"id":4},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[972]},"id":973,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":896,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"131:70:5","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":972,"linearizedBaseContracts":[972],"name":"IERC20","nameLocation":"212:6:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":898,"nodeType":"StructuredDocumentation","src":"225:158:5","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":906,"name":"Transfer","nameLocation":"394:8:5","nodeType":"EventDefinition","parameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:5","nodeType":"VariableDeclaration","scope":906,"src":"403:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":902,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:5","nodeType":"VariableDeclaration","scope":906,"src":"425:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":904,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:5","nodeType":"VariableDeclaration","scope":906,"src":"445:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":903,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:5"},"src":"388:72:5"},{"anonymous":false,"documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"466:148:5","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":915,"name":"Approval","nameLocation":"625:8:5","nodeType":"EventDefinition","parameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:5","nodeType":"VariableDeclaration","scope":915,"src":"634:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":911,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:5","nodeType":"VariableDeclaration","scope":915,"src":"657:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":910,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":913,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:5","nodeType":"VariableDeclaration","scope":915,"src":"682:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":912,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:5"},"src":"619:78:5"},{"documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"703:66:5","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":921,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:5","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[],"src":"794:2:5"},"returnParameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":921,"src":"820:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":918,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:5"},"scope":972,"src":"774:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":922,"nodeType":"StructuredDocumentation","src":"835:72:5","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":929,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:5","nodeType":"FunctionDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"account","nameLocation":"939:7:5","nodeType":"VariableDeclaration","scope":929,"src":"931:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:5"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":929,"src":"971:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":926,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:5"},"scope":972,"src":"912:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":930,"nodeType":"StructuredDocumentation","src":"986:202:5","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":939,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:5","nodeType":"FunctionDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"to","nameLocation":"1219:2:5","nodeType":"VariableDeclaration","scope":939,"src":"1211:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":931,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":934,"mutability":"mutable","name":"amount","nameLocation":"1231:6:5","nodeType":"VariableDeclaration","scope":939,"src":"1223:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:5"},"returnParameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":939,"src":"1257:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":936,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:5"},"scope":972,"src":"1193:70:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":940,"nodeType":"StructuredDocumentation","src":"1269:264:5","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":949,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:5","nodeType":"FunctionDefinition","parameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"owner","nameLocation":"1565:5:5","nodeType":"VariableDeclaration","scope":949,"src":"1557:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":941,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":944,"mutability":"mutable","name":"spender","nameLocation":"1580:7:5","nodeType":"VariableDeclaration","scope":949,"src":"1572:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":943,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:5"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":949,"src":"1612:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:5"},"scope":972,"src":"1538:83:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"1627:642:5","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":959,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:5","nodeType":"FunctionDefinition","parameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"spender","nameLocation":"2299:7:5","nodeType":"VariableDeclaration","scope":959,"src":"2291:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":951,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":954,"mutability":"mutable","name":"amount","nameLocation":"2316:6:5","nodeType":"VariableDeclaration","scope":959,"src":"2308:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:5"},"returnParameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":959,"src":"2342:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":956,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:5"},"scope":972,"src":"2274:74:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":960,"nodeType":"StructuredDocumentation","src":"2354:287:5","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":971,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:5","nodeType":"FunctionDefinition","parameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"from","nameLocation":"2685:4:5","nodeType":"VariableDeclaration","scope":971,"src":"2677:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"to","nameLocation":"2707:2:5","nodeType":"VariableDeclaration","scope":971,"src":"2699:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"amount","nameLocation":"2727:6:5","nodeType":"VariableDeclaration","scope":971,"src":"2719:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":965,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:5"},"returnParameters":{"id":970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":971,"src":"2758:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":968,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:5"},"scope":972,"src":"2646:118:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":973,"src":"202:2564:5","usedErrors":[]}],"src":"106:2661:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[972],"IERC20Metadata":[997]},"id":998,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":974,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":975,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":998,"sourceUnit":973,"src":"135:23:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":977,"name":"IERC20","nameLocations":["305:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":972,"src":"305:6:6"},"id":978,"nodeType":"InheritanceSpecifier","src":"305:6:6"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":976,"nodeType":"StructuredDocumentation","src":"160:116:6","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":997,"linearizedBaseContracts":[997,972],"name":"IERC20Metadata","nameLocation":"287:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":979,"nodeType":"StructuredDocumentation","src":"318:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":984,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:6","nodeType":"FunctionDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[],"src":"390:2:6"},"returnParameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":984,"src":"416:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":981,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:6"},"scope":997,"src":"377:54:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":985,"nodeType":"StructuredDocumentation","src":"437:56:6","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":990,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:6","nodeType":"FunctionDefinition","parameters":{"id":986,"nodeType":"ParameterList","parameters":[],"src":"513:2:6"},"returnParameters":{"id":989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":990,"src":"539:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":987,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:6"},"scope":997,"src":"498:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":991,"nodeType":"StructuredDocumentation","src":"560:65:6","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":996,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:6","nodeType":"FunctionDefinition","parameters":{"id":992,"nodeType":"ParameterList","parameters":[],"src":"647:2:6"},"returnParameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":996,"src":"673:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":993,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:6"},"scope":997,"src":"630:50:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":998,"src":"277:405:6","usedErrors":[]}],"src":"110:573:6"},"id":6},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1019]},"id":1020,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":999,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:7"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"111:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1019,"linearizedBaseContracts":[1019],"name":"Context","nameLocation":"626:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1008,"nodeType":"Block","src":"702:34:7","statements":[{"expression":{"expression":{"id":1005,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:7","memberName":"sender","nodeType":"MemberAccess","src":"719:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1004,"id":1007,"nodeType":"Return","src":"712:17:7"}]},"id":1009,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:7","nodeType":"FunctionDefinition","parameters":{"id":1001,"nodeType":"ParameterList","parameters":[],"src":"659:2:7"},"returnParameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1009,"src":"693:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1002,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:7"},"scope":1019,"src":"640:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1017,"nodeType":"Block","src":"809:32:7","statements":[{"expression":{"expression":{"id":1014,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:7","memberName":"data","nodeType":"MemberAccess","src":"826:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1013,"id":1016,"nodeType":"Return","src":"819:15:7"}]},"id":1018,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:7","nodeType":"FunctionDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[],"src":"759:2:7"},"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1018,"src":"793:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1011,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:7"},"scope":1019,"src":"742:99:7","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1020,"src":"608:235:7","usedErrors":[]}],"src":"86:758:7"},"id":7},"contracts/CAT.sol":{"ast":{"absolutePath":"contracts/CAT.sol","exportedSymbols":{"CAT":[1058],"Context":[1019],"ERC20":[894],"IERC20":[972],"IERC20Metadata":[997]},"id":1059,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1021,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"35:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1022,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1059,"sourceUnit":895,"src":"63:55:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1023,"name":"ERC20","nameLocations":["138:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":894,"src":"138:5:8"},"id":1024,"nodeType":"InheritanceSpecifier","src":"138:5:8"}],"canonicalName":"CAT","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1058,"linearizedBaseContracts":[1058,894,997,972,1019],"name":"CAT","nameLocation":"131:3:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1043,"nodeType":"Block","src":"282:51:8","statements":[{"expression":{"arguments":[{"expression":{"id":1038,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"299:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"303:6:8","memberName":"sender","nodeType":"MemberAccess","src":"299:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1040,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"311:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1037,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"293:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"293:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1042,"nodeType":"ExpressionStatement","src":"293:32:8"}]},"id":1044,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1033,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"268:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1034,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"274:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":1035,"kind":"baseConstructorSpecifier","modifierName":{"id":1032,"name":"ERC20","nameLocations":["262:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":894,"src":"262:5:8"},"nodeType":"ModifierInvocation","src":"262:19:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"initialSupply","nameLocation":"181:13:8","nodeType":"VariableDeclaration","scope":1044,"src":"173:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1025,"name":"uint256","nodeType":"ElementaryTypeName","src":"173:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1028,"mutability":"mutable","name":"name","nameLocation":"219:4:8","nodeType":"VariableDeclaration","scope":1044,"src":"205:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1027,"name":"string","nodeType":"ElementaryTypeName","src":"205:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"symbol","nameLocation":"248:6:8","nodeType":"VariableDeclaration","scope":1044,"src":"234:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1029,"name":"string","nodeType":"ElementaryTypeName","src":"234:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"162:99:8"},"returnParameters":{"id":1036,"nodeType":"ParameterList","parameters":[],"src":"282:0:8"},"scope":1058,"src":"151:182:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1056,"nodeType":"Block","src":"408:50:8","statements":[{"expression":{"arguments":[{"id":1052,"name":"receivingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"425:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1053,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"443:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1051,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"419:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"419:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1055,"nodeType":"ExpressionStatement","src":"419:31:8"}]},"functionSelector":"2daf865d","id":1057,"implemented":true,"kind":"function","modifiers":[],"name":"_mintCAT","nameLocation":"350:8:8","nodeType":"FunctionDefinition","parameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1046,"mutability":"mutable","name":"receivingAddress","nameLocation":"367:16:8","nodeType":"VariableDeclaration","scope":1057,"src":"359:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"359:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"amount","nameLocation":"393:6:8","nodeType":"VariableDeclaration","scope":1057,"src":"385:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1047,"name":"uint256","nodeType":"ElementaryTypeName","src":"385:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"358:42:8"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[],"src":"408:0:8"},"scope":1058,"src":"341:117:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1059,"src":"122:339:8","usedErrors":[]}],"src":"35:428:8"},"id":8},"contracts/Gold-feed.sol":{"ast":{"absolutePath":"contracts/Gold-feed.sol","exportedSymbols":{"AggregatorV3Interface":[102],"GoldPriceFeed":[1099]},"id":1100,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1060,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"155:23:9"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":1061,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1100,"sourceUnit":103,"src":"182:76:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"GoldPriceFeed","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1099,"linearizedBaseContracts":[1099],"name":"GoldPriceFeed","nameLocation":"271:13:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1064,"mutability":"mutable","name":"priceFeed","nameLocation":"323:9:9","nodeType":"VariableDeclaration","scope":1099,"src":"292:40:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$102","typeString":"contract AggregatorV3Interface"},"typeName":{"id":1063,"nodeType":"UserDefinedTypeName","pathNode":{"id":1062,"name":"AggregatorV3Interface","nameLocations":["292:21:9"],"nodeType":"IdentifierPath","referencedDeclaration":102,"src":"292:21:9"},"referencedDeclaration":102,"src":"292:21:9","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$102","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"},{"body":{"id":1074,"nodeType":"Block","src":"522:96:9","statements":[{"expression":{"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1068,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"533:9:9","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$102","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"307837623231394635376138653943373330333230344166363831653966413639643137656636323666","id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"567:42:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x7b219F57a8e9C7303204Af681e9fA69d17ef626f"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1069,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"545:21:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$102_$","typeString":"type(contract AggregatorV3Interface)"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"545:65:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$102","typeString":"contract AggregatorV3Interface"}},"src":"533:77:9","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$102","typeString":"contract AggregatorV3Interface"}},"id":1073,"nodeType":"ExpressionStatement","src":"533:77:9"}]},"documentation":{"id":1065,"nodeType":"StructuredDocumentation","src":"341:154:9","text":" DEMO: Goerli Testnet via LINK Proxy IDs\n Aggregator1: Gold XAU/USD\n Address: 0x7b219F57a8e9C7303204Af681e9fA69d17ef626f"},"id":1075,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1066,"nodeType":"ParameterList","parameters":[],"src":"512:2:9"},"returnParameters":{"id":1067,"nodeType":"ParameterList","parameters":[],"src":"522:0:9"},"scope":1099,"src":"501:117:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1097,"nodeType":"Block","src":"742:240:9","statements":[{"assignments":[1082,1084,1086,1088,1090],"declarations":[{"constant":false,"id":1082,"mutability":"mutable","name":"roundID","nameLocation":"775:7:9","nodeType":"VariableDeclaration","scope":1097,"src":"768:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":1081,"name":"uint80","nodeType":"ElementaryTypeName","src":"768:6:9","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"price","nameLocation":"804:5:9","nodeType":"VariableDeclaration","scope":1097,"src":"797:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1083,"name":"int256","nodeType":"ElementaryTypeName","src":"797:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"startedAt","nameLocation":"832:9:9","nodeType":"VariableDeclaration","scope":1097,"src":"824:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"824:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1088,"mutability":"mutable","name":"timeStamp","nameLocation":"864:9:9","nodeType":"VariableDeclaration","scope":1097,"src":"856:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1087,"name":"uint256","nodeType":"ElementaryTypeName","src":"856:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1090,"mutability":"mutable","name":"answeredInRound","nameLocation":"895:15:9","nodeType":"VariableDeclaration","scope":1097,"src":"888:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":1089,"name":"uint80","nodeType":"ElementaryTypeName","src":"888:6:9","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"id":1094,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1091,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"924:9:9","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$102","typeString":"contract AggregatorV3Interface"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"934:15:9","memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":101,"src":"924:25:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"924:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"753:198:9"},{"expression":{"id":1095,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"969:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1080,"id":1096,"nodeType":"Return","src":"962:12:9"}]},"documentation":{"id":1076,"nodeType":"StructuredDocumentation","src":"626:49:9","text":" Return the latest gold price"},"functionSelector":"bfa73fd4","id":1098,"implemented":true,"kind":"function","modifiers":[],"name":"getLatestPriceGold","nameLocation":"692:18:9","nodeType":"FunctionDefinition","parameters":{"id":1077,"nodeType":"ParameterList","parameters":[],"src":"710:2:9"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1098,"src":"734:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1078,"name":"int256","nodeType":"ElementaryTypeName","src":"734:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"733:8:9"},"scope":1099,"src":"683:299:9","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1100,"src":"262:723:9","usedErrors":[]}],"src":"155:847:9"},"id":9},"contracts/Loan.sol":{"ast":{"absolutePath":"contracts/Loan.sol","exportedSymbols":{"Loan":[1127]},"id":1128,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1101,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Loan","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1127,"linearizedBaseContracts":[1127],"name":"Loan","nameLocation":"83:4:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1103,"mutability":"mutable","name":"s_blockHeightLastInterestUpdate","nameLocation":"300:31:10","nodeType":"VariableDeclaration","scope":1127,"src":"284:47:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1102,"name":"uint256","nodeType":"ElementaryTypeName","src":"284:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1107,"mutability":"mutable","name":"collateralAmountByToken","nameLocation":"366:23:10","nodeType":"VariableDeclaration","scope":1127,"src":"338:51:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1106,"keyType":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"346:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"338:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"357:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"functionSelector":"9608b232","id":1109,"mutability":"immutable","name":"i_token","nameLocation":"423:7:10","nodeType":"VariableDeclaration","scope":1127,"src":"398:32:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1108,"name":"address","nodeType":"ElementaryTypeName","src":"398:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":1123,"nodeType":"Block","src":"475:103:10","statements":[{"expression":{"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1114,"name":"i_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"486:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1115,"name":"commodityToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"496:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"486:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1117,"nodeType":"ExpressionStatement","src":"486:24:10"},{"expression":{"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1118,"name":"s_blockHeightLastInterestUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"521:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1119,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"555:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"561:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"555:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"521:49:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1122,"nodeType":"ExpressionStatement","src":"521:49:10"}]},"id":1124,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"commodityToken","nameLocation":"459:14:10","nodeType":"VariableDeclaration","scope":1124,"src":"451:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"451:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"450:24:10"},"returnParameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"475:0:10"},"scope":1127,"src":"439:139:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"constant":false,"id":1126,"mutability":"mutable","name":"s_amountBorrowedPerToken","nameLocation":"602:24:10","nodeType":"VariableDeclaration","scope":1127,"src":"586:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1125,"name":"uint256","nodeType":"ElementaryTypeName","src":"586:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"}],"scope":1128,"src":"74:615:10","usedErrors":[]}],"src":"32:659:10"},"id":10},"contracts/Vault.sol":{"ast":{"absolutePath":"contracts/Vault.sol","exportedSymbols":{"CAT":[1058],"Context":[1019],"ERC20":[894],"IERC20":[972],"IERC20Metadata":[997],"Loan":[1127],"Vault":[1181]},"id":1182,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1129,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:11"},{"absolutePath":"contracts/CAT.sol","file":"./CAT.sol","id":1130,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1182,"sourceUnit":1059,"src":"140:19:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Loan.sol","file":"./Loan.sol","id":1131,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1182,"sourceUnit":1128,"src":"161:20:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Vault","contractDependencies":[1058],"contractKind":"contract","fullyImplemented":true,"id":1181,"linearizedBaseContracts":[1181],"name":"Vault","nameLocation":"194:5:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1134,"mutability":"immutable","name":"i_token","nameLocation":"229:7:11","nodeType":"VariableDeclaration","scope":1181,"src":"207:29:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_CAT_$1058","typeString":"contract CAT"},"typeName":{"id":1133,"nodeType":"UserDefinedTypeName","pathNode":{"id":1132,"name":"CAT","nameLocations":["207:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":1058,"src":"207:3:11"},"referencedDeclaration":1058,"src":"207:3:11","typeDescriptions":{"typeIdentifier":"t_contract$_CAT_$1058","typeString":"contract CAT"}},"visibility":"private"},{"constant":false,"id":1139,"mutability":"mutable","name":"s_addressesToLoans","nameLocation":"276:18:11","nodeType":"VariableDeclaration","scope":1181,"src":"243:51:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_Loan_$1127_$","typeString":"mapping(address => contract Loan)"},"typeName":{"id":1138,"keyType":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"251:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"243:24:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_Loan_$1127_$","typeString":"mapping(address => contract Loan)"},"valueType":{"id":1137,"nodeType":"UserDefinedTypeName","pathNode":{"id":1136,"name":"Loan","nameLocations":["262:4:11"],"nodeType":"IdentifierPath","referencedDeclaration":1127,"src":"262:4:11"},"referencedDeclaration":1127,"src":"262:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Loan_$1127","typeString":"contract Loan"}}},"visibility":"private"},{"body":{"id":1156,"nodeType":"Block","src":"389:103:11","statements":[{"expression":{"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1146,"name":"i_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"400:7:11","typeDescriptions":{"typeIdentifier":"t_contract$_CAT_$1058","typeString":"contract CAT"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":1150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"418:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1151,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"421:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1152,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"427:6:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"410:7:11","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_CAT_$1058_$","typeString":"function (uint256,string memory,string memory) returns (contract CAT)"},"typeName":{"id":1148,"nodeType":"UserDefinedTypeName","pathNode":{"id":1147,"name":"CAT","nameLocations":["414:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":1058,"src":"414:3:11"},"referencedDeclaration":1058,"src":"414:3:11","typeDescriptions":{"typeIdentifier":"t_contract$_CAT_$1058","typeString":"contract CAT"}}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"410:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_CAT_$1058","typeString":"contract CAT"}},"src":"400:34:11","typeDescriptions":{"typeIdentifier":"t_contract$_CAT_$1058","typeString":"contract CAT"}},"id":1155,"nodeType":"ExpressionStatement","src":"400:34:11"}]},"id":1157,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"name","nameLocation":"361:4:11","nodeType":"VariableDeclaration","scope":1157,"src":"347:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1140,"name":"string","nodeType":"ElementaryTypeName","src":"347:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"symbol","nameLocation":"381:6:11","nodeType":"VariableDeclaration","scope":1157,"src":"367:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1142,"name":"string","nodeType":"ElementaryTypeName","src":"367:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"346:42:11"},"returnParameters":{"id":1145,"nodeType":"ParameterList","parameters":[],"src":"389:0:11"},"scope":1181,"src":"335:157:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1170,"nodeType":"Block","src":"547:440:11","statements":[{"documentation":"1. check if this user is allowed to borrow: i.e. has remaining free collateral\n 2. mint the tokens & send to user\n 3. update Loan object\n 4. add Loan object to s_addressesToLoans","expression":{"arguments":[{"expression":{"id":1165,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"917:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"921:6:11","memberName":"sender","nodeType":"MemberAccess","src":"917:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1167,"name":"toBorrowAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"929:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1162,"name":"i_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"900:7:11","typeDescriptions":{"typeIdentifier":"t_contract$_CAT_$1058","typeString":"contract CAT"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"908:8:11","memberName":"_mintCAT","nodeType":"MemberAccess","referencedDeclaration":1057,"src":"900:16:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"900:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1169,"nodeType":"ExpressionStatement","src":"900:44:11"}]},"functionSelector":"c5ebeaec","id":1171,"implemented":true,"kind":"function","modifiers":[],"name":"borrow","nameLocation":"509:6:11","nodeType":"FunctionDefinition","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1159,"mutability":"mutable","name":"toBorrowAmount","nameLocation":"524:14:11","nodeType":"VariableDeclaration","scope":1171,"src":"516:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1158,"name":"uint256","nodeType":"ElementaryTypeName","src":"516:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"515:24:11"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[],"src":"547:0:11"},"scope":1181,"src":"500:487:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1179,"nodeType":"Block","src":"1041:33:11","statements":[{"expression":{"id":1177,"name":"i_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"1059:7:11","typeDescriptions":{"typeIdentifier":"t_contract$_CAT_$1058","typeString":"contract CAT"}},"functionReturnParameters":1176,"id":1178,"nodeType":"Return","src":"1052:14:11"}]},"functionSelector":"21df0da7","id":1180,"implemented":true,"kind":"function","modifiers":[],"name":"getToken","nameLocation":"1004:8:11","nodeType":"FunctionDefinition","parameters":{"id":1172,"nodeType":"ParameterList","parameters":[],"src":"1012:2:11"},"returnParameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1180,"src":"1036:3:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_CAT_$1058","typeString":"contract CAT"},"typeName":{"id":1174,"nodeType":"UserDefinedTypeName","pathNode":{"id":1173,"name":"CAT","nameLocations":["1036:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":1058,"src":"1036:3:11"},"referencedDeclaration":1058,"src":"1036:3:11","typeDescriptions":{"typeIdentifier":"t_contract$_CAT_$1058","typeString":"contract CAT"}},"visibility":"internal"}],"src":"1035:5:11"},"scope":1181,"src":"995:79:11","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1182,"src":"185:892:11","usedErrors":[]}],"src":"32:1047:11"},"id":11},"contracts/test/MockV3Aggregator.sol":{"ast":{"absolutePath":"contracts/test/MockV3Aggregator.sol","exportedSymbols":{"AggregatorInterface":[47],"AggregatorV2V3Interface":[56],"AggregatorV3Interface":[102],"MockV3Aggregator":[308]},"id":1185,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1183,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:12"},{"absolutePath":"@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol","file":"@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol","id":1184,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1185,"sourceUnit":309,"src":"60:66:12","symbolAliases":[],"unitAlias":""}],"src":"33:95:12"},"id":12}},"contracts":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol":{"AggregatorInterface":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"int256","name":"current","type":"int256"},{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"updatedAt","type":"uint256"}],"name":"AnswerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":true,"internalType":"address","name":"startedBy","type":"address"},{"indexed":false,"internalType":"uint256","name":"startedAt","type":"uint256"}],"name":"NewRound","type":"event"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"}],"name":"getAnswer","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"}],"name":"getTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestAnswer","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRound","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAnswer(uint256)":"b5ab58dc","getTimestamp(uint256)":"b633620c","latestAnswer()":"50d25bcd","latestRound()":"668a0f02","latestTimestamp()":"8205bf6a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"startedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"}],\"name\":\"NewRound\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":\"AggregatorInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorInterface {\\n  function latestAnswer() external view returns (int256);\\n\\n  function latestTimestamp() external view returns (uint256);\\n\\n  function latestRound() external view returns (uint256);\\n\\n  function getAnswer(uint256 roundId) external view returns (int256);\\n\\n  function getTimestamp(uint256 roundId) external view returns (uint256);\\n\\n  event AnswerUpdated(int256 indexed current, uint256 indexed roundId, uint256 updatedAt);\\n\\n  event NewRound(uint256 indexed roundId, address indexed startedBy, uint256 startedAt);\\n}\\n\",\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol":{"AggregatorV2V3Interface":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"int256","name":"current","type":"int256"},{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"updatedAt","type":"uint256"}],"name":"AnswerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":true,"internalType":"address","name":"startedBy","type":"address"},{"indexed":false,"internalType":"uint256","name":"startedAt","type":"uint256"}],"name":"NewRound","type":"event"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"}],"name":"getAnswer","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"}],"name":"getTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestAnswer","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRound","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getAnswer(uint256)":"b5ab58dc","getRoundData(uint80)":"9a6fc8f5","getTimestamp(uint256)":"b633620c","latestAnswer()":"50d25bcd","latestRound()":"668a0f02","latestRoundData()":"feaf968c","latestTimestamp()":"8205bf6a","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"startedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"}],\"name\":\"NewRound\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":\"AggregatorV2V3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorInterface {\\n  function latestAnswer() external view returns (int256);\\n\\n  function latestTimestamp() external view returns (uint256);\\n\\n  function latestRound() external view returns (uint256);\\n\\n  function getAnswer(uint256 roundId) external view returns (int256);\\n\\n  function getTimestamp(uint256 roundId) external view returns (uint256);\\n\\n  event AnswerUpdated(int256 indexed current, uint256 indexed roundId, uint256 updatedAt);\\n\\n  event NewRound(uint256 indexed roundId, address indexed startedBy, uint256 startedAt);\\n}\\n\",\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./AggregatorInterface.sol\\\";\\nimport \\\"./AggregatorV3Interface.sol\\\";\\n\\ninterface AggregatorV2V3Interface is AggregatorInterface, AggregatorV3Interface {}\\n\",\"keccak256\":\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol":{"MockV3Aggregator":{"abi":[{"inputs":[{"internalType":"uint8","name":"_decimals","type":"uint8"},{"internalType":"int256","name":"_initialAnswer","type":"int256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"int256","name":"current","type":"int256"},{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"updatedAt","type":"uint256"}],"name":"AnswerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":true,"internalType":"address","name":"startedBy","type":"address"},{"indexed":false,"internalType":"uint256","name":"startedAt","type":"uint256"}],"name":"NewRound","type":"event"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"getAnswer","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"getTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestAnswer","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRound","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int256","name":"_answer","type":"int256"}],"name":"updateAnswer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"},{"internalType":"int256","name":"_answer","type":"int256"},{"internalType":"uint256","name":"_timestamp","type":"uint256"},{"internalType":"uint256","name":"_startedAt","type":"uint256"}],"name":"updateRoundData","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"MockV3Aggregator","version":1},"evm":{"bytecode":{"functionDebugData":{"@_154":{"entryPoint":null,"id":154,"parameterSlots":2,"returnSlots":0},"@updateAnswer_192":{"entryPoint":106,"id":192,"parameterSlots":1,"returnSlots":0},"abi_decode_t_int256_fromMemory":{"entryPoint":330,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8_fromMemory":{"entryPoint":271,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint8t_int256_fromMemory":{"entryPoint":353,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_int256":{"entryPoint":294,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":471,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":232,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":481,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":424,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":227,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":304,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":245,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2062:13","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:13","statements":[{"nodeType":"YulAssignment","src":"57:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:13"},"nodeType":"YulFunctionCall","src":"67:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:13","type":""}],"src":"7:75:13"},{"body":{"nodeType":"YulBlock","src":"177:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:13"},"nodeType":"YulFunctionCall","src":"187:12:13"},"nodeType":"YulExpressionStatement","src":"187:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:13"},{"body":{"nodeType":"YulBlock","src":"300:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:13"},"nodeType":"YulFunctionCall","src":"310:12:13"},"nodeType":"YulExpressionStatement","src":"310:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:13"},{"body":{"nodeType":"YulBlock","src":"377:43:13","statements":[{"nodeType":"YulAssignment","src":"387:27:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"402:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"409:4:13","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"398:3:13"},"nodeType":"YulFunctionCall","src":"398:16:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"387:7:13"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"359:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"369:7:13","type":""}],"src":"334:86:13"},{"body":{"nodeType":"YulBlock","src":"467:77:13","statements":[{"body":{"nodeType":"YulBlock","src":"522:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"531:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"534:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"524:6:13"},"nodeType":"YulFunctionCall","src":"524:12:13"},"nodeType":"YulExpressionStatement","src":"524:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"490:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"513:5:13"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"497:15:13"},"nodeType":"YulFunctionCall","src":"497:22:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"487:2:13"},"nodeType":"YulFunctionCall","src":"487:33:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"480:6:13"},"nodeType":"YulFunctionCall","src":"480:41:13"},"nodeType":"YulIf","src":"477:61:13"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"460:5:13","type":""}],"src":"426:118:13"},{"body":{"nodeType":"YulBlock","src":"611:78:13","statements":[{"nodeType":"YulAssignment","src":"621:22:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"636:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"630:5:13"},"nodeType":"YulFunctionCall","src":"630:13:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"621:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:13"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"652:24:13"},"nodeType":"YulFunctionCall","src":"652:31:13"},"nodeType":"YulExpressionStatement","src":"652:31:13"}]},"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"589:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"597:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"605:5:13","type":""}],"src":"550:139:13"},{"body":{"nodeType":"YulBlock","src":"739:32:13","statements":[{"nodeType":"YulAssignment","src":"749:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"760:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"749:7:13"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"721:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"731:7:13","type":""}],"src":"695:76:13"},{"body":{"nodeType":"YulBlock","src":"819:78:13","statements":[{"body":{"nodeType":"YulBlock","src":"875:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"884:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"887:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"877:6:13"},"nodeType":"YulFunctionCall","src":"877:12:13"},"nodeType":"YulExpressionStatement","src":"877:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"842:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"866:5:13"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"849:16:13"},"nodeType":"YulFunctionCall","src":"849:23:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"839:2:13"},"nodeType":"YulFunctionCall","src":"839:34:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"832:6:13"},"nodeType":"YulFunctionCall","src":"832:42:13"},"nodeType":"YulIf","src":"829:62:13"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"812:5:13","type":""}],"src":"777:120:13"},{"body":{"nodeType":"YulBlock","src":"965:79:13","statements":[{"nodeType":"YulAssignment","src":"975:22:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"990:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"984:5:13"},"nodeType":"YulFunctionCall","src":"984:13:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"975:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1032:5:13"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"1006:25:13"},"nodeType":"YulFunctionCall","src":"1006:32:13"},"nodeType":"YulExpressionStatement","src":"1006:32:13"}]},"name":"abi_decode_t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"943:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"951:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"959:5:13","type":""}],"src":"903:141:13"},{"body":{"nodeType":"YulBlock","src":"1141:410:13","statements":[{"body":{"nodeType":"YulBlock","src":"1187:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1189:77:13"},"nodeType":"YulFunctionCall","src":"1189:79:13"},"nodeType":"YulExpressionStatement","src":"1189:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1162:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"1171:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1158:3:13"},"nodeType":"YulFunctionCall","src":"1158:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"1183:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1154:3:13"},"nodeType":"YulFunctionCall","src":"1154:32:13"},"nodeType":"YulIf","src":"1151:119:13"},{"nodeType":"YulBlock","src":"1280:126:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1295:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1309:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1299:6:13","type":""}]},{"nodeType":"YulAssignment","src":"1324:72:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1368:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"1379:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1364:3:13"},"nodeType":"YulFunctionCall","src":"1364:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1388:7:13"}],"functionName":{"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulIdentifier","src":"1334:29:13"},"nodeType":"YulFunctionCall","src":"1334:62:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1324:6:13"}]}]},{"nodeType":"YulBlock","src":"1416:128:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1431:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1445:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1435:6:13","type":""}]},{"nodeType":"YulAssignment","src":"1461:73:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1506:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"1517:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1502:3:13"},"nodeType":"YulFunctionCall","src":"1502:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1526:7:13"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nodeType":"YulIdentifier","src":"1471:30:13"},"nodeType":"YulFunctionCall","src":"1471:63:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1461:6:13"}]}]}]},"name":"abi_decode_tuple_t_uint8t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1103:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1114:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1126:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1134:6:13","type":""}],"src":"1050:501:13"},{"body":{"nodeType":"YulBlock","src":"1585:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1602:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1605:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1595:6:13"},"nodeType":"YulFunctionCall","src":"1595:88:13"},"nodeType":"YulExpressionStatement","src":"1595:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1699:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1702:4:13","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1692:6:13"},"nodeType":"YulFunctionCall","src":"1692:15:13"},"nodeType":"YulExpressionStatement","src":"1692:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1723:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1726:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1716:6:13"},"nodeType":"YulFunctionCall","src":"1716:15:13"},"nodeType":"YulExpressionStatement","src":"1716:15:13"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"1557:180:13"},{"body":{"nodeType":"YulBlock","src":"1788:32:13","statements":[{"nodeType":"YulAssignment","src":"1798:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"1809:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1798:7:13"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1770:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1780:7:13","type":""}],"src":"1743:77:13"},{"body":{"nodeType":"YulBlock","src":"1869:190:13","statements":[{"nodeType":"YulAssignment","src":"1879:33:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1906:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1888:17:13"},"nodeType":"YulFunctionCall","src":"1888:24:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1879:5:13"}]},{"body":{"nodeType":"YulBlock","src":"2002:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2004:16:13"},"nodeType":"YulFunctionCall","src":"2004:18:13"},"nodeType":"YulExpressionStatement","src":"2004:18:13"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1927:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"1934:66:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1924:2:13"},"nodeType":"YulFunctionCall","src":"1924:77:13"},"nodeType":"YulIf","src":"1921:103:13"},{"nodeType":"YulAssignment","src":"2033:20:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2044:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"2051:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2040:3:13"},"nodeType":"YulFunctionCall","src":"2040:13:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2033:3:13"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1855:5:13","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1865:3:13","type":""}],"src":"1826:233:13"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_uint8t_int256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000ae538038062000ae5833981810160405281019062000037919062000161565b816000806101000a81548160ff021916908360ff16021790555062000062816200006a60201b60201c565b50506200022e565b8060018190555042600281905550600360008154809291906200008d90620001e1565b919050555080600460006003548152602001908152602001600020819055504260056000600354815260200190815260200160002081905550426006600060035481526020019081526020016000208190555050565b600080fd5b600060ff82169050919050565b6200010081620000e8565b81146200010c57600080fd5b50565b6000815190506200012081620000f5565b92915050565b6000819050919050565b6200013b8162000126565b81146200014757600080fd5b50565b6000815190506200015b8162000130565b92915050565b600080604083850312156200017b576200017a620000e3565b5b60006200018b858286016200010f565b92505060206200019e858286016200014a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b6000620001ee82620001d7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620002235762000222620001a8565b5b600182019050919050565b6108a7806200023e6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638205bf6a116100715780638205bf6a1461016b5780639a6fc8f514610189578063a87a20ce146101bd578063b5ab58dc146101d9578063b633620c14610209578063feaf968c14610239576100b4565b8063313ce567146100b95780634aa2011f146100d757806350d25bcd146100f357806354fd4d5014610111578063668a0f021461012f5780637284e4161461014d575b600080fd5b6100c161025b565b6040516100ce91906104d6565b60405180910390f35b6100f160048036038101906100ec91906105a4565b61026c565b005b6100fb6102e1565b604051610108919061061a565b60405180910390f35b6101196102e7565b6040516101269190610644565b60405180910390f35b6101376102ec565b6040516101449190610644565b60405180910390f35b6101556102f2565b60405161016291906106ef565b60405180910390f35b61017361032f565b6040516101809190610644565b60405180910390f35b6101a3600480360381019061019e9190610711565b610335565b6040516101b495949392919061074d565b60405180910390f35b6101d760048036038101906101d291906107a0565b6103b2565b005b6101f360048036038101906101ee91906107cd565b610429565b604051610200919061061a565b60405180910390f35b610223600480360381019061021e91906107cd565b610441565b6040516102309190610644565b60405180910390f35b610241610459565b60405161025295949392919061074d565b60405180910390f35b60008054906101000a900460ff1681565b8369ffffffffffffffffffff16600381905550826001819055508160028190555082600460006003548152602001908152602001600020819055508160056000600354815260200190815260200160002081905550806006600060035481526020019081526020016000208190555050505050565b60015481565b600081565b60035481565b60606040518060400160405280601f81526020017f76302e382f74657374732f4d6f636b563341676772656761746f722e736f6c00815250905090565b60025481565b600080600080600085600460008869ffffffffffffffffffff16815260200190815260200160002054600660008969ffffffffffffffffffff16815260200190815260200160002054600560008a69ffffffffffffffffffff16815260200190815260200160002054899450945094509450945091939590929450565b8060018190555042600281905550600360008154809291906103d390610829565b919050555080600460006003548152602001908152602001600020819055504260056000600354815260200190815260200160002081905550426006600060035481526020019081526020016000208190555050565b60046020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b6000806000806000600354600460006003548152602001908152602001600020546006600060035481526020019081526020016000205460056000600354815260200190815260200160002054600354945094509450945094509091929394565b600060ff82169050919050565b6104d0816104ba565b82525050565b60006020820190506104eb60008301846104c7565b92915050565b600080fd5b600069ffffffffffffffffffff82169050919050565b610515816104f6565b811461052057600080fd5b50565b6000813590506105328161050c565b92915050565b6000819050919050565b61054b81610538565b811461055657600080fd5b50565b60008135905061056881610542565b92915050565b6000819050919050565b6105818161056e565b811461058c57600080fd5b50565b60008135905061059e81610578565b92915050565b600080600080608085870312156105be576105bd6104f1565b5b60006105cc87828801610523565b94505060206105dd87828801610559565b93505060406105ee8782880161058f565b92505060606105ff8782880161058f565b91505092959194509250565b61061481610538565b82525050565b600060208201905061062f600083018461060b565b92915050565b61063e8161056e565b82525050565b60006020820190506106596000830184610635565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561069957808201518184015260208101905061067e565b60008484015250505050565b6000601f19601f8301169050919050565b60006106c18261065f565b6106cb818561066a565b93506106db81856020860161067b565b6106e4816106a5565b840191505092915050565b6000602082019050818103600083015261070981846106b6565b905092915050565b600060208284031215610727576107266104f1565b5b600061073584828501610523565b91505092915050565b610747816104f6565b82525050565b600060a082019050610762600083018861073e565b61076f602083018761060b565b61077c6040830186610635565b6107896060830185610635565b610796608083018461073e565b9695505050505050565b6000602082840312156107b6576107b56104f1565b5b60006107c484828501610559565b91505092915050565b6000602082840312156107e3576107e26104f1565b5b60006107f18482850161058f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108348261056e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610866576108656107fa565b5b60018201905091905056fea2646970667358221220858e4ca811cf4a8c4e94daa1e56d2f66d793b6f2977f12e72002029340ccd4ca64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xAE5 CODESIZE SUB DUP1 PUSH3 0xAE5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x161 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x62 DUP2 PUSH3 0x6A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x22E JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH3 0x8D SWAP1 PUSH3 0x1E1 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x100 DUP2 PUSH3 0xE8 JUMP JUMPDEST DUP2 EQ PUSH3 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x120 DUP2 PUSH3 0xF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x13B DUP2 PUSH3 0x126 JUMP JUMPDEST DUP2 EQ PUSH3 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x15B DUP2 PUSH3 0x130 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x17B JUMPI PUSH3 0x17A PUSH3 0xE3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x18B DUP6 DUP3 DUP7 ADD PUSH3 0x10F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x19E DUP6 DUP3 DUP7 ADD PUSH3 0x14A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1EE DUP3 PUSH3 0x1D7 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x223 JUMPI PUSH3 0x222 PUSH3 0x1A8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8A7 DUP1 PUSH3 0x23E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8205BF6A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8205BF6A EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x9A6FC8F5 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xA87A20CE EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0xB5AB58DC EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xB633620C EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xFEAF968C EQ PUSH2 0x239 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x4AA2011F EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x50D25BCD EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x668A0F02 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x7284E416 EQ PUSH2 0x14D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x25B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x4D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFB PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x61A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x711 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x7A0 JUMP JUMPDEST PUSH2 0x3B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x61A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x441 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x252 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x4 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x76302E382F74657374732F4D6F636B563341676772656761746F722E736F6C00 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x6 PUSH1 0x0 DUP10 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x5 PUSH1 0x0 DUP11 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP10 SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3D3 SWAP1 PUSH2 0x829 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x4 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x6 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x5 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x3 SLOAD SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D0 DUP2 PUSH2 0x4BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4EB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x515 DUP2 PUSH2 0x4F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x532 DUP2 PUSH2 0x50C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x54B DUP2 PUSH2 0x538 JUMP JUMPDEST DUP2 EQ PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x568 DUP2 PUSH2 0x542 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x581 DUP2 PUSH2 0x56E JUMP JUMPDEST DUP2 EQ PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x59E DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x5BE JUMPI PUSH2 0x5BD PUSH2 0x4F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5CC DUP8 DUP3 DUP9 ADD PUSH2 0x523 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x5DD DUP8 DUP3 DUP9 ADD PUSH2 0x559 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x5EE DUP8 DUP3 DUP9 ADD PUSH2 0x58F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x5FF DUP8 DUP3 DUP9 ADD PUSH2 0x58F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x614 DUP2 PUSH2 0x538 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x62F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x60B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x63E DUP2 PUSH2 0x56E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x659 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x635 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x699 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x67E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C1 DUP3 PUSH2 0x65F JUMP JUMPDEST PUSH2 0x6CB DUP2 DUP6 PUSH2 0x66A JUMP JUMPDEST SWAP4 POP PUSH2 0x6DB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x67B JUMP JUMPDEST PUSH2 0x6E4 DUP2 PUSH2 0x6A5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x709 DUP2 DUP5 PUSH2 0x6B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x727 JUMPI PUSH2 0x726 PUSH2 0x4F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x735 DUP5 DUP3 DUP6 ADD PUSH2 0x523 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x747 DUP2 PUSH2 0x4F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x762 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x73E JUMP JUMPDEST PUSH2 0x76F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x60B JUMP JUMPDEST PUSH2 0x77C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x789 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x796 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x73E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B6 JUMPI PUSH2 0x7B5 PUSH2 0x4F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7C4 DUP5 DUP3 DUP6 ADD PUSH2 0x559 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7E3 JUMPI PUSH2 0x7E2 PUSH2 0x4F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7F1 DUP5 DUP3 DUP6 ADD PUSH2 0x58F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x834 DUP3 PUSH2 0x56E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x866 JUMPI PUSH2 0x865 PUSH2 0x7FA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 DUP15 0x4C 0xA8 GT 0xCF 0x4A DUP13 0x4E SWAP5 0xDA LOG1 0xE5 PUSH14 0x2F66D793B6F2977F12E720020293 BLOCKHASH 0xCC 0xD4 0xCA PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"373:2014:3:-:0;;;804:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;873:9;862:8;;:20;;;;;;;;;;;;;;;;;;888:28;901:14;888:12;;;:28;;:::i;:::-;804:117;;373:2014;;925:272;991:7;976:12;:22;;;;1022:15;1004;:33;;;;1043:11;;:13;;;;;;;;;:::i;:::-;;;;;;1087:7;1062:9;:22;1072:11;;1062:22;;;;;;;;;;;:32;;;;1128:15;1100:12;:25;1113:11;;1100:25;;;;;;;;;;;:43;;;;1177:15;1149:12;:25;1162:11;;1149:25;;;;;;;;;;;:43;;;;925:272;:::o;88:117:13:-;197:1;194;187:12;334:86;369:7;409:4;402:5;398:16;387:27;;334:86;;;:::o;426:118::-;497:22;513:5;497:22;:::i;:::-;490:5;487:33;477:61;;534:1;531;524:12;477:61;426:118;:::o;550:139::-;605:5;636:6;630:13;621:22;;652:31;677:5;652:31;:::i;:::-;550:139;;;;:::o;695:76::-;731:7;760:5;749:16;;695:76;;;:::o;777:120::-;849:23;866:5;849:23;:::i;:::-;842:5;839:34;829:62;;887:1;884;877:12;829:62;777:120;:::o;903:141::-;959:5;990:6;984:13;975:22;;1006:32;1032:5;1006:32;:::i;:::-;903:141;;;;:::o;1050:501::-;1126:6;1134;1183:2;1171:9;1162:7;1158:23;1154:32;1151:119;;;1189:79;;:::i;:::-;1151:119;1309:1;1334:62;1388:7;1379:6;1368:9;1364:22;1334:62;:::i;:::-;1324:72;;1280:126;1445:2;1471:63;1526:7;1517:6;1506:9;1502:22;1471:63;:::i;:::-;1461:73;;1416:128;1050:501;;;;;:::o;1557:180::-;1605:77;1602:1;1595:88;1702:4;1699:1;1692:15;1726:4;1723:1;1716:15;1743:77;1780:7;1809:5;1798:16;;1743:77;;;:::o;1826:233::-;1865:3;1888:24;1906:5;1888:24;:::i;:::-;1879:33;;1934:66;1927:5;1924:77;1921:103;;2004:18;;:::i;:::-;1921:103;2051:1;2044:5;2040:13;2033:20;;1826:233;;;:::o;373:2014:3:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@decimals_115":{"entryPoint":603,"id":115,"parameterSlots":0,"returnSlots":0},"@description_307":{"entryPoint":754,"id":307,"parameterSlots":0,"returnSlots":1},"@getAnswer_129":{"entryPoint":1065,"id":129,"parameterSlots":0,"returnSlots":0},"@getRoundData_264":{"entryPoint":821,"id":264,"parameterSlots":1,"returnSlots":5},"@getTimestamp_134":{"entryPoint":1089,"id":134,"parameterSlots":0,"returnSlots":0},"@latestAnswer_118":{"entryPoint":737,"id":118,"parameterSlots":0,"returnSlots":0},"@latestRoundData_298":{"entryPoint":1113,"id":298,"parameterSlots":0,"returnSlots":5},"@latestRound_124":{"entryPoint":748,"id":124,"parameterSlots":0,"returnSlots":0},"@latestTimestamp_121":{"entryPoint":815,"id":121,"parameterSlots":0,"returnSlots":0},"@updateAnswer_192":{"entryPoint":946,"id":192,"parameterSlots":1,"returnSlots":0},"@updateRoundData_234":{"entryPoint":620,"id":234,"parameterSlots":4,"returnSlots":0},"@version_112":{"entryPoint":743,"id":112,"parameterSlots":0,"returnSlots":0},"abi_decode_t_int256":{"entryPoint":1369,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1423,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint80":{"entryPoint":1315,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_int256":{"entryPoint":1952,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":1997,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80":{"entryPoint":1809,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256":{"entryPoint":1444,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_int256_to_t_int256_fromStack":{"entryPoint":1547,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":1718,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1589,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint80_to_t_uint80_fromStack":{"entryPoint":1854,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":1223,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":1562,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1775,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":1604,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint80_t_int256_t_uint256_t_uint256_t_uint80__to_t_uint80_t_int256_t_uint256_t_uint256_t_uint80__fromStack_reversed":{"entryPoint":1869,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":1238,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1631,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1642,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_int256":{"entryPoint":1336,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1390,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":1210,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint80":{"entryPoint":1270,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1659,"id":null,"parameterSlots":3,"returnSlots":0},"increment_t_uint256":{"entryPoint":2089,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2042,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1265,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1701,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_int256":{"entryPoint":1346,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1400,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint80":{"entryPoint":1292,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6859:13","statements":[{"body":{"nodeType":"YulBlock","src":"50:43:13","statements":[{"nodeType":"YulAssignment","src":"60:27:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"75:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"82:4:13","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"71:3:13"},"nodeType":"YulFunctionCall","src":"71:16:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"60:7:13"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"42:7:13","type":""}],"src":"7:86:13"},{"body":{"nodeType":"YulBlock","src":"160:51:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"177:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"198:5:13"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"182:15:13"},"nodeType":"YulFunctionCall","src":"182:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"170:6:13"},"nodeType":"YulFunctionCall","src":"170:35:13"},"nodeType":"YulExpressionStatement","src":"170:35:13"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"148:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"155:3:13","type":""}],"src":"99:112:13"},{"body":{"nodeType":"YulBlock","src":"311:120:13","statements":[{"nodeType":"YulAssignment","src":"321:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"333:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"344:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"329:3:13"},"nodeType":"YulFunctionCall","src":"329:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"321:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"397:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"410:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"421:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"406:3:13"},"nodeType":"YulFunctionCall","src":"406:17:13"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"357:39:13"},"nodeType":"YulFunctionCall","src":"357:67:13"},"nodeType":"YulExpressionStatement","src":"357:67:13"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"283:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"295:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"306:4:13","type":""}],"src":"217:214:13"},{"body":{"nodeType":"YulBlock","src":"477:35:13","statements":[{"nodeType":"YulAssignment","src":"487:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"503:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"497:5:13"},"nodeType":"YulFunctionCall","src":"497:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"487:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"470:6:13","type":""}],"src":"437:75:13"},{"body":{"nodeType":"YulBlock","src":"607:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"627:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"617:6:13"},"nodeType":"YulFunctionCall","src":"617:12:13"},"nodeType":"YulExpressionStatement","src":"617:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"518:117:13"},{"body":{"nodeType":"YulBlock","src":"730:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"747:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"750:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"740:6:13"},"nodeType":"YulFunctionCall","src":"740:12:13"},"nodeType":"YulExpressionStatement","src":"740:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"641:117:13"},{"body":{"nodeType":"YulBlock","src":"808:61:13","statements":[{"nodeType":"YulAssignment","src":"818:45:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"833:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"840:22:13","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"829:3:13"},"nodeType":"YulFunctionCall","src":"829:34:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"818:7:13"}]}]},"name":"cleanup_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"790:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"800:7:13","type":""}],"src":"764:105:13"},{"body":{"nodeType":"YulBlock","src":"917:78:13","statements":[{"body":{"nodeType":"YulBlock","src":"973:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"982:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"985:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"975:6:13"},"nodeType":"YulFunctionCall","src":"975:12:13"},"nodeType":"YulExpressionStatement","src":"975:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"940:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"964:5:13"}],"functionName":{"name":"cleanup_t_uint80","nodeType":"YulIdentifier","src":"947:16:13"},"nodeType":"YulFunctionCall","src":"947:23:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"937:2:13"},"nodeType":"YulFunctionCall","src":"937:34:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"930:6:13"},"nodeType":"YulFunctionCall","src":"930:42:13"},"nodeType":"YulIf","src":"927:62:13"}]},"name":"validator_revert_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"910:5:13","type":""}],"src":"875:120:13"},{"body":{"nodeType":"YulBlock","src":"1052:86:13","statements":[{"nodeType":"YulAssignment","src":"1062:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1084:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1071:12:13"},"nodeType":"YulFunctionCall","src":"1071:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1062:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1126:5:13"}],"functionName":{"name":"validator_revert_t_uint80","nodeType":"YulIdentifier","src":"1100:25:13"},"nodeType":"YulFunctionCall","src":"1100:32:13"},"nodeType":"YulExpressionStatement","src":"1100:32:13"}]},"name":"abi_decode_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1030:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"1038:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1046:5:13","type":""}],"src":"1001:137:13"},{"body":{"nodeType":"YulBlock","src":"1188:32:13","statements":[{"nodeType":"YulAssignment","src":"1198:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"1209:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1198:7:13"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1170:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1180:7:13","type":""}],"src":"1144:76:13"},{"body":{"nodeType":"YulBlock","src":"1268:78:13","statements":[{"body":{"nodeType":"YulBlock","src":"1324:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1333:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1336:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1326:6:13"},"nodeType":"YulFunctionCall","src":"1326:12:13"},"nodeType":"YulExpressionStatement","src":"1326:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1291:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1315:5:13"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"1298:16:13"},"nodeType":"YulFunctionCall","src":"1298:23:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1288:2:13"},"nodeType":"YulFunctionCall","src":"1288:34:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1281:6:13"},"nodeType":"YulFunctionCall","src":"1281:42:13"},"nodeType":"YulIf","src":"1278:62:13"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1261:5:13","type":""}],"src":"1226:120:13"},{"body":{"nodeType":"YulBlock","src":"1403:86:13","statements":[{"nodeType":"YulAssignment","src":"1413:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1435:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1422:12:13"},"nodeType":"YulFunctionCall","src":"1422:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1413:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:13"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"1451:25:13"},"nodeType":"YulFunctionCall","src":"1451:32:13"},"nodeType":"YulExpressionStatement","src":"1451:32:13"}]},"name":"abi_decode_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1381:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"1389:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1397:5:13","type":""}],"src":"1352:137:13"},{"body":{"nodeType":"YulBlock","src":"1540:32:13","statements":[{"nodeType":"YulAssignment","src":"1550:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"1561:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1550:7:13"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1522:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1532:7:13","type":""}],"src":"1495:77:13"},{"body":{"nodeType":"YulBlock","src":"1621:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"1678:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1687:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1690:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1680:6:13"},"nodeType":"YulFunctionCall","src":"1680:12:13"},"nodeType":"YulExpressionStatement","src":"1680:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1644:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1669:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1651:17:13"},"nodeType":"YulFunctionCall","src":"1651:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1641:2:13"},"nodeType":"YulFunctionCall","src":"1641:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1634:6:13"},"nodeType":"YulFunctionCall","src":"1634:43:13"},"nodeType":"YulIf","src":"1631:63:13"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1614:5:13","type":""}],"src":"1578:122:13"},{"body":{"nodeType":"YulBlock","src":"1758:87:13","statements":[{"nodeType":"YulAssignment","src":"1768:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1790:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1777:12:13"},"nodeType":"YulFunctionCall","src":"1777:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1768:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1833:5:13"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1806:26:13"},"nodeType":"YulFunctionCall","src":"1806:33:13"},"nodeType":"YulExpressionStatement","src":"1806:33:13"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1736:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"1744:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1752:5:13","type":""}],"src":"1706:139:13"},{"body":{"nodeType":"YulBlock","src":"1966:646:13","statements":[{"body":{"nodeType":"YulBlock","src":"2013:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2015:77:13"},"nodeType":"YulFunctionCall","src":"2015:79:13"},"nodeType":"YulExpressionStatement","src":"2015:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1987:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"1996:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1983:3:13"},"nodeType":"YulFunctionCall","src":"1983:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"2008:3:13","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1979:3:13"},"nodeType":"YulFunctionCall","src":"1979:33:13"},"nodeType":"YulIf","src":"1976:120:13"},{"nodeType":"YulBlock","src":"2106:116:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2121:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2135:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2125:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2150:62:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2184:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"2195:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2180:3:13"},"nodeType":"YulFunctionCall","src":"2180:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2204:7:13"}],"functionName":{"name":"abi_decode_t_uint80","nodeType":"YulIdentifier","src":"2160:19:13"},"nodeType":"YulFunctionCall","src":"2160:52:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2150:6:13"}]}]},{"nodeType":"YulBlock","src":"2232:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2247:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2261:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2251:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2277:62:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2311:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"2322:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2307:3:13"},"nodeType":"YulFunctionCall","src":"2307:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2331:7:13"}],"functionName":{"name":"abi_decode_t_int256","nodeType":"YulIdentifier","src":"2287:19:13"},"nodeType":"YulFunctionCall","src":"2287:52:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2277:6:13"}]}]},{"nodeType":"YulBlock","src":"2359:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2374:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2388:2:13","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2378:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2404:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2439:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"2450:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:13"},"nodeType":"YulFunctionCall","src":"2435:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2459:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2414:20:13"},"nodeType":"YulFunctionCall","src":"2414:53:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2404:6:13"}]}]},{"nodeType":"YulBlock","src":"2487:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2502:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2516:2:13","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2506:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2532:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2567:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"2578:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2563:3:13"},"nodeType":"YulFunctionCall","src":"2563:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2587:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2542:20:13"},"nodeType":"YulFunctionCall","src":"2542:53:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2532:6:13"}]}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1912:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1923:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1935:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1943:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1951:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1959:6:13","type":""}],"src":"1851:761:13"},{"body":{"nodeType":"YulBlock","src":"2681:52:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2698:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2720:5:13"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"2703:16:13"},"nodeType":"YulFunctionCall","src":"2703:23:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2691:6:13"},"nodeType":"YulFunctionCall","src":"2691:36:13"},"nodeType":"YulExpressionStatement","src":"2691:36:13"}]},"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2669:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2676:3:13","type":""}],"src":"2618:115:13"},{"body":{"nodeType":"YulBlock","src":"2835:122:13","statements":[{"nodeType":"YulAssignment","src":"2845:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2857:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2868:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2853:3:13"},"nodeType":"YulFunctionCall","src":"2853:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2845:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2923:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2936:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2947:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2932:3:13"},"nodeType":"YulFunctionCall","src":"2932:17:13"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulIdentifier","src":"2881:41:13"},"nodeType":"YulFunctionCall","src":"2881:69:13"},"nodeType":"YulExpressionStatement","src":"2881:69:13"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2807:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2819:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2830:4:13","type":""}],"src":"2739:218:13"},{"body":{"nodeType":"YulBlock","src":"3028:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3045:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3068:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3050:17:13"},"nodeType":"YulFunctionCall","src":"3050:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3038:6:13"},"nodeType":"YulFunctionCall","src":"3038:37:13"},"nodeType":"YulExpressionStatement","src":"3038:37:13"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3016:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3023:3:13","type":""}],"src":"2963:118:13"},{"body":{"nodeType":"YulBlock","src":"3185:124:13","statements":[{"nodeType":"YulAssignment","src":"3195:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3207:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3218:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3203:3:13"},"nodeType":"YulFunctionCall","src":"3203:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3195:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3275:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3288:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3299:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3284:3:13"},"nodeType":"YulFunctionCall","src":"3284:17:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3231:43:13"},"nodeType":"YulFunctionCall","src":"3231:71:13"},"nodeType":"YulExpressionStatement","src":"3231:71:13"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3157:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3169:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3180:4:13","type":""}],"src":"3087:222:13"},{"body":{"nodeType":"YulBlock","src":"3374:40:13","statements":[{"nodeType":"YulAssignment","src":"3385:22:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3401:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3395:5:13"},"nodeType":"YulFunctionCall","src":"3395:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3385:6:13"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3357:5:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3367:6:13","type":""}],"src":"3315:99:13"},{"body":{"nodeType":"YulBlock","src":"3516:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3533:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"3538:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3526:6:13"},"nodeType":"YulFunctionCall","src":"3526:19:13"},"nodeType":"YulExpressionStatement","src":"3526:19:13"},{"nodeType":"YulAssignment","src":"3554:29:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3573:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"3578:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3569:3:13"},"nodeType":"YulFunctionCall","src":"3569:14:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3554:11:13"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3488:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"3493:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3504:11:13","type":""}],"src":"3420:169:13"},{"body":{"nodeType":"YulBlock","src":"3657:184:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3667:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3676:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3671:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3736:63:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3761:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"3766:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3757:3:13"},"nodeType":"YulFunctionCall","src":"3757:11:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3780:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"3785:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3776:3:13"},"nodeType":"YulFunctionCall","src":"3776:11:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3770:5:13"},"nodeType":"YulFunctionCall","src":"3770:18:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3750:6:13"},"nodeType":"YulFunctionCall","src":"3750:39:13"},"nodeType":"YulExpressionStatement","src":"3750:39:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3697:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"3700:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3694:2:13"},"nodeType":"YulFunctionCall","src":"3694:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3708:19:13","statements":[{"nodeType":"YulAssignment","src":"3710:15:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3719:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"3722:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3715:3:13"},"nodeType":"YulFunctionCall","src":"3715:10:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3710:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"3690:3:13","statements":[]},"src":"3686:113:13"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3819:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"3824:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3815:3:13"},"nodeType":"YulFunctionCall","src":"3815:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"3833:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3808:6:13"},"nodeType":"YulFunctionCall","src":"3808:27:13"},"nodeType":"YulExpressionStatement","src":"3808:27:13"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3639:3:13","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3644:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"3649:6:13","type":""}],"src":"3595:246:13"},{"body":{"nodeType":"YulBlock","src":"3895:54:13","statements":[{"nodeType":"YulAssignment","src":"3905:38:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3923:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"3930:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3919:3:13"},"nodeType":"YulFunctionCall","src":"3919:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3939:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3935:3:13"},"nodeType":"YulFunctionCall","src":"3935:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3915:3:13"},"nodeType":"YulFunctionCall","src":"3915:28:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3905:6:13"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3878:5:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3888:6:13","type":""}],"src":"3847:102:13"},{"body":{"nodeType":"YulBlock","src":"4047:285:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4057:53:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4104:5:13"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4071:32:13"},"nodeType":"YulFunctionCall","src":"4071:39:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4061:6:13","type":""}]},{"nodeType":"YulAssignment","src":"4119:78:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4185:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"4190:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4126:58:13"},"nodeType":"YulFunctionCall","src":"4126:71:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4119:3:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4245:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"4252:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4241:3:13"},"nodeType":"YulFunctionCall","src":"4241:16:13"},{"name":"pos","nodeType":"YulIdentifier","src":"4259:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"4264:6:13"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4206:34:13"},"nodeType":"YulFunctionCall","src":"4206:65:13"},"nodeType":"YulExpressionStatement","src":"4206:65:13"},{"nodeType":"YulAssignment","src":"4280:46:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4291:3:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4318:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4296:21:13"},"nodeType":"YulFunctionCall","src":"4296:29:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4287:3:13"},"nodeType":"YulFunctionCall","src":"4287:39:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4280:3:13"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4028:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4035:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4043:3:13","type":""}],"src":"3955:377:13"},{"body":{"nodeType":"YulBlock","src":"4456:195:13","statements":[{"nodeType":"YulAssignment","src":"4466:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4478:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4489:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4474:3:13"},"nodeType":"YulFunctionCall","src":"4474:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4466:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4513:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4524:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4509:3:13"},"nodeType":"YulFunctionCall","src":"4509:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4532:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"4538:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4528:3:13"},"nodeType":"YulFunctionCall","src":"4528:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4502:6:13"},"nodeType":"YulFunctionCall","src":"4502:47:13"},"nodeType":"YulExpressionStatement","src":"4502:47:13"},{"nodeType":"YulAssignment","src":"4558:86:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4630:6:13"},{"name":"tail","nodeType":"YulIdentifier","src":"4639:4:13"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4566:63:13"},"nodeType":"YulFunctionCall","src":"4566:78:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4558:4:13"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4428:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4440:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4451:4:13","type":""}],"src":"4338:313:13"},{"body":{"nodeType":"YulBlock","src":"4722:262:13","statements":[{"body":{"nodeType":"YulBlock","src":"4768:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4770:77:13"},"nodeType":"YulFunctionCall","src":"4770:79:13"},"nodeType":"YulExpressionStatement","src":"4770:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4743:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"4752:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4739:3:13"},"nodeType":"YulFunctionCall","src":"4739:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"4764:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4735:3:13"},"nodeType":"YulFunctionCall","src":"4735:32:13"},"nodeType":"YulIf","src":"4732:119:13"},{"nodeType":"YulBlock","src":"4861:116:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4876:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"4890:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4880:6:13","type":""}]},{"nodeType":"YulAssignment","src":"4905:62:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4939:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4950:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4935:3:13"},"nodeType":"YulFunctionCall","src":"4935:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4959:7:13"}],"functionName":{"name":"abi_decode_t_uint80","nodeType":"YulIdentifier","src":"4915:19:13"},"nodeType":"YulFunctionCall","src":"4915:52:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4905:6:13"}]}]}]},"name":"abi_decode_tuple_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4692:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4703:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4715:6:13","type":""}],"src":"4657:327:13"},{"body":{"nodeType":"YulBlock","src":"5053:52:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5070:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5092:5:13"}],"functionName":{"name":"cleanup_t_uint80","nodeType":"YulIdentifier","src":"5075:16:13"},"nodeType":"YulFunctionCall","src":"5075:23:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5063:6:13"},"nodeType":"YulFunctionCall","src":"5063:36:13"},"nodeType":"YulExpressionStatement","src":"5063:36:13"}]},"name":"abi_encode_t_uint80_to_t_uint80_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5041:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5048:3:13","type":""}],"src":"4990:115:13"},{"body":{"nodeType":"YulBlock","src":"5315:448:13","statements":[{"nodeType":"YulAssignment","src":"5325:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5337:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5348:3:13","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5333:3:13"},"nodeType":"YulFunctionCall","src":"5333:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5325:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5404:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5417:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5428:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5413:3:13"},"nodeType":"YulFunctionCall","src":"5413:17:13"}],"functionName":{"name":"abi_encode_t_uint80_to_t_uint80_fromStack","nodeType":"YulIdentifier","src":"5362:41:13"},"nodeType":"YulFunctionCall","src":"5362:69:13"},"nodeType":"YulExpressionStatement","src":"5362:69:13"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5483:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5496:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5507:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5492:3:13"},"nodeType":"YulFunctionCall","src":"5492:18:13"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulIdentifier","src":"5441:41:13"},"nodeType":"YulFunctionCall","src":"5441:70:13"},"nodeType":"YulExpressionStatement","src":"5441:70:13"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5565:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5578:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5589:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5574:3:13"},"nodeType":"YulFunctionCall","src":"5574:18:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5521:43:13"},"nodeType":"YulFunctionCall","src":"5521:72:13"},"nodeType":"YulExpressionStatement","src":"5521:72:13"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"5647:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5660:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5671:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5656:3:13"},"nodeType":"YulFunctionCall","src":"5656:18:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5603:43:13"},"nodeType":"YulFunctionCall","src":"5603:72:13"},"nodeType":"YulExpressionStatement","src":"5603:72:13"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"5727:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5740:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5751:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5736:3:13"},"nodeType":"YulFunctionCall","src":"5736:19:13"}],"functionName":{"name":"abi_encode_t_uint80_to_t_uint80_fromStack","nodeType":"YulIdentifier","src":"5685:41:13"},"nodeType":"YulFunctionCall","src":"5685:71:13"},"nodeType":"YulExpressionStatement","src":"5685:71:13"}]},"name":"abi_encode_tuple_t_uint80_t_int256_t_uint256_t_uint256_t_uint80__to_t_uint80_t_int256_t_uint256_t_uint256_t_uint80__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5255:9:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5267:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5275:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5283:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5291:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5299:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5310:4:13","type":""}],"src":"5111:652:13"},{"body":{"nodeType":"YulBlock","src":"5834:262:13","statements":[{"body":{"nodeType":"YulBlock","src":"5880:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5882:77:13"},"nodeType":"YulFunctionCall","src":"5882:79:13"},"nodeType":"YulExpressionStatement","src":"5882:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5855:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"5864:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5851:3:13"},"nodeType":"YulFunctionCall","src":"5851:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"5876:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5847:3:13"},"nodeType":"YulFunctionCall","src":"5847:32:13"},"nodeType":"YulIf","src":"5844:119:13"},{"nodeType":"YulBlock","src":"5973:116:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5988:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6002:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5992:6:13","type":""}]},{"nodeType":"YulAssignment","src":"6017:62:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6051:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"6062:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6047:3:13"},"nodeType":"YulFunctionCall","src":"6047:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6071:7:13"}],"functionName":{"name":"abi_decode_t_int256","nodeType":"YulIdentifier","src":"6027:19:13"},"nodeType":"YulFunctionCall","src":"6027:52:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6017:6:13"}]}]}]},"name":"abi_decode_tuple_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5804:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5815:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5827:6:13","type":""}],"src":"5769:327:13"},{"body":{"nodeType":"YulBlock","src":"6168:263:13","statements":[{"body":{"nodeType":"YulBlock","src":"6214:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6216:77:13"},"nodeType":"YulFunctionCall","src":"6216:79:13"},"nodeType":"YulExpressionStatement","src":"6216:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6189:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"6198:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6185:3:13"},"nodeType":"YulFunctionCall","src":"6185:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"6210:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6181:3:13"},"nodeType":"YulFunctionCall","src":"6181:32:13"},"nodeType":"YulIf","src":"6178:119:13"},{"nodeType":"YulBlock","src":"6307:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6322:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6336:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6326:6:13","type":""}]},{"nodeType":"YulAssignment","src":"6351:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6386:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"6397:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6382:3:13"},"nodeType":"YulFunctionCall","src":"6382:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6406:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6361:20:13"},"nodeType":"YulFunctionCall","src":"6361:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6351:6:13"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6138:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6149:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6161:6:13","type":""}],"src":"6102:329:13"},{"body":{"nodeType":"YulBlock","src":"6465:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6482:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6485:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6475:6:13"},"nodeType":"YulFunctionCall","src":"6475:88:13"},"nodeType":"YulExpressionStatement","src":"6475:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6579:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6582:4:13","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6572:6:13"},"nodeType":"YulFunctionCall","src":"6572:15:13"},"nodeType":"YulExpressionStatement","src":"6572:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6603:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6606:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6596:6:13"},"nodeType":"YulFunctionCall","src":"6596:15:13"},"nodeType":"YulExpressionStatement","src":"6596:15:13"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6437:180:13"},{"body":{"nodeType":"YulBlock","src":"6666:190:13","statements":[{"nodeType":"YulAssignment","src":"6676:33:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6703:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6685:17:13"},"nodeType":"YulFunctionCall","src":"6685:24:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6676:5:13"}]},{"body":{"nodeType":"YulBlock","src":"6799:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6801:16:13"},"nodeType":"YulFunctionCall","src":"6801:18:13"},"nodeType":"YulExpressionStatement","src":"6801:18:13"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6724:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"6731:66:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6721:2:13"},"nodeType":"YulFunctionCall","src":"6721:77:13"},"nodeType":"YulIf","src":"6718:103:13"},{"nodeType":"YulAssignment","src":"6830:20:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6841:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"6848:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6837:3:13"},"nodeType":"YulFunctionCall","src":"6837:13:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6830:3:13"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6652:5:13","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6662:3:13","type":""}],"src":"6623:233:13"}]},"contents":"{\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint80(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint80_to_t_uint80_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint80(value))\n    }\n\n    function abi_encode_tuple_t_uint80_t_int256_t_uint256_t_uint256_t_uint80__to_t_uint80_t_int256_t_uint256_t_uint256_t_uint80__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint80_to_t_uint80_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint80_to_t_uint80_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100b45760003560e01c80638205bf6a116100715780638205bf6a1461016b5780639a6fc8f514610189578063a87a20ce146101bd578063b5ab58dc146101d9578063b633620c14610209578063feaf968c14610239576100b4565b8063313ce567146100b95780634aa2011f146100d757806350d25bcd146100f357806354fd4d5014610111578063668a0f021461012f5780637284e4161461014d575b600080fd5b6100c161025b565b6040516100ce91906104d6565b60405180910390f35b6100f160048036038101906100ec91906105a4565b61026c565b005b6100fb6102e1565b604051610108919061061a565b60405180910390f35b6101196102e7565b6040516101269190610644565b60405180910390f35b6101376102ec565b6040516101449190610644565b60405180910390f35b6101556102f2565b60405161016291906106ef565b60405180910390f35b61017361032f565b6040516101809190610644565b60405180910390f35b6101a3600480360381019061019e9190610711565b610335565b6040516101b495949392919061074d565b60405180910390f35b6101d760048036038101906101d291906107a0565b6103b2565b005b6101f360048036038101906101ee91906107cd565b610429565b604051610200919061061a565b60405180910390f35b610223600480360381019061021e91906107cd565b610441565b6040516102309190610644565b60405180910390f35b610241610459565b60405161025295949392919061074d565b60405180910390f35b60008054906101000a900460ff1681565b8369ffffffffffffffffffff16600381905550826001819055508160028190555082600460006003548152602001908152602001600020819055508160056000600354815260200190815260200160002081905550806006600060035481526020019081526020016000208190555050505050565b60015481565b600081565b60035481565b60606040518060400160405280601f81526020017f76302e382f74657374732f4d6f636b563341676772656761746f722e736f6c00815250905090565b60025481565b600080600080600085600460008869ffffffffffffffffffff16815260200190815260200160002054600660008969ffffffffffffffffffff16815260200190815260200160002054600560008a69ffffffffffffffffffff16815260200190815260200160002054899450945094509450945091939590929450565b8060018190555042600281905550600360008154809291906103d390610829565b919050555080600460006003548152602001908152602001600020819055504260056000600354815260200190815260200160002081905550426006600060035481526020019081526020016000208190555050565b60046020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b6000806000806000600354600460006003548152602001908152602001600020546006600060035481526020019081526020016000205460056000600354815260200190815260200160002054600354945094509450945094509091929394565b600060ff82169050919050565b6104d0816104ba565b82525050565b60006020820190506104eb60008301846104c7565b92915050565b600080fd5b600069ffffffffffffffffffff82169050919050565b610515816104f6565b811461052057600080fd5b50565b6000813590506105328161050c565b92915050565b6000819050919050565b61054b81610538565b811461055657600080fd5b50565b60008135905061056881610542565b92915050565b6000819050919050565b6105818161056e565b811461058c57600080fd5b50565b60008135905061059e81610578565b92915050565b600080600080608085870312156105be576105bd6104f1565b5b60006105cc87828801610523565b94505060206105dd87828801610559565b93505060406105ee8782880161058f565b92505060606105ff8782880161058f565b91505092959194509250565b61061481610538565b82525050565b600060208201905061062f600083018461060b565b92915050565b61063e8161056e565b82525050565b60006020820190506106596000830184610635565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561069957808201518184015260208101905061067e565b60008484015250505050565b6000601f19601f8301169050919050565b60006106c18261065f565b6106cb818561066a565b93506106db81856020860161067b565b6106e4816106a5565b840191505092915050565b6000602082019050818103600083015261070981846106b6565b905092915050565b600060208284031215610727576107266104f1565b5b600061073584828501610523565b91505092915050565b610747816104f6565b82525050565b600060a082019050610762600083018861073e565b61076f602083018761060b565b61077c6040830186610635565b6107896060830185610635565b610796608083018461073e565b9695505050505050565b6000602082840312156107b6576107b56104f1565b5b60006107c484828501610559565b91505092915050565b6000602082840312156107e3576107e26104f1565b5b60006107f18482850161058f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108348261056e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610866576108656107fa565b5b60018201905091905056fea2646970667358221220858e4ca811cf4a8c4e94daa1e56d2f66d793b6f2977f12e72002029340ccd4ca64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8205BF6A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8205BF6A EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x9A6FC8F5 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xA87A20CE EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0xB5AB58DC EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xB633620C EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xFEAF968C EQ PUSH2 0x239 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x4AA2011F EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x50D25BCD EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x668A0F02 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x7284E416 EQ PUSH2 0x14D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x25B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x4D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFB PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x61A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x711 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x7A0 JUMP JUMPDEST PUSH2 0x3B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x61A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x441 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x252 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x4 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x76302E382F74657374732F4D6F636B563341676772656761746F722E736F6C00 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x6 PUSH1 0x0 DUP10 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x5 PUSH1 0x0 DUP11 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP10 SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3D3 SWAP1 PUSH2 0x829 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x4 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x6 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x5 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x3 SLOAD SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D0 DUP2 PUSH2 0x4BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4EB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x515 DUP2 PUSH2 0x4F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x532 DUP2 PUSH2 0x50C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x54B DUP2 PUSH2 0x538 JUMP JUMPDEST DUP2 EQ PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x568 DUP2 PUSH2 0x542 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x581 DUP2 PUSH2 0x56E JUMP JUMPDEST DUP2 EQ PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x59E DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x5BE JUMPI PUSH2 0x5BD PUSH2 0x4F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5CC DUP8 DUP3 DUP9 ADD PUSH2 0x523 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x5DD DUP8 DUP3 DUP9 ADD PUSH2 0x559 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x5EE DUP8 DUP3 DUP9 ADD PUSH2 0x58F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x5FF DUP8 DUP3 DUP9 ADD PUSH2 0x58F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x614 DUP2 PUSH2 0x538 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x62F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x60B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x63E DUP2 PUSH2 0x56E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x659 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x635 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x699 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x67E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C1 DUP3 PUSH2 0x65F JUMP JUMPDEST PUSH2 0x6CB DUP2 DUP6 PUSH2 0x66A JUMP JUMPDEST SWAP4 POP PUSH2 0x6DB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x67B JUMP JUMPDEST PUSH2 0x6E4 DUP2 PUSH2 0x6A5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x709 DUP2 DUP5 PUSH2 0x6B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x727 JUMPI PUSH2 0x726 PUSH2 0x4F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x735 DUP5 DUP3 DUP6 ADD PUSH2 0x523 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x747 DUP2 PUSH2 0x4F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x762 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x73E JUMP JUMPDEST PUSH2 0x76F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x60B JUMP JUMPDEST PUSH2 0x77C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x789 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x796 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x73E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B6 JUMPI PUSH2 0x7B5 PUSH2 0x4F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7C4 DUP5 DUP3 DUP6 ADD PUSH2 0x559 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7E3 JUMPI PUSH2 0x7E2 PUSH2 0x4F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7F1 DUP5 DUP3 DUP6 ADD PUSH2 0x58F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x834 DUP3 PUSH2 0x56E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x866 JUMPI PUSH2 0x865 PUSH2 0x7FA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 DUP15 0x4C 0xA8 GT 0xCF 0x4A DUP13 0x4E SWAP5 0xDA LOG1 0xE5 PUSH14 0x2F66D793B6F2977F12E720020293 BLOCKHASH 0xCC 0xD4 0xCA PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"373:2014:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;479:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:346;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;513:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;430:44;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;595:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2264:121;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;552:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1551:325;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;925:272;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;635:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;691:56;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1880:380;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;479:30;;;;;;;;;;;;:::o;1201:346::-;1346:8;1332:22;;:11;:22;;;;1375:7;1360:12;:22;;;;1406:10;1388:15;:28;;;;1447:7;1422:9;:22;1432:11;;1422:22;;;;;;;;;;;:32;;;;1488:10;1460:12;:25;1473:11;;1460:25;;;;;;;;;;;:38;;;;1532:10;1504:12;:25;1517:11;;1504:25;;;;;;;;;;;:38;;;;1201:346;;;;:::o;513:35::-;;;;:::o;430:44::-;473:1;430:44;:::o;595:35::-;;;;:::o;2264:121::-;2319:13;2340:40;;;;;;;;;;;;;;;;;;;2264:121;:::o;552:39::-;;;;:::o;1551:325::-;1645:14;1667:13;1688:17;1713;1738:22;1783:8;1793:9;:19;1803:8;1793:19;;;;;;;;;;;;;;1814:12;:22;1827:8;1814:22;;;;;;;;;;;;;;1838:12;:22;1851:8;1838:22;;;;;;;;;;;;;;1862:8;1775:96;;;;;;;;;;1551:325;;;;;;;:::o;925:272::-;991:7;976:12;:22;;;;1022:15;1004;:33;;;;1043:11;;:13;;;;;;;;;:::i;:::-;;;;;;1087:7;1062:9;:22;1072:11;;1062:22;;;;;;;;;;;:32;;;;1128:15;1100:12;:25;1113:11;;1100:25;;;;;;;;;;;:43;;;;1177:15;1149:12;:25;1162:11;;1149:25;;;;;;;;;;;:43;;;;925:272;:::o;635:52::-;;;;;;;;;;;;;;;;;:::o;691:56::-;;;;;;;;;;;;;;;;;:::o;1880:380::-;1962:14;1984:13;2005:17;2030;2055:22;2114:11;;2134:9;:22;2144:11;;2134:22;;;;;;;;;;;;2164:12;:25;2177:11;;2164:25;;;;;;;;;;;;2197:12;:25;2210:11;;2197:25;;;;;;;;;;;;2237:11;;2092:163;;;;;;;;;;1880:380;;;;;:::o;7:86:13:-;42:7;82:4;75:5;71:16;60:27;;7:86;;;:::o;99:112::-;182:22;198:5;182:22;:::i;:::-;177:3;170:35;99:112;;:::o;217:214::-;306:4;344:2;333:9;329:18;321:26;;357:67;421:1;410:9;406:17;397:6;357:67;:::i;:::-;217:214;;;;:::o;518:117::-;627:1;624;617:12;764:105;800:7;840:22;833:5;829:34;818:45;;764:105;;;:::o;875:120::-;947:23;964:5;947:23;:::i;:::-;940:5;937:34;927:62;;985:1;982;975:12;927:62;875:120;:::o;1001:137::-;1046:5;1084:6;1071:20;1062:29;;1100:32;1126:5;1100:32;:::i;:::-;1001:137;;;;:::o;1144:76::-;1180:7;1209:5;1198:16;;1144:76;;;:::o;1226:120::-;1298:23;1315:5;1298:23;:::i;:::-;1291:5;1288:34;1278:62;;1336:1;1333;1326:12;1278:62;1226:120;:::o;1352:137::-;1397:5;1435:6;1422:20;1413:29;;1451:32;1477:5;1451:32;:::i;:::-;1352:137;;;;:::o;1495:77::-;1532:7;1561:5;1550:16;;1495:77;;;:::o;1578:122::-;1651:24;1669:5;1651:24;:::i;:::-;1644:5;1641:35;1631:63;;1690:1;1687;1680:12;1631:63;1578:122;:::o;1706:139::-;1752:5;1790:6;1777:20;1768:29;;1806:33;1833:5;1806:33;:::i;:::-;1706:139;;;;:::o;1851:761::-;1935:6;1943;1951;1959;2008:3;1996:9;1987:7;1983:23;1979:33;1976:120;;;2015:79;;:::i;:::-;1976:120;2135:1;2160:52;2204:7;2195:6;2184:9;2180:22;2160:52;:::i;:::-;2150:62;;2106:116;2261:2;2287:52;2331:7;2322:6;2311:9;2307:22;2287:52;:::i;:::-;2277:62;;2232:117;2388:2;2414:53;2459:7;2450:6;2439:9;2435:22;2414:53;:::i;:::-;2404:63;;2359:118;2516:2;2542:53;2587:7;2578:6;2567:9;2563:22;2542:53;:::i;:::-;2532:63;;2487:118;1851:761;;;;;;;:::o;2618:115::-;2703:23;2720:5;2703:23;:::i;:::-;2698:3;2691:36;2618:115;;:::o;2739:218::-;2830:4;2868:2;2857:9;2853:18;2845:26;;2881:69;2947:1;2936:9;2932:17;2923:6;2881:69;:::i;:::-;2739:218;;;;:::o;2963:118::-;3050:24;3068:5;3050:24;:::i;:::-;3045:3;3038:37;2963:118;;:::o;3087:222::-;3180:4;3218:2;3207:9;3203:18;3195:26;;3231:71;3299:1;3288:9;3284:17;3275:6;3231:71;:::i;:::-;3087:222;;;;:::o;3315:99::-;3367:6;3401:5;3395:12;3385:22;;3315:99;;;:::o;3420:169::-;3504:11;3538:6;3533:3;3526:19;3578:4;3573:3;3569:14;3554:29;;3420:169;;;;:::o;3595:246::-;3676:1;3686:113;3700:6;3697:1;3694:13;3686:113;;;3785:1;3780:3;3776:11;3770:18;3766:1;3761:3;3757:11;3750:39;3722:2;3719:1;3715:10;3710:15;;3686:113;;;3833:1;3824:6;3819:3;3815:16;3808:27;3657:184;3595:246;;;:::o;3847:102::-;3888:6;3939:2;3935:7;3930:2;3923:5;3919:14;3915:28;3905:38;;3847:102;;;:::o;3955:377::-;4043:3;4071:39;4104:5;4071:39;:::i;:::-;4126:71;4190:6;4185:3;4126:71;:::i;:::-;4119:78;;4206:65;4264:6;4259:3;4252:4;4245:5;4241:16;4206:65;:::i;:::-;4296:29;4318:6;4296:29;:::i;:::-;4291:3;4287:39;4280:46;;4047:285;3955:377;;;;:::o;4338:313::-;4451:4;4489:2;4478:9;4474:18;4466:26;;4538:9;4532:4;4528:20;4524:1;4513:9;4509:17;4502:47;4566:78;4639:4;4630:6;4566:78;:::i;:::-;4558:86;;4338:313;;;;:::o;4657:327::-;4715:6;4764:2;4752:9;4743:7;4739:23;4735:32;4732:119;;;4770:79;;:::i;:::-;4732:119;4890:1;4915:52;4959:7;4950:6;4939:9;4935:22;4915:52;:::i;:::-;4905:62;;4861:116;4657:327;;;;:::o;4990:115::-;5075:23;5092:5;5075:23;:::i;:::-;5070:3;5063:36;4990:115;;:::o;5111:652::-;5310:4;5348:3;5337:9;5333:19;5325:27;;5362:69;5428:1;5417:9;5413:17;5404:6;5362:69;:::i;:::-;5441:70;5507:2;5496:9;5492:18;5483:6;5441:70;:::i;:::-;5521:72;5589:2;5578:9;5574:18;5565:6;5521:72;:::i;:::-;5603;5671:2;5660:9;5656:18;5647:6;5603:72;:::i;:::-;5685:71;5751:3;5740:9;5736:19;5727:6;5685:71;:::i;:::-;5111:652;;;;;;;;:::o;5769:327::-;5827:6;5876:2;5864:9;5855:7;5851:23;5847:32;5844:119;;;5882:79;;:::i;:::-;5844:119;6002:1;6027:52;6071:7;6062:6;6051:9;6047:22;6027:52;:::i;:::-;6017:62;;5973:116;5769:327;;;;:::o;6102:329::-;6161:6;6210:2;6198:9;6189:7;6185:23;6181:32;6178:119;;;6216:79;;:::i;:::-;6178:119;6336:1;6361:53;6406:7;6397:6;6386:9;6382:22;6361:53;:::i;:::-;6351:63;;6307:117;6102:329;;;;:::o;6437:180::-;6485:77;6482:1;6475:88;6582:4;6579:1;6572:15;6606:4;6603:1;6596:15;6623:233;6662:3;6685:24;6703:5;6685:24;:::i;:::-;6676:33;;6731:66;6724:5;6721:77;6718:103;;6801:18;;:::i;:::-;6718:103;6848:1;6841:5;6837:13;6830:20;;6623:233;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"443000","executionCost":"infinite","totalCost":"infinite"},"external":{"decimals()":"2469","description()":"infinite","getAnswer(uint256)":"2831","getRoundData(uint80)":"infinite","getTimestamp(uint256)":"infinite","latestAnswer()":"2474","latestRound()":"2518","latestRoundData()":"infinite","latestTimestamp()":"2429","updateAnswer(int256)":"141908","updateRoundData(uint80,int256,uint256,uint256)":"infinite","version()":"396"}},"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getAnswer(uint256)":"b5ab58dc","getRoundData(uint80)":"9a6fc8f5","getTimestamp(uint256)":"b633620c","latestAnswer()":"50d25bcd","latestRound()":"668a0f02","latestRoundData()":"feaf968c","latestTimestamp()":"8205bf6a","updateAnswer(int256)":"a87a20ce","updateRoundData(uint80,int256,uint256,uint256)":"4aa2011f","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"_initialAnswer\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"startedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"}],\"name\":\"NewRound\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_answer\",\"type\":\"int256\"}],\"name\":\"updateAnswer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"_answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startedAt\",\"type\":\"uint256\"}],\"name\":\"updateRoundData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"MockV3Aggregator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Based on the FluxAggregator contractUse this contract when you need to test other contract's ability to read data from an aggregator contract, but how the aggregator got its answer is unimportant\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol\":\"MockV3Aggregator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorInterface {\\n  function latestAnswer() external view returns (int256);\\n\\n  function latestTimestamp() external view returns (uint256);\\n\\n  function latestRound() external view returns (uint256);\\n\\n  function getAnswer(uint256 roundId) external view returns (int256);\\n\\n  function getTimestamp(uint256 roundId) external view returns (uint256);\\n\\n  event AnswerUpdated(int256 indexed current, uint256 indexed roundId, uint256 updatedAt);\\n\\n  event NewRound(uint256 indexed roundId, address indexed startedBy, uint256 startedAt);\\n}\\n\",\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./AggregatorInterface.sol\\\";\\nimport \\\"./AggregatorV3Interface.sol\\\";\\n\\ninterface AggregatorV2V3Interface is AggregatorInterface, AggregatorV3Interface {}\\n\",\"keccak256\":\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/AggregatorV2V3Interface.sol\\\";\\n\\n/**\\n * @title MockV3Aggregator\\n * @notice Based on the FluxAggregator contract\\n * @notice Use this contract when you need to test\\n * other contract's ability to read data from an\\n * aggregator contract, but how the aggregator got\\n * its answer is unimportant\\n */\\ncontract MockV3Aggregator is AggregatorV2V3Interface {\\n  uint256 public constant override version = 0;\\n\\n  uint8 public override decimals;\\n  int256 public override latestAnswer;\\n  uint256 public override latestTimestamp;\\n  uint256 public override latestRound;\\n\\n  mapping(uint256 => int256) public override getAnswer;\\n  mapping(uint256 => uint256) public override getTimestamp;\\n  mapping(uint256 => uint256) private getStartedAt;\\n\\n  constructor(uint8 _decimals, int256 _initialAnswer) {\\n    decimals = _decimals;\\n    updateAnswer(_initialAnswer);\\n  }\\n\\n  function updateAnswer(int256 _answer) public {\\n    latestAnswer = _answer;\\n    latestTimestamp = block.timestamp;\\n    latestRound++;\\n    getAnswer[latestRound] = _answer;\\n    getTimestamp[latestRound] = block.timestamp;\\n    getStartedAt[latestRound] = block.timestamp;\\n  }\\n\\n  function updateRoundData(\\n    uint80 _roundId,\\n    int256 _answer,\\n    uint256 _timestamp,\\n    uint256 _startedAt\\n  ) public {\\n    latestRound = _roundId;\\n    latestAnswer = _answer;\\n    latestTimestamp = _timestamp;\\n    getAnswer[latestRound] = _answer;\\n    getTimestamp[latestRound] = _timestamp;\\n    getStartedAt[latestRound] = _startedAt;\\n  }\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    override\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    )\\n  {\\n    return (_roundId, getAnswer[_roundId], getStartedAt[_roundId], getTimestamp[_roundId], _roundId);\\n  }\\n\\n  function latestRoundData()\\n    external\\n    view\\n    override\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    )\\n  {\\n    return (\\n      uint80(latestRound),\\n      getAnswer[latestRound],\\n      getStartedAt[latestRound],\\n      getTimestamp[latestRound],\\n      uint80(latestRound)\\n    );\\n  }\\n\\n  function description() external pure override returns (string memory) {\\n    return \\\"v0.8/tests/MockV3Aggregator.sol\\\";\\n  }\\n}\\n\",\"keccak256\":\"0x7a5ac06d48ad507a441c8de5f813765f3beed7fb47aa88b26ad34c020ea0c644\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":115,"contract":"@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol:MockV3Aggregator","label":"decimals","offset":0,"slot":"0","type":"t_uint8"},{"astId":118,"contract":"@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol:MockV3Aggregator","label":"latestAnswer","offset":0,"slot":"1","type":"t_int256"},{"astId":121,"contract":"@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol:MockV3Aggregator","label":"latestTimestamp","offset":0,"slot":"2","type":"t_uint256"},{"astId":124,"contract":"@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol:MockV3Aggregator","label":"latestRound","offset":0,"slot":"3","type":"t_uint256"},{"astId":129,"contract":"@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol:MockV3Aggregator","label":"getAnswer","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_int256)"},{"astId":134,"contract":"@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol:MockV3Aggregator","label":"getTimestamp","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_uint256)"},{"astId":138,"contract":"@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol:MockV3Aggregator","label":"getStartedAt","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_uint256)"}],"types":{"t_int256":{"encoding":"inplace","label":"int256","numberOfBytes":"32"},"t_mapping(t_uint256,t_int256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => int256)","numberOfBytes":"32","value":"t_int256"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"notice":"Based on the FluxAggregator contractUse this contract when you need to test other contract's ability to read data from an aggregator contract, but how the aggregator got its answer is unimportant","version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_353":{"entryPoint":null,"id":353,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":376,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":502,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":247,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":99,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":278,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":635,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1067,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1028,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":902,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1222,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":332,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":693,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1192,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":193,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1160,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":646,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":146,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":119,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":124,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":114,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":109,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":129,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":783,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1000,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":796,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":952,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":995,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:13","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:13","statements":[{"nodeType":"YulAssignment","src":"57:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:13"},"nodeType":"YulFunctionCall","src":"67:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:13","type":""}],"src":"7:75:13"},{"body":{"nodeType":"YulBlock","src":"177:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:13"},"nodeType":"YulFunctionCall","src":"187:12:13"},"nodeType":"YulExpressionStatement","src":"187:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:13"},{"body":{"nodeType":"YulBlock","src":"300:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:13"},"nodeType":"YulFunctionCall","src":"310:12:13"},"nodeType":"YulExpressionStatement","src":"310:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:13"},{"body":{"nodeType":"YulBlock","src":"423:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:13"},"nodeType":"YulFunctionCall","src":"433:12:13"},"nodeType":"YulExpressionStatement","src":"433:12:13"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:13"},{"body":{"nodeType":"YulBlock","src":"546:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:13"},"nodeType":"YulFunctionCall","src":"556:12:13"},"nodeType":"YulExpressionStatement","src":"556:12:13"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:13"},{"body":{"nodeType":"YulBlock","src":"628:54:13","statements":[{"nodeType":"YulAssignment","src":"638:38:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:13"},"nodeType":"YulFunctionCall","src":"652:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:13"},"nodeType":"YulFunctionCall","src":"668:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:13"},"nodeType":"YulFunctionCall","src":"648:28:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:13"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:13","type":""}],"src":"580:102:13"},{"body":{"nodeType":"YulBlock","src":"716:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:13"},"nodeType":"YulFunctionCall","src":"726:88:13"},"nodeType":"YulExpressionStatement","src":"726:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:13"},"nodeType":"YulFunctionCall","src":"823:15:13"},"nodeType":"YulExpressionStatement","src":"823:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:13"},"nodeType":"YulFunctionCall","src":"847:15:13"},"nodeType":"YulExpressionStatement","src":"847:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:13"},{"body":{"nodeType":"YulBlock","src":"917:238:13","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:13"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:13"},"nodeType":"YulFunctionCall","src":"957:27:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:13"},"nodeType":"YulFunctionCall","src":"945:40:13"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:13"},"nodeType":"YulFunctionCall","src":"1098:18:13"},"nodeType":"YulExpressionStatement","src":"1098:18:13"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:13"},"nodeType":"YulFunctionCall","src":"1036:34:13"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:13"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:13"},"nodeType":"YulFunctionCall","src":"1072:22:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:13"},"nodeType":"YulFunctionCall","src":"1033:62:13"},"nodeType":"YulIf","src":"1030:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:13","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:13"},"nodeType":"YulFunctionCall","src":"1127:22:13"},"nodeType":"YulExpressionStatement","src":"1127:22:13"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:13","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:13","type":""}],"src":"874:281:13"},{"body":{"nodeType":"YulBlock","src":"1202:88:13","statements":[{"nodeType":"YulAssignment","src":"1212:30:13","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:13"},"nodeType":"YulFunctionCall","src":"1222:20:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:13"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:13"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:13"},"nodeType":"YulFunctionCall","src":"1251:33:13"},"nodeType":"YulExpressionStatement","src":"1251:33:13"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:13","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:13","type":""}],"src":"1161:129:13"},{"body":{"nodeType":"YulBlock","src":"1363:241:13","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:13"},"nodeType":"YulFunctionCall","src":"1470:18:13"},"nodeType":"YulExpressionStatement","src":"1470:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:13"},"nodeType":"YulFunctionCall","src":"1437:30:13"},"nodeType":"YulIf","src":"1434:56:13"},{"nodeType":"YulAssignment","src":"1500:37:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:13"},"nodeType":"YulFunctionCall","src":"1508:29:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:13"}]},{"nodeType":"YulAssignment","src":"1574:23:13","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:13"},"nodeType":"YulFunctionCall","src":"1582:15:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:13"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:13","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:13","type":""}],"src":"1296:308:13"},{"body":{"nodeType":"YulBlock","src":"1672:184:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:13"},"nodeType":"YulFunctionCall","src":"1772:11:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:13"},"nodeType":"YulFunctionCall","src":"1791:11:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:13"},"nodeType":"YulFunctionCall","src":"1785:18:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:13"},"nodeType":"YulFunctionCall","src":"1765:39:13"},"nodeType":"YulExpressionStatement","src":"1765:39:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:13"},"nodeType":"YulFunctionCall","src":"1709:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:13","statements":[{"nodeType":"YulAssignment","src":"1725:15:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:13"},"nodeType":"YulFunctionCall","src":"1730:10:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:13","statements":[]},"src":"1701:113:13"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:13"},"nodeType":"YulFunctionCall","src":"1830:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:13"},"nodeType":"YulFunctionCall","src":"1823:27:13"},"nodeType":"YulExpressionStatement","src":"1823:27:13"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:13","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:13","type":""}],"src":"1610:246:13"},{"body":{"nodeType":"YulBlock","src":"1957:339:13","statements":[{"nodeType":"YulAssignment","src":"1967:75:13","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:13"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:13"},"nodeType":"YulFunctionCall","src":"1992:49:13"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:13"},"nodeType":"YulFunctionCall","src":"1976:66:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:13"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:13"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:13"},"nodeType":"YulFunctionCall","src":"2051:21:13"},"nodeType":"YulExpressionStatement","src":"2051:21:13"},{"nodeType":"YulVariableDeclaration","src":"2081:27:13","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:13"},"nodeType":"YulFunctionCall","src":"2092:16:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:13"},"nodeType":"YulFunctionCall","src":"2148:79:13"},"nodeType":"YulExpressionStatement","src":"2148:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:13"},"nodeType":"YulFunctionCall","src":"2123:16:13"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:13"},"nodeType":"YulFunctionCall","src":"2120:25:13"},"nodeType":"YulIf","src":"2117:112:13"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:13"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:13"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:13"},"nodeType":"YulFunctionCall","src":"2238:52:13"},"nodeType":"YulExpressionStatement","src":"2238:52:13"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:13","type":""}],"src":"1862:434:13"},{"body":{"nodeType":"YulBlock","src":"2389:282:13","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:13"},"nodeType":"YulFunctionCall","src":"2440:79:13"},"nodeType":"YulExpressionStatement","src":"2440:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:13"},"nodeType":"YulFunctionCall","src":"2413:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:13"},"nodeType":"YulFunctionCall","src":"2409:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:13"},"nodeType":"YulFunctionCall","src":"2402:35:13"},"nodeType":"YulIf","src":"2399:122:13"},{"nodeType":"YulVariableDeclaration","src":"2530:27:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:13"},"nodeType":"YulFunctionCall","src":"2544:13:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:13"},"nodeType":"YulFunctionCall","src":"2634:17:13"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:13"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:13"},"nodeType":"YulFunctionCall","src":"2575:90:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:13"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:13","type":""}],"src":"2316:355:13"},{"body":{"nodeType":"YulBlock","src":"2791:739:13","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:13"},"nodeType":"YulFunctionCall","src":"2839:79:13"},"nodeType":"YulExpressionStatement","src":"2839:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:13"},"nodeType":"YulFunctionCall","src":"2808:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:13"},"nodeType":"YulFunctionCall","src":"2804:32:13"},"nodeType":"YulIf","src":"2801:119:13"},{"nodeType":"YulBlock","src":"2930:291:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:13"},"nodeType":"YulFunctionCall","src":"2965:17:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:13"},"nodeType":"YulFunctionCall","src":"2959:24:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:13"},"nodeType":"YulFunctionCall","src":"3032:79:13"},"nodeType":"YulExpressionStatement","src":"3032:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:13"},"nodeType":"YulFunctionCall","src":"2999:30:13"},"nodeType":"YulIf","src":"2996:117:13"},{"nodeType":"YulAssignment","src":"3127:84:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:13"},"nodeType":"YulFunctionCall","src":"3179:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:13"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:13"},"nodeType":"YulFunctionCall","src":"3137:74:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:13"}]}]},{"nodeType":"YulBlock","src":"3231:292:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:13"},"nodeType":"YulFunctionCall","src":"3266:18:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:13"},"nodeType":"YulFunctionCall","src":"3260:25:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:13"},"nodeType":"YulFunctionCall","src":"3334:79:13"},"nodeType":"YulExpressionStatement","src":"3334:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:13"},"nodeType":"YulFunctionCall","src":"3301:30:13"},"nodeType":"YulIf","src":"3298:117:13"},{"nodeType":"YulAssignment","src":"3429:84:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:13"},"nodeType":"YulFunctionCall","src":"3481:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:13"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:13"},"nodeType":"YulFunctionCall","src":"3439:74:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:13"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:13","type":""}],"src":"2677:853:13"},{"body":{"nodeType":"YulBlock","src":"3595:40:13","statements":[{"nodeType":"YulAssignment","src":"3606:22:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:13"},"nodeType":"YulFunctionCall","src":"3616:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:13"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:13","type":""}],"src":"3536:99:13"},{"body":{"nodeType":"YulBlock","src":"3669:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:13"},"nodeType":"YulFunctionCall","src":"3679:88:13"},"nodeType":"YulExpressionStatement","src":"3679:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:13","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:13"},"nodeType":"YulFunctionCall","src":"3776:15:13"},"nodeType":"YulExpressionStatement","src":"3776:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:13"},"nodeType":"YulFunctionCall","src":"3800:15:13"},"nodeType":"YulExpressionStatement","src":"3800:15:13"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:13"},{"body":{"nodeType":"YulBlock","src":"3878:269:13","statements":[{"nodeType":"YulAssignment","src":"3888:22:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:13","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:13"},"nodeType":"YulFunctionCall","src":"3898:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:13","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:13"},"nodeType":"YulFunctionCall","src":"3945:12:13"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:13","statements":[{"nodeType":"YulAssignment","src":"4010:27:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:13","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:13"},"nodeType":"YulFunctionCall","src":"4020:17:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:13"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:13"},"nodeType":"YulFunctionCall","src":"3969:26:13"},"nodeType":"YulIf","src":"3966:81:13"},{"body":{"nodeType":"YulBlock","src":"4099:42:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:13"},"nodeType":"YulFunctionCall","src":"4113:18:13"},"nodeType":"YulExpressionStatement","src":"4113:18:13"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:13","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:13"},"nodeType":"YulFunctionCall","src":"4083:14:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:13"},"nodeType":"YulFunctionCall","src":"4060:38:13"},"nodeType":"YulIf","src":"4057:84:13"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:13","type":""}],"src":"3827:320:13"},{"body":{"nodeType":"YulBlock","src":"4207:87:13","statements":[{"nodeType":"YulAssignment","src":"4217:11:13","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:13"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:13","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:13"},"nodeType":"YulFunctionCall","src":"4238:14:13"},"nodeType":"YulExpressionStatement","src":"4238:14:13"},{"nodeType":"YulAssignment","src":"4261:26:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:13","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:13"},"nodeType":"YulFunctionCall","src":"4269:18:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:13"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:13","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:13","type":""}],"src":"4153:141:13"},{"body":{"nodeType":"YulBlock","src":"4344:49:13","statements":[{"nodeType":"YulAssignment","src":"4354:33:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:13"},"nodeType":"YulFunctionCall","src":"4368:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:13","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:13"},"nodeType":"YulFunctionCall","src":"4364:23:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:13"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:13","type":""}],"src":"4300:93:13"},{"body":{"nodeType":"YulBlock","src":"4452:54:13","statements":[{"nodeType":"YulAssignment","src":"4462:37:13","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:13"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:13"},"nodeType":"YulFunctionCall","src":"4483:16:13"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:13"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:13","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:13","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:13","type":""}],"src":"4399:107:13"},{"body":{"nodeType":"YulBlock","src":"4588:317:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:13","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:13","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:13"},"nodeType":"YulFunctionCall","src":"4615:18:13"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:13","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:13"},"nodeType":"YulFunctionCall","src":"4654:97:13"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:13","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:13","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:13"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:13"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:13"},"nodeType":"YulFunctionCall","src":"4772:39:13"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:13"}]},{"nodeType":"YulAssignment","src":"4820:30:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:13"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:13"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:13"},"nodeType":"YulFunctionCall","src":"4840:9:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:13"},"nodeType":"YulFunctionCall","src":"4829:21:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:13"}]},{"nodeType":"YulAssignment","src":"4859:40:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:13"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:13"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:13"},"nodeType":"YulFunctionCall","src":"4879:19:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:13"},"nodeType":"YulFunctionCall","src":"4869:30:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:13"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:13","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:13","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:13","type":""}],"src":"4512:393:13"},{"body":{"nodeType":"YulBlock","src":"4956:32:13","statements":[{"nodeType":"YulAssignment","src":"4966:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:13"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:13","type":""}],"src":"4911:77:13"},{"body":{"nodeType":"YulBlock","src":"5026:28:13","statements":[{"nodeType":"YulAssignment","src":"5036:12:13","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:13"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:13","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:13","type":""}],"src":"4994:60:13"},{"body":{"nodeType":"YulBlock","src":"5120:82:13","statements":[{"nodeType":"YulAssignment","src":"5130:66:13","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:13"},"nodeType":"YulFunctionCall","src":"5170:24:13"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:13"},"nodeType":"YulFunctionCall","src":"5161:34:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:13"},"nodeType":"YulFunctionCall","src":"5143:53:13"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:13"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:13","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:13","type":""}],"src":"5060:142:13"},{"body":{"nodeType":"YulBlock","src":"5255:28:13","statements":[{"nodeType":"YulAssignment","src":"5265:12:13","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:13"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:13","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:13","type":""}],"src":"5208:75:13"},{"body":{"nodeType":"YulBlock","src":"5365:193:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:13","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:13"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:13"},"nodeType":"YulFunctionCall","src":"5399:39:13"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:13","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:13"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:13"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:13"},"nodeType":"YulFunctionCall","src":"5488:11:13"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:13"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:13"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:13"},"nodeType":"YulFunctionCall","src":"5509:41:13"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:13"},"nodeType":"YulFunctionCall","src":"5460:91:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:13"},"nodeType":"YulFunctionCall","src":"5447:105:13"},"nodeType":"YulExpressionStatement","src":"5447:105:13"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:13","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:13","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:13","type":""}],"src":"5289:269:13"},{"body":{"nodeType":"YulBlock","src":"5613:24:13","statements":[{"nodeType":"YulAssignment","src":"5623:8:13","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:13","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:13"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:13","type":""}],"src":"5564:73:13"},{"body":{"nodeType":"YulBlock","src":"5696:136:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:13","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:13"},"nodeType":"YulFunctionCall","src":"5720:32:13"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:13","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:13"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:13"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:13"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:13"},"nodeType":"YulFunctionCall","src":"5761:65:13"},"nodeType":"YulExpressionStatement","src":"5761:65:13"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:13","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:13","type":""}],"src":"5643:189:13"},{"body":{"nodeType":"YulBlock","src":"5888:136:13","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:13","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:13","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:13"},"nodeType":"YulFunctionCall","src":"5969:39:13"},"nodeType":"YulExpressionStatement","src":"5969:39:13"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:13"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:13"},"nodeType":"YulFunctionCall","src":"5905:14:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:13","statements":[{"nodeType":"YulAssignment","src":"5922:22:13","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:13"},"nodeType":"YulFunctionCall","src":"5931:13:13"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:13"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:13","statements":[]},"src":"5898:120:13"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:13","type":""}],"src":"5838:186:13"},{"body":{"nodeType":"YulBlock","src":"6109:464:13","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:13","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:13"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:13"},"nodeType":"YulFunctionCall","src":"6165:38:13"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:13","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:13"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:13"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:13"},"nodeType":"YulFunctionCall","src":"6249:29:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:13"},"nodeType":"YulFunctionCall","src":"6235:44:13"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:13","statements":[{"nodeType":"YulAssignment","src":"6438:23:13","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:13"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:13"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:13","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:13"},"nodeType":"YulFunctionCall","src":"6417:18:13"},"nodeType":"YulIf","src":"6414:49:13"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:13"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:13"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:13"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:13"},"nodeType":"YulFunctionCall","src":"6532:22:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:13"},"nodeType":"YulFunctionCall","src":"6518:37:13"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:13"},"nodeType":"YulFunctionCall","src":"6476:80:13"},"nodeType":"YulExpressionStatement","src":"6476:80:13"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:13","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:13"},"nodeType":"YulFunctionCall","src":"6123:11:13"},"nodeType":"YulIf","src":"6120:446:13"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:13","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:13","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:13","type":""}],"src":"6030:543:13"},{"body":{"nodeType":"YulBlock","src":"6642:54:13","statements":[{"nodeType":"YulAssignment","src":"6652:37:13","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:13"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:13"},"nodeType":"YulFunctionCall","src":"6673:16:13"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:13"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:13","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:13","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:13","type":""}],"src":"6579:117:13"},{"body":{"nodeType":"YulBlock","src":"6753:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:13","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:13","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:13"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:13"},"nodeType":"YulFunctionCall","src":"6808:13:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:13"},"nodeType":"YulFunctionCall","src":"6823:6:13"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:13"},"nodeType":"YulFunctionCall","src":"6779:51:13"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:13"},"nodeType":"YulFunctionCall","src":"6775:56:13"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:13","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:13"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:13"},"nodeType":"YulFunctionCall","src":"6850:15:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:13"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:13","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:13","type":""}],"src":"6702:169:13"},{"body":{"nodeType":"YulBlock","src":"6957:214:13","statements":[{"nodeType":"YulAssignment","src":"7090:37:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:13"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:13"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:13"},"nodeType":"YulFunctionCall","src":"7098:29:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:13"}]},{"nodeType":"YulAssignment","src":"7136:29:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:13","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:13"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:13"},"nodeType":"YulFunctionCall","src":"7153:11:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:13"},"nodeType":"YulFunctionCall","src":"7144:21:13"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:13"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:13","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:13","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:13","type":""}],"src":"6876:295:13"},{"body":{"nodeType":"YulBlock","src":"7268:1303:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:13"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:13"},"nodeType":"YulFunctionCall","src":"7293:37:13"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:13"},"nodeType":"YulFunctionCall","src":"7417:18:13"},"nodeType":"YulExpressionStatement","src":"7417:18:13"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:13"},"nodeType":"YulFunctionCall","src":"7384:30:13"},"nodeType":"YulIf","src":"7381:56:13"},{"nodeType":"YulVariableDeclaration","src":"7447:52:13","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:13"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:13"},"nodeType":"YulFunctionCall","src":"7487:11:13"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:13"},"nodeType":"YulFunctionCall","src":"7461:38:13"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:13","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:13"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:13"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:13"},"nodeType":"YulFunctionCall","src":"7546:67:13"},"nodeType":"YulExpressionStatement","src":"7546:67:13"},{"nodeType":"YulVariableDeclaration","src":"7623:18:13","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:13","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:13","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:13","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:13","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:13"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:13","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:13","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:13"},"nodeType":"YulFunctionCall","src":"7756:9:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:13"},"nodeType":"YulFunctionCall","src":"7744:22:13"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:13","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:13"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:13"},"nodeType":"YulFunctionCall","src":"7794:37:13"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:13","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:13"},"nodeType":"YulFunctionCall","src":"7951:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:13"},"nodeType":"YulFunctionCall","src":"7945:26:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:13"},"nodeType":"YulFunctionCall","src":"7930:42:13"},"nodeType":"YulExpressionStatement","src":"7930:42:13"},{"nodeType":"YulAssignment","src":"7989:24:13","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:13"},"nodeType":"YulFunctionCall","src":"7999:14:13"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:13"}]},{"nodeType":"YulAssignment","src":"8030:31:13","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:13"},"nodeType":"YulFunctionCall","src":"8043:18:13"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:13"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:13"},"nodeType":"YulFunctionCall","src":"7875:14:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:13","statements":[{"nodeType":"YulAssignment","src":"7892:17:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:13"},"nodeType":"YulFunctionCall","src":"7897:12:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:13","statements":[]},"src":"7867:208:13"},{"body":{"nodeType":"YulBlock","src":"8111:156:13","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:13","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:13"},"nodeType":"YulFunctionCall","src":"8152:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:13"},"nodeType":"YulFunctionCall","src":"8146:26:13"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:13","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:13"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:13"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:13","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:13"},"nodeType":"YulFunctionCall","src":"8234:17:13"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:13"},"nodeType":"YulFunctionCall","src":"8204:48:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:13"},"nodeType":"YulFunctionCall","src":"8189:64:13"},"nodeType":"YulExpressionStatement","src":"8189:64:13"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:13"},"nodeType":"YulFunctionCall","src":"8091:19:13"},"nodeType":"YulIf","src":"8088:179:13"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:13"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:13","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:13"},"nodeType":"YulFunctionCall","src":"8297:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:13"},"nodeType":"YulFunctionCall","src":"8293:22:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:13"},"nodeType":"YulFunctionCall","src":"8280:36:13"},"nodeType":"YulExpressionStatement","src":"8280:36:13"}]},"nodeType":"YulCase","src":"7708:618:13","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:13","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:13","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:13","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:13","statements":[{"nodeType":"YulAssignment","src":"8412:35:13","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:13"},"nodeType":"YulFunctionCall","src":"8427:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:13"},"nodeType":"YulFunctionCall","src":"8421:26:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:13"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:13"},"nodeType":"YulIf","src":"8384:77:13"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:13"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:13"},"nodeType":"YulFunctionCall","src":"8487:67:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:13"},"nodeType":"YulFunctionCall","src":"8474:81:13"},"nodeType":"YulExpressionStatement","src":"8474:81:13"}]},"nodeType":"YulCase","src":"8335:230:13","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:13","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:13"},"nodeType":"YulFunctionCall","src":"7685:14:13"},"nodeType":"YulSwitch","src":"7678:887:13"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:13","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:13","type":""}],"src":"7176:1395:13"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620017f5380380620017f58339818101604052810190620000379190620001f6565b8160039081620000489190620004c6565b5080600490816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61123880620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b15565b60405180910390f35b6100e660048036038101906100e19190610bd0565b610308565b6040516100f39190610c2b565b60405180910390f35b61010461032b565b6040516101119190610c55565b60405180910390f35b610134600480360381019061012f9190610c70565b610335565b6040516101419190610c2b565b60405180910390f35b610152610364565b60405161015f9190610cdf565b60405180910390f35b610182600480360381019061017d9190610bd0565b61036d565b60405161018f9190610c2b565b60405180910390f35b6101b260048036038101906101ad9190610cfa565b6103a4565b6040516101bf9190610c55565b60405180910390f35b6101d06103ec565b6040516101dd9190610b15565b60405180910390f35b61020060048036038101906101fb9190610bd0565b61047e565b60405161020d9190610c2b565b60405180910390f35b610230600480360381019061022b9190610bd0565b6104f5565b60405161023d9190610c2b565b60405180910390f35b610260600480360381019061025b9190610d27565b610518565b60405161026d9190610c55565b60405180910390f35b60606003805461028590610d96565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d96565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610df6565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d96565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d96565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e9c565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f2e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fc0565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c55565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df9061102c565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110be565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611150565b60405180910390fd5b6108e5838383610a7b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111e2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109fe9190610df6565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a629190610c55565b60405180910390a3610a75848484610a80565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610abf578082015181840152602081019050610aa4565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ae782610a85565b610af18185610a90565b9350610b01818560208601610aa1565b610b0a81610acb565b840191505092915050565b60006020820190508181036000830152610b2f8184610adc565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6782610b3c565b9050919050565b610b7781610b5c565b8114610b8257600080fd5b50565b600081359050610b9481610b6e565b92915050565b6000819050919050565b610bad81610b9a565b8114610bb857600080fd5b50565b600081359050610bca81610ba4565b92915050565b60008060408385031215610be757610be6610b37565b5b6000610bf585828601610b85565b9250506020610c0685828601610bbb565b9150509250929050565b60008115159050919050565b610c2581610c10565b82525050565b6000602082019050610c406000830184610c1c565b92915050565b610c4f81610b9a565b82525050565b6000602082019050610c6a6000830184610c46565b92915050565b600080600060608486031215610c8957610c88610b37565b5b6000610c9786828701610b85565b9350506020610ca886828701610b85565b9250506040610cb986828701610bbb565b9150509250925092565b600060ff82169050919050565b610cd981610cc3565b82525050565b6000602082019050610cf46000830184610cd0565b92915050565b600060208284031215610d1057610d0f610b37565b5b6000610d1e84828501610b85565b91505092915050565b60008060408385031215610d3e57610d3d610b37565b5b6000610d4c85828601610b85565b9250506020610d5d85828601610b85565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610dae57607f821691505b602082108103610dc157610dc0610d67565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0182610b9a565b9150610e0c83610b9a565b9250828201905080821115610e2457610e23610dc7565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e86602583610a90565b9150610e9182610e2a565b604082019050919050565b60006020820190508181036000830152610eb581610e79565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f18602483610a90565b9150610f2382610ebc565b604082019050919050565b60006020820190508181036000830152610f4781610f0b565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610faa602283610a90565b9150610fb582610f4e565b604082019050919050565b60006020820190508181036000830152610fd981610f9d565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611016601d83610a90565b915061102182610fe0565b602082019050919050565b6000602082019050818103600083015261104581611009565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110a8602583610a90565b91506110b38261104c565b604082019050919050565b600060208201905081810360008301526110d78161109b565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061113a602383610a90565b9150611145826110de565b604082019050919050565b600060208201905081810360008301526111698161112d565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111cc602683610a90565b91506111d782611170565b604082019050919050565b600060208201905081810360008301526111fb816111bf565b905091905056fea26469706673582212208fd62d4ded66c1a97ce910233d42f32bf9822fdde7d56e31daa7cc85fb1741e264736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17F5 CODESIZE SUB DUP1 PUSH3 0x17F5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1238 DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD27 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x102C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9FE SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA62 SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA75 DUP5 DUP5 DUP5 PUSH2 0xA80 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xABF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE7 DUP3 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0xAF1 DUP2 DUP6 PUSH2 0xA90 JUMP JUMPDEST SWAP4 POP PUSH2 0xB01 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0xB0A DUP2 PUSH2 0xACB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB2F DUP2 DUP5 PUSH2 0xADC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB67 DUP3 PUSH2 0xB3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB77 DUP2 PUSH2 0xB5C JUMP JUMPDEST DUP2 EQ PUSH2 0xB82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB94 DUP2 PUSH2 0xB6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBAD DUP2 PUSH2 0xB9A JUMP JUMPDEST DUP2 EQ PUSH2 0xBB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBCA DUP2 PUSH2 0xBA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE7 JUMPI PUSH2 0xBE6 PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF5 DUP6 DUP3 DUP7 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC06 DUP6 DUP3 DUP7 ADD PUSH2 0xBBB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC25 DUP2 PUSH2 0xC10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC40 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC4F DUP2 PUSH2 0xB9A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC6A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC88 PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC97 DUP7 DUP3 DUP8 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCA8 DUP7 DUP3 DUP8 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB9 DUP7 DUP3 DUP8 ADD PUSH2 0xBBB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD9 DUP2 PUSH2 0xCC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD10 JUMPI PUSH2 0xD0F PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD1E DUP5 DUP3 DUP6 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD3E JUMPI PUSH2 0xD3D PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD4C DUP6 DUP3 DUP7 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD5D DUP6 DUP3 DUP7 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDAE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDC1 JUMPI PUSH2 0xDC0 PUSH2 0xD67 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE01 DUP3 PUSH2 0xB9A JUMP JUMPDEST SWAP2 POP PUSH2 0xE0C DUP4 PUSH2 0xB9A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE24 JUMPI PUSH2 0xE23 PUSH2 0xDC7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE86 PUSH1 0x25 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xE91 DUP3 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEB5 DUP2 PUSH2 0xE79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF18 PUSH1 0x24 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xF23 DUP3 PUSH2 0xEBC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF47 DUP2 PUSH2 0xF0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFAA PUSH1 0x22 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xFB5 DUP3 PUSH2 0xF4E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD9 DUP2 PUSH2 0xF9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1016 PUSH1 0x1D DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1021 DUP3 PUSH2 0xFE0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1045 DUP2 PUSH2 0x1009 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A8 PUSH1 0x25 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x10B3 DUP3 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10D7 DUP2 PUSH2 0x109B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113A PUSH1 0x23 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1145 DUP3 PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1169 DUP2 PUSH2 0x112D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11CC PUSH1 0x26 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x11D7 DUP3 PUSH2 0x1170 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11FB DUP2 PUSH2 0x11BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xD6 0x2D 0x4D 0xED PUSH7 0xC1A97CE910233D TIMESTAMP RETURN 0x2B 0xF9 DUP3 0x2F 0xDD 0xE7 0xD5 PUSH15 0x31DAA7CC85FB1741E264736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1403:11214:4:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2052:5;2044;:13;;;;;;:::i;:::-;;2077:7;2067;:17;;;;;;:::i;:::-;;1978:113;;1403:11214;;7:75:13;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1403:11214:4:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_893":{"entryPoint":2688,"id":893,"parameterSlots":3,"returnSlots":0},"@_approve_828":{"entryPoint":1447,"id":828,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_882":{"entryPoint":2683,"id":882,"parameterSlots":3,"returnSlots":0},"@_msgSender_1009":{"entryPoint":1439,"id":1009,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_871":{"entryPoint":1904,"id":871,"parameterSlots":3,"returnSlots":0},"@_transfer_655":{"entryPoint":2044,"id":655,"parameterSlots":3,"returnSlots":0},"@allowance_450":{"entryPoint":1304,"id":450,"parameterSlots":2,"returnSlots":1},"@approve_475":{"entryPoint":776,"id":475,"parameterSlots":2,"returnSlots":1},"@balanceOf_407":{"entryPoint":932,"id":407,"parameterSlots":1,"returnSlots":1},"@decimals_383":{"entryPoint":868,"id":383,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_578":{"entryPoint":1150,"id":578,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_537":{"entryPoint":877,"id":537,"parameterSlots":2,"returnSlots":1},"@name_363":{"entryPoint":630,"id":363,"parameterSlots":0,"returnSlots":1},"@symbol_373":{"entryPoint":1004,"id":373,"parameterSlots":0,"returnSlots":1},"@totalSupply_393":{"entryPoint":811,"id":393,"parameterSlots":0,"returnSlots":1},"@transferFrom_508":{"entryPoint":821,"id":508,"parameterSlots":3,"returnSlots":1},"@transfer_432":{"entryPoint":1269,"id":432,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2949,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3003,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3322,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3367,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3184,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3024,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3100,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2780,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4397,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3997,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4105,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4543,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4251,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3851,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3705,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3142,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3280,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3115,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2837,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4432,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4032,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4140,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4578,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4286,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3886,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3740,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3157,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3295,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2693,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2704,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3574,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2908,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3088,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2876,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2970,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3267,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2721,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3478,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3527,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3431,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2871,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2763,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4318,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3918,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4064,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4464,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4172,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3772,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3626,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2926,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2980,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13699:13","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:13","statements":[{"nodeType":"YulAssignment","src":"77:22:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:13"},"nodeType":"YulFunctionCall","src":"87:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:13"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:13","type":""}],"src":"7:99:13"},{"body":{"nodeType":"YulBlock","src":"208:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:13"},"nodeType":"YulFunctionCall","src":"218:19:13"},"nodeType":"YulExpressionStatement","src":"218:19:13"},{"nodeType":"YulAssignment","src":"246:29:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:13"},"nodeType":"YulFunctionCall","src":"261:14:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:13"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:13","type":""}],"src":"112:169:13"},{"body":{"nodeType":"YulBlock","src":"349:184:13","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:13"},"nodeType":"YulFunctionCall","src":"449:11:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:13"},"nodeType":"YulFunctionCall","src":"468:11:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:13"},"nodeType":"YulFunctionCall","src":"462:18:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:13"},"nodeType":"YulFunctionCall","src":"442:39:13"},"nodeType":"YulExpressionStatement","src":"442:39:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:13"},"nodeType":"YulFunctionCall","src":"386:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:13","statements":[{"nodeType":"YulAssignment","src":"402:15:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:13"},"nodeType":"YulFunctionCall","src":"407:10:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:13","statements":[]},"src":"378:113:13"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:13"},"nodeType":"YulFunctionCall","src":"507:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:13"},"nodeType":"YulFunctionCall","src":"500:27:13"},"nodeType":"YulExpressionStatement","src":"500:27:13"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:13","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:13","type":""}],"src":"287:246:13"},{"body":{"nodeType":"YulBlock","src":"587:54:13","statements":[{"nodeType":"YulAssignment","src":"597:38:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:13"},"nodeType":"YulFunctionCall","src":"611:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:13"},"nodeType":"YulFunctionCall","src":"627:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:13"},"nodeType":"YulFunctionCall","src":"607:28:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:13"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:13","type":""}],"src":"539:102:13"},{"body":{"nodeType":"YulBlock","src":"739:285:13","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:13"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:13"},"nodeType":"YulFunctionCall","src":"763:39:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:13","type":""}]},{"nodeType":"YulAssignment","src":"811:78:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:13"},"nodeType":"YulFunctionCall","src":"818:71:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:13"},"nodeType":"YulFunctionCall","src":"933:16:13"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:13"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:13"},"nodeType":"YulFunctionCall","src":"898:65:13"},"nodeType":"YulExpressionStatement","src":"898:65:13"},{"nodeType":"YulAssignment","src":"972:46:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:13"},"nodeType":"YulFunctionCall","src":"988:29:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:13"},"nodeType":"YulFunctionCall","src":"979:39:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:13"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:13","type":""}],"src":"647:377:13"},{"body":{"nodeType":"YulBlock","src":"1148:195:13","statements":[{"nodeType":"YulAssignment","src":"1158:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:13"},"nodeType":"YulFunctionCall","src":"1166:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:13"},"nodeType":"YulFunctionCall","src":"1201:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:13"},"nodeType":"YulFunctionCall","src":"1220:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:13"},"nodeType":"YulFunctionCall","src":"1194:47:13"},"nodeType":"YulExpressionStatement","src":"1194:47:13"},{"nodeType":"YulAssignment","src":"1250:86:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:13"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:13"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:13"},"nodeType":"YulFunctionCall","src":"1258:78:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:13"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:13","type":""}],"src":"1030:313:13"},{"body":{"nodeType":"YulBlock","src":"1389:35:13","statements":[{"nodeType":"YulAssignment","src":"1399:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:13"},"nodeType":"YulFunctionCall","src":"1409:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:13","type":""}],"src":"1349:75:13"},{"body":{"nodeType":"YulBlock","src":"1519:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:13"},"nodeType":"YulFunctionCall","src":"1529:12:13"},"nodeType":"YulExpressionStatement","src":"1529:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:13"},{"body":{"nodeType":"YulBlock","src":"1642:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:13"},"nodeType":"YulFunctionCall","src":"1652:12:13"},"nodeType":"YulExpressionStatement","src":"1652:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:13"},{"body":{"nodeType":"YulBlock","src":"1721:81:13","statements":[{"nodeType":"YulAssignment","src":"1731:65:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:13"},"nodeType":"YulFunctionCall","src":"1742:54:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:13"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:13","type":""}],"src":"1676:126:13"},{"body":{"nodeType":"YulBlock","src":"1853:51:13","statements":[{"nodeType":"YulAssignment","src":"1863:35:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:13"},"nodeType":"YulFunctionCall","src":"1874:24:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:13"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:13","type":""}],"src":"1808:96:13"},{"body":{"nodeType":"YulBlock","src":"1953:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:13"},"nodeType":"YulFunctionCall","src":"2012:12:13"},"nodeType":"YulExpressionStatement","src":"2012:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:13"},"nodeType":"YulFunctionCall","src":"1983:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:13"},"nodeType":"YulFunctionCall","src":"1973:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:13"},"nodeType":"YulFunctionCall","src":"1966:43:13"},"nodeType":"YulIf","src":"1963:63:13"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:13","type":""}],"src":"1910:122:13"},{"body":{"nodeType":"YulBlock","src":"2090:87:13","statements":[{"nodeType":"YulAssignment","src":"2100:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:13"},"nodeType":"YulFunctionCall","src":"2109:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:13"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:13"},"nodeType":"YulFunctionCall","src":"2138:33:13"},"nodeType":"YulExpressionStatement","src":"2138:33:13"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:13","type":""}],"src":"2038:139:13"},{"body":{"nodeType":"YulBlock","src":"2228:32:13","statements":[{"nodeType":"YulAssignment","src":"2238:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:13"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:13","type":""}],"src":"2183:77:13"},{"body":{"nodeType":"YulBlock","src":"2309:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:13"},"nodeType":"YulFunctionCall","src":"2368:12:13"},"nodeType":"YulExpressionStatement","src":"2368:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:13"},"nodeType":"YulFunctionCall","src":"2339:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:13"},"nodeType":"YulFunctionCall","src":"2329:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:13"},"nodeType":"YulFunctionCall","src":"2322:43:13"},"nodeType":"YulIf","src":"2319:63:13"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:13","type":""}],"src":"2266:122:13"},{"body":{"nodeType":"YulBlock","src":"2446:87:13","statements":[{"nodeType":"YulAssignment","src":"2456:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:13"},"nodeType":"YulFunctionCall","src":"2465:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:13"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:13"},"nodeType":"YulFunctionCall","src":"2494:33:13"},"nodeType":"YulExpressionStatement","src":"2494:33:13"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:13","type":""}],"src":"2394:139:13"},{"body":{"nodeType":"YulBlock","src":"2622:391:13","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:13"},"nodeType":"YulFunctionCall","src":"2670:79:13"},"nodeType":"YulExpressionStatement","src":"2670:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:13"},"nodeType":"YulFunctionCall","src":"2639:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:13"},"nodeType":"YulFunctionCall","src":"2635:32:13"},"nodeType":"YulIf","src":"2632:119:13"},{"nodeType":"YulBlock","src":"2761:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:13"},"nodeType":"YulFunctionCall","src":"2836:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:13"},"nodeType":"YulFunctionCall","src":"2815:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:13"}]}]},{"nodeType":"YulBlock","src":"2888:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:13"},"nodeType":"YulFunctionCall","src":"2964:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:13"},"nodeType":"YulFunctionCall","src":"2943:53:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:13","type":""}],"src":"2539:474:13"},{"body":{"nodeType":"YulBlock","src":"3061:48:13","statements":[{"nodeType":"YulAssignment","src":"3071:32:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:13"},"nodeType":"YulFunctionCall","src":"3089:13:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:13"},"nodeType":"YulFunctionCall","src":"3082:21:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:13"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:13","type":""}],"src":"3019:90:13"},{"body":{"nodeType":"YulBlock","src":"3174:50:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:13"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:13"},"nodeType":"YulFunctionCall","src":"3196:21:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:13"},"nodeType":"YulFunctionCall","src":"3184:34:13"},"nodeType":"YulExpressionStatement","src":"3184:34:13"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:13","type":""}],"src":"3115:109:13"},{"body":{"nodeType":"YulBlock","src":"3322:118:13","statements":[{"nodeType":"YulAssignment","src":"3332:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:13"},"nodeType":"YulFunctionCall","src":"3340:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:13"},"nodeType":"YulFunctionCall","src":"3415:17:13"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:13"},"nodeType":"YulFunctionCall","src":"3368:65:13"},"nodeType":"YulExpressionStatement","src":"3368:65:13"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:13","type":""}],"src":"3230:210:13"},{"body":{"nodeType":"YulBlock","src":"3511:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:13"},"nodeType":"YulFunctionCall","src":"3533:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:13"},"nodeType":"YulFunctionCall","src":"3521:37:13"},"nodeType":"YulExpressionStatement","src":"3521:37:13"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:13","type":""}],"src":"3446:118:13"},{"body":{"nodeType":"YulBlock","src":"3668:124:13","statements":[{"nodeType":"YulAssignment","src":"3678:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:13"},"nodeType":"YulFunctionCall","src":"3686:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:13"},"nodeType":"YulFunctionCall","src":"3767:17:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:13"},"nodeType":"YulFunctionCall","src":"3714:71:13"},"nodeType":"YulExpressionStatement","src":"3714:71:13"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:13","type":""}],"src":"3570:222:13"},{"body":{"nodeType":"YulBlock","src":"3898:519:13","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:13"},"nodeType":"YulFunctionCall","src":"3946:79:13"},"nodeType":"YulExpressionStatement","src":"3946:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:13"},"nodeType":"YulFunctionCall","src":"3915:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:13","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:13"},"nodeType":"YulFunctionCall","src":"3911:32:13"},"nodeType":"YulIf","src":"3908:119:13"},{"nodeType":"YulBlock","src":"4037:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:13","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:13"},"nodeType":"YulFunctionCall","src":"4112:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:13"},"nodeType":"YulFunctionCall","src":"4091:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:13"}]}]},{"nodeType":"YulBlock","src":"4164:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:13","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:13"},"nodeType":"YulFunctionCall","src":"4240:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:13"},"nodeType":"YulFunctionCall","src":"4219:53:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:13"}]}]},{"nodeType":"YulBlock","src":"4292:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:13","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:13","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:13"},"nodeType":"YulFunctionCall","src":"4368:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:13"},"nodeType":"YulFunctionCall","src":"4347:53:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:13","type":""}],"src":"3798:619:13"},{"body":{"nodeType":"YulBlock","src":"4466:43:13","statements":[{"nodeType":"YulAssignment","src":"4476:27:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:13","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:13"},"nodeType":"YulFunctionCall","src":"4487:16:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:13"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:13","type":""}],"src":"4423:86:13"},{"body":{"nodeType":"YulBlock","src":"4576:51:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:13"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:13"},"nodeType":"YulFunctionCall","src":"4598:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:13"},"nodeType":"YulFunctionCall","src":"4586:35:13"},"nodeType":"YulExpressionStatement","src":"4586:35:13"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:13","type":""}],"src":"4515:112:13"},{"body":{"nodeType":"YulBlock","src":"4727:120:13","statements":[{"nodeType":"YulAssignment","src":"4737:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:13"},"nodeType":"YulFunctionCall","src":"4745:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:13"},"nodeType":"YulFunctionCall","src":"4822:17:13"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:13"},"nodeType":"YulFunctionCall","src":"4773:67:13"},"nodeType":"YulExpressionStatement","src":"4773:67:13"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:13","type":""}],"src":"4633:214:13"},{"body":{"nodeType":"YulBlock","src":"4919:263:13","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:13"},"nodeType":"YulFunctionCall","src":"4967:79:13"},"nodeType":"YulExpressionStatement","src":"4967:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:13"},"nodeType":"YulFunctionCall","src":"4936:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:13"},"nodeType":"YulFunctionCall","src":"4932:32:13"},"nodeType":"YulIf","src":"4929:119:13"},{"nodeType":"YulBlock","src":"5058:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:13","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:13"},"nodeType":"YulFunctionCall","src":"5133:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:13"},"nodeType":"YulFunctionCall","src":"5112:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:13"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:13","type":""}],"src":"4853:329:13"},{"body":{"nodeType":"YulBlock","src":"5271:391:13","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:13"},"nodeType":"YulFunctionCall","src":"5319:79:13"},"nodeType":"YulExpressionStatement","src":"5319:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:13"},"nodeType":"YulFunctionCall","src":"5288:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:13"},"nodeType":"YulFunctionCall","src":"5284:32:13"},"nodeType":"YulIf","src":"5281:119:13"},{"nodeType":"YulBlock","src":"5410:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:13","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:13"},"nodeType":"YulFunctionCall","src":"5485:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:13"},"nodeType":"YulFunctionCall","src":"5464:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:13"}]}]},{"nodeType":"YulBlock","src":"5537:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:13","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:13"},"nodeType":"YulFunctionCall","src":"5613:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:13"},"nodeType":"YulFunctionCall","src":"5592:53:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:13","type":""}],"src":"5188:474:13"},{"body":{"nodeType":"YulBlock","src":"5696:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:13"},"nodeType":"YulFunctionCall","src":"5706:88:13"},"nodeType":"YulExpressionStatement","src":"5706:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:13","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:13"},"nodeType":"YulFunctionCall","src":"5803:15:13"},"nodeType":"YulExpressionStatement","src":"5803:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:13"},"nodeType":"YulFunctionCall","src":"5827:15:13"},"nodeType":"YulExpressionStatement","src":"5827:15:13"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:13"},{"body":{"nodeType":"YulBlock","src":"5905:269:13","statements":[{"nodeType":"YulAssignment","src":"5915:22:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:13","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:13"},"nodeType":"YulFunctionCall","src":"5925:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:13","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:13"},"nodeType":"YulFunctionCall","src":"5972:12:13"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:13","statements":[{"nodeType":"YulAssignment","src":"6037:27:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:13","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:13"},"nodeType":"YulFunctionCall","src":"6047:17:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:13"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:13"},"nodeType":"YulFunctionCall","src":"5996:26:13"},"nodeType":"YulIf","src":"5993:81:13"},{"body":{"nodeType":"YulBlock","src":"6126:42:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:13"},"nodeType":"YulFunctionCall","src":"6140:18:13"},"nodeType":"YulExpressionStatement","src":"6140:18:13"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:13","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:13"},"nodeType":"YulFunctionCall","src":"6110:14:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:13"},"nodeType":"YulFunctionCall","src":"6087:38:13"},"nodeType":"YulIf","src":"6084:84:13"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:13","type":""}],"src":"5854:320:13"},{"body":{"nodeType":"YulBlock","src":"6208:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6225:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6228:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6218:6:13"},"nodeType":"YulFunctionCall","src":"6218:88:13"},"nodeType":"YulExpressionStatement","src":"6218:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6322:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6325:4:13","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:13"},"nodeType":"YulFunctionCall","src":"6315:15:13"},"nodeType":"YulExpressionStatement","src":"6315:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6346:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6349:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6339:6:13"},"nodeType":"YulFunctionCall","src":"6339:15:13"},"nodeType":"YulExpressionStatement","src":"6339:15:13"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6180:180:13"},{"body":{"nodeType":"YulBlock","src":"6410:147:13","statements":[{"nodeType":"YulAssignment","src":"6420:25:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6443:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6425:17:13"},"nodeType":"YulFunctionCall","src":"6425:20:13"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6420:1:13"}]},{"nodeType":"YulAssignment","src":"6454:25:13","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6477:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6459:17:13"},"nodeType":"YulFunctionCall","src":"6459:20:13"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6454:1:13"}]},{"nodeType":"YulAssignment","src":"6488:16:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6499:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"6502:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:13"},"nodeType":"YulFunctionCall","src":"6495:9:13"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6488:3:13"}]},{"body":{"nodeType":"YulBlock","src":"6528:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6530:16:13"},"nodeType":"YulFunctionCall","src":"6530:18:13"},"nodeType":"YulExpressionStatement","src":"6530:18:13"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6520:1:13"},{"name":"sum","nodeType":"YulIdentifier","src":"6523:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6517:2:13"},"nodeType":"YulFunctionCall","src":"6517:10:13"},"nodeType":"YulIf","src":"6514:36:13"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6397:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"6400:1:13","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6406:3:13","type":""}],"src":"6366:191:13"},{"body":{"nodeType":"YulBlock","src":"6669:118:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6691:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"6699:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6687:3:13"},"nodeType":"YulFunctionCall","src":"6687:14:13"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6703:34:13","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6680:6:13"},"nodeType":"YulFunctionCall","src":"6680:58:13"},"nodeType":"YulExpressionStatement","src":"6680:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6759:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"6767:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6755:3:13"},"nodeType":"YulFunctionCall","src":"6755:15:13"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6772:7:13","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6748:6:13"},"nodeType":"YulFunctionCall","src":"6748:32:13"},"nodeType":"YulExpressionStatement","src":"6748:32:13"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:13","type":""}],"src":"6563:224:13"},{"body":{"nodeType":"YulBlock","src":"6939:220:13","statements":[{"nodeType":"YulAssignment","src":"6949:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7015:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:13","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6956:58:13"},"nodeType":"YulFunctionCall","src":"6956:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6949:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:13"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7032:88:13"},"nodeType":"YulFunctionCall","src":"7032:93:13"},"nodeType":"YulExpressionStatement","src":"7032:93:13"},{"nodeType":"YulAssignment","src":"7134:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7145:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"7150:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:13"},"nodeType":"YulFunctionCall","src":"7141:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7134:3:13"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6927:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6935:3:13","type":""}],"src":"6793:366:13"},{"body":{"nodeType":"YulBlock","src":"7336:248:13","statements":[{"nodeType":"YulAssignment","src":"7346:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7358:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7369:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7354:3:13"},"nodeType":"YulFunctionCall","src":"7354:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7346:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7404:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:13"},"nodeType":"YulFunctionCall","src":"7389:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7412:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"7418:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7408:3:13"},"nodeType":"YulFunctionCall","src":"7408:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7382:6:13"},"nodeType":"YulFunctionCall","src":"7382:47:13"},"nodeType":"YulExpressionStatement","src":"7382:47:13"},{"nodeType":"YulAssignment","src":"7438:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7572:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7446:124:13"},"nodeType":"YulFunctionCall","src":"7446:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7438:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7316:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7331:4:13","type":""}],"src":"7165:419:13"},{"body":{"nodeType":"YulBlock","src":"7696:117:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7718:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7726:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:13"},"nodeType":"YulFunctionCall","src":"7714:14:13"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7730:34:13","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:13"},"nodeType":"YulFunctionCall","src":"7707:58:13"},"nodeType":"YulExpressionStatement","src":"7707:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7786:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:13"},"nodeType":"YulFunctionCall","src":"7782:15:13"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7799:6:13","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7775:6:13"},"nodeType":"YulFunctionCall","src":"7775:31:13"},"nodeType":"YulExpressionStatement","src":"7775:31:13"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7688:6:13","type":""}],"src":"7590:223:13"},{"body":{"nodeType":"YulBlock","src":"7965:220:13","statements":[{"nodeType":"YulAssignment","src":"7975:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:13","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7982:58:13"},"nodeType":"YulFunctionCall","src":"7982:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7975:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8147:3:13"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8058:88:13"},"nodeType":"YulFunctionCall","src":"8058:93:13"},"nodeType":"YulExpressionStatement","src":"8058:93:13"},{"nodeType":"YulAssignment","src":"8160:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8171:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"8176:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:13"},"nodeType":"YulFunctionCall","src":"8167:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8160:3:13"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7953:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7961:3:13","type":""}],"src":"7819:366:13"},{"body":{"nodeType":"YulBlock","src":"8362:248:13","statements":[{"nodeType":"YulAssignment","src":"8372:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8395:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:13"},"nodeType":"YulFunctionCall","src":"8380:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8430:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:13"},"nodeType":"YulFunctionCall","src":"8415:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8438:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8434:3:13"},"nodeType":"YulFunctionCall","src":"8434:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8408:6:13"},"nodeType":"YulFunctionCall","src":"8408:47:13"},"nodeType":"YulExpressionStatement","src":"8408:47:13"},{"nodeType":"YulAssignment","src":"8464:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8598:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8472:124:13"},"nodeType":"YulFunctionCall","src":"8472:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8464:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8342:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8357:4:13","type":""}],"src":"8191:419:13"},{"body":{"nodeType":"YulBlock","src":"8722:115:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8744:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8752:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8740:3:13"},"nodeType":"YulFunctionCall","src":"8740:14:13"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8756:34:13","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8733:6:13"},"nodeType":"YulFunctionCall","src":"8733:58:13"},"nodeType":"YulExpressionStatement","src":"8733:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8812:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8820:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:13"},"nodeType":"YulFunctionCall","src":"8808:15:13"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8825:4:13","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8801:6:13"},"nodeType":"YulFunctionCall","src":"8801:29:13"},"nodeType":"YulExpressionStatement","src":"8801:29:13"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8714:6:13","type":""}],"src":"8616:221:13"},{"body":{"nodeType":"YulBlock","src":"8989:220:13","statements":[{"nodeType":"YulAssignment","src":"8999:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"9070:2:13","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9006:58:13"},"nodeType":"YulFunctionCall","src":"9006:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8999:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9171:3:13"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9082:88:13"},"nodeType":"YulFunctionCall","src":"9082:93:13"},"nodeType":"YulExpressionStatement","src":"9082:93:13"},{"nodeType":"YulAssignment","src":"9184:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9195:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:13"},"nodeType":"YulFunctionCall","src":"9191:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9184:3:13"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8977:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8985:3:13","type":""}],"src":"8843:366:13"},{"body":{"nodeType":"YulBlock","src":"9386:248:13","statements":[{"nodeType":"YulAssignment","src":"9396:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9408:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9419:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9404:3:13"},"nodeType":"YulFunctionCall","src":"9404:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9396:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9454:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:13"},"nodeType":"YulFunctionCall","src":"9439:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9462:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9458:3:13"},"nodeType":"YulFunctionCall","src":"9458:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:13"},"nodeType":"YulFunctionCall","src":"9432:47:13"},"nodeType":"YulExpressionStatement","src":"9432:47:13"},{"nodeType":"YulAssignment","src":"9488:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9622:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9496:124:13"},"nodeType":"YulFunctionCall","src":"9496:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9488:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9366:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9381:4:13","type":""}],"src":"9215:419:13"},{"body":{"nodeType":"YulBlock","src":"9746:73:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9768:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"9776:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9764:3:13"},"nodeType":"YulFunctionCall","src":"9764:14:13"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9780:31:13","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9757:6:13"},"nodeType":"YulFunctionCall","src":"9757:55:13"},"nodeType":"YulExpressionStatement","src":"9757:55:13"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9738:6:13","type":""}],"src":"9640:179:13"},{"body":{"nodeType":"YulBlock","src":"9971:220:13","statements":[{"nodeType":"YulAssignment","src":"9981:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"10052:2:13","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9988:58:13"},"nodeType":"YulFunctionCall","src":"9988:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9981:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10153:3:13"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10064:88:13"},"nodeType":"YulFunctionCall","src":"10064:93:13"},"nodeType":"YulExpressionStatement","src":"10064:93:13"},{"nodeType":"YulAssignment","src":"10166:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10177:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"10182:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:13"},"nodeType":"YulFunctionCall","src":"10173:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10166:3:13"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9959:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9967:3:13","type":""}],"src":"9825:366:13"},{"body":{"nodeType":"YulBlock","src":"10368:248:13","statements":[{"nodeType":"YulAssignment","src":"10378:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10390:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10401:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10386:3:13"},"nodeType":"YulFunctionCall","src":"10386:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10378:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10425:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10436:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10421:3:13"},"nodeType":"YulFunctionCall","src":"10421:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10444:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"10450:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10440:3:13"},"nodeType":"YulFunctionCall","src":"10440:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:13"},"nodeType":"YulFunctionCall","src":"10414:47:13"},"nodeType":"YulExpressionStatement","src":"10414:47:13"},{"nodeType":"YulAssignment","src":"10470:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10604:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10478:124:13"},"nodeType":"YulFunctionCall","src":"10478:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10470:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10348:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10363:4:13","type":""}],"src":"10197:419:13"},{"body":{"nodeType":"YulBlock","src":"10728:118:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10750:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10746:3:13"},"nodeType":"YulFunctionCall","src":"10746:14:13"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10762:34:13","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10739:6:13"},"nodeType":"YulFunctionCall","src":"10739:58:13"},"nodeType":"YulExpressionStatement","src":"10739:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10818:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"10826:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10814:3:13"},"nodeType":"YulFunctionCall","src":"10814:15:13"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10831:7:13","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10807:6:13"},"nodeType":"YulFunctionCall","src":"10807:32:13"},"nodeType":"YulExpressionStatement","src":"10807:32:13"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10720:6:13","type":""}],"src":"10622:224:13"},{"body":{"nodeType":"YulBlock","src":"10998:220:13","statements":[{"nodeType":"YulAssignment","src":"11008:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11074:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"11079:2:13","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11015:58:13"},"nodeType":"YulFunctionCall","src":"11015:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11008:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11180:3:13"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11091:88:13"},"nodeType":"YulFunctionCall","src":"11091:93:13"},"nodeType":"YulExpressionStatement","src":"11091:93:13"},{"nodeType":"YulAssignment","src":"11193:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11204:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"11209:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11200:3:13"},"nodeType":"YulFunctionCall","src":"11200:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11193:3:13"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10986:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10994:3:13","type":""}],"src":"10852:366:13"},{"body":{"nodeType":"YulBlock","src":"11395:248:13","statements":[{"nodeType":"YulAssignment","src":"11405:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:13"},"nodeType":"YulFunctionCall","src":"11413:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11405:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11452:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:13"},"nodeType":"YulFunctionCall","src":"11448:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11471:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11467:3:13"},"nodeType":"YulFunctionCall","src":"11467:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11441:6:13"},"nodeType":"YulFunctionCall","src":"11441:47:13"},"nodeType":"YulExpressionStatement","src":"11441:47:13"},{"nodeType":"YulAssignment","src":"11497:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11631:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11505:124:13"},"nodeType":"YulFunctionCall","src":"11505:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11497:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11375:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11390:4:13","type":""}],"src":"11224:419:13"},{"body":{"nodeType":"YulBlock","src":"11755:116:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11777:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"11785:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:13"},"nodeType":"YulFunctionCall","src":"11773:14:13"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11789:34:13","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11766:6:13"},"nodeType":"YulFunctionCall","src":"11766:58:13"},"nodeType":"YulExpressionStatement","src":"11766:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11845:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11841:3:13"},"nodeType":"YulFunctionCall","src":"11841:15:13"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"11858:5:13","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11834:6:13"},"nodeType":"YulFunctionCall","src":"11834:30:13"},"nodeType":"YulExpressionStatement","src":"11834:30:13"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11747:6:13","type":""}],"src":"11649:222:13"},{"body":{"nodeType":"YulBlock","src":"12023:220:13","statements":[{"nodeType":"YulAssignment","src":"12033:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12099:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"12104:2:13","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12040:58:13"},"nodeType":"YulFunctionCall","src":"12040:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12205:3:13"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12116:88:13"},"nodeType":"YulFunctionCall","src":"12116:93:13"},"nodeType":"YulExpressionStatement","src":"12116:93:13"},{"nodeType":"YulAssignment","src":"12218:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12229:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"12234:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12225:3:13"},"nodeType":"YulFunctionCall","src":"12225:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12218:3:13"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12011:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12019:3:13","type":""}],"src":"11877:366:13"},{"body":{"nodeType":"YulBlock","src":"12420:248:13","statements":[{"nodeType":"YulAssignment","src":"12430:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:13"},"nodeType":"YulFunctionCall","src":"12438:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12488:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:13"},"nodeType":"YulFunctionCall","src":"12473:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12492:3:13"},"nodeType":"YulFunctionCall","src":"12492:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12466:6:13"},"nodeType":"YulFunctionCall","src":"12466:47:13"},"nodeType":"YulExpressionStatement","src":"12466:47:13"},{"nodeType":"YulAssignment","src":"12522:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12656:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12530:124:13"},"nodeType":"YulFunctionCall","src":"12530:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12522:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12400:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12415:4:13","type":""}],"src":"12249:419:13"},{"body":{"nodeType":"YulBlock","src":"12780:119:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12802:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"12810:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:13"},"nodeType":"YulFunctionCall","src":"12798:14:13"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12814:34:13","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12791:6:13"},"nodeType":"YulFunctionCall","src":"12791:58:13"},"nodeType":"YulExpressionStatement","src":"12791:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12870:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"12878:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12866:3:13"},"nodeType":"YulFunctionCall","src":"12866:15:13"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12883:8:13","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12859:6:13"},"nodeType":"YulFunctionCall","src":"12859:33:13"},"nodeType":"YulExpressionStatement","src":"12859:33:13"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12772:6:13","type":""}],"src":"12674:225:13"},{"body":{"nodeType":"YulBlock","src":"13051:220:13","statements":[{"nodeType":"YulAssignment","src":"13061:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13127:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"13132:2:13","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13068:58:13"},"nodeType":"YulFunctionCall","src":"13068:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13233:3:13"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13144:88:13"},"nodeType":"YulFunctionCall","src":"13144:93:13"},"nodeType":"YulExpressionStatement","src":"13144:93:13"},{"nodeType":"YulAssignment","src":"13246:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13257:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:13"},"nodeType":"YulFunctionCall","src":"13253:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13246:3:13"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13039:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13047:3:13","type":""}],"src":"12905:366:13"},{"body":{"nodeType":"YulBlock","src":"13448:248:13","statements":[{"nodeType":"YulAssignment","src":"13458:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:13"},"nodeType":"YulFunctionCall","src":"13466:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13458:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13505:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13516:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13501:3:13"},"nodeType":"YulFunctionCall","src":"13501:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13524:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"13530:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13520:3:13"},"nodeType":"YulFunctionCall","src":"13520:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:13"},"nodeType":"YulFunctionCall","src":"13494:47:13"},"nodeType":"YulExpressionStatement","src":"13494:47:13"},{"nodeType":"YulAssignment","src":"13550:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13684:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13558:124:13"},"nodeType":"YulFunctionCall","src":"13558:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13550:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13428:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13443:4:13","type":""}],"src":"13277:419:13"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b15565b60405180910390f35b6100e660048036038101906100e19190610bd0565b610308565b6040516100f39190610c2b565b60405180910390f35b61010461032b565b6040516101119190610c55565b60405180910390f35b610134600480360381019061012f9190610c70565b610335565b6040516101419190610c2b565b60405180910390f35b610152610364565b60405161015f9190610cdf565b60405180910390f35b610182600480360381019061017d9190610bd0565b61036d565b60405161018f9190610c2b565b60405180910390f35b6101b260048036038101906101ad9190610cfa565b6103a4565b6040516101bf9190610c55565b60405180910390f35b6101d06103ec565b6040516101dd9190610b15565b60405180910390f35b61020060048036038101906101fb9190610bd0565b61047e565b60405161020d9190610c2b565b60405180910390f35b610230600480360381019061022b9190610bd0565b6104f5565b60405161023d9190610c2b565b60405180910390f35b610260600480360381019061025b9190610d27565b610518565b60405161026d9190610c55565b60405180910390f35b60606003805461028590610d96565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d96565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610df6565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d96565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d96565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e9c565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f2e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fc0565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c55565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df9061102c565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110be565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611150565b60405180910390fd5b6108e5838383610a7b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111e2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109fe9190610df6565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a629190610c55565b60405180910390a3610a75848484610a80565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610abf578082015181840152602081019050610aa4565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ae782610a85565b610af18185610a90565b9350610b01818560208601610aa1565b610b0a81610acb565b840191505092915050565b60006020820190508181036000830152610b2f8184610adc565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6782610b3c565b9050919050565b610b7781610b5c565b8114610b8257600080fd5b50565b600081359050610b9481610b6e565b92915050565b6000819050919050565b610bad81610b9a565b8114610bb857600080fd5b50565b600081359050610bca81610ba4565b92915050565b60008060408385031215610be757610be6610b37565b5b6000610bf585828601610b85565b9250506020610c0685828601610bbb565b9150509250929050565b60008115159050919050565b610c2581610c10565b82525050565b6000602082019050610c406000830184610c1c565b92915050565b610c4f81610b9a565b82525050565b6000602082019050610c6a6000830184610c46565b92915050565b600080600060608486031215610c8957610c88610b37565b5b6000610c9786828701610b85565b9350506020610ca886828701610b85565b9250506040610cb986828701610bbb565b9150509250925092565b600060ff82169050919050565b610cd981610cc3565b82525050565b6000602082019050610cf46000830184610cd0565b92915050565b600060208284031215610d1057610d0f610b37565b5b6000610d1e84828501610b85565b91505092915050565b60008060408385031215610d3e57610d3d610b37565b5b6000610d4c85828601610b85565b9250506020610d5d85828601610b85565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610dae57607f821691505b602082108103610dc157610dc0610d67565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0182610b9a565b9150610e0c83610b9a565b9250828201905080821115610e2457610e23610dc7565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e86602583610a90565b9150610e9182610e2a565b604082019050919050565b60006020820190508181036000830152610eb581610e79565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f18602483610a90565b9150610f2382610ebc565b604082019050919050565b60006020820190508181036000830152610f4781610f0b565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610faa602283610a90565b9150610fb582610f4e565b604082019050919050565b60006020820190508181036000830152610fd981610f9d565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611016601d83610a90565b915061102182610fe0565b602082019050919050565b6000602082019050818103600083015261104581611009565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110a8602583610a90565b91506110b38261104c565b604082019050919050565b600060208201905081810360008301526110d78161109b565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061113a602383610a90565b9150611145826110de565b604082019050919050565b600060208201905081810360008301526111698161112d565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111cc602683610a90565b91506111d782611170565b604082019050919050565b600060208201905081810360008301526111fb816111bf565b905091905056fea26469706673582212208fd62d4ded66c1a97ce910233d42f32bf9822fdde7d56e31daa7cc85fb1741e264736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD27 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x102C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9FE SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA62 SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA75 DUP5 DUP5 DUP5 PUSH2 0xA80 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xABF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE7 DUP3 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0xAF1 DUP2 DUP6 PUSH2 0xA90 JUMP JUMPDEST SWAP4 POP PUSH2 0xB01 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0xB0A DUP2 PUSH2 0xACB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB2F DUP2 DUP5 PUSH2 0xADC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB67 DUP3 PUSH2 0xB3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB77 DUP2 PUSH2 0xB5C JUMP JUMPDEST DUP2 EQ PUSH2 0xB82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB94 DUP2 PUSH2 0xB6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBAD DUP2 PUSH2 0xB9A JUMP JUMPDEST DUP2 EQ PUSH2 0xBB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBCA DUP2 PUSH2 0xBA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE7 JUMPI PUSH2 0xBE6 PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF5 DUP6 DUP3 DUP7 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC06 DUP6 DUP3 DUP7 ADD PUSH2 0xBBB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC25 DUP2 PUSH2 0xC10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC40 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC4F DUP2 PUSH2 0xB9A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC6A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC88 PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC97 DUP7 DUP3 DUP8 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCA8 DUP7 DUP3 DUP8 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB9 DUP7 DUP3 DUP8 ADD PUSH2 0xBBB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD9 DUP2 PUSH2 0xCC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD10 JUMPI PUSH2 0xD0F PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD1E DUP5 DUP3 DUP6 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD3E JUMPI PUSH2 0xD3D PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD4C DUP6 DUP3 DUP7 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD5D DUP6 DUP3 DUP7 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDAE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDC1 JUMPI PUSH2 0xDC0 PUSH2 0xD67 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE01 DUP3 PUSH2 0xB9A JUMP JUMPDEST SWAP2 POP PUSH2 0xE0C DUP4 PUSH2 0xB9A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE24 JUMPI PUSH2 0xE23 PUSH2 0xDC7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE86 PUSH1 0x25 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xE91 DUP3 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEB5 DUP2 PUSH2 0xE79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF18 PUSH1 0x24 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xF23 DUP3 PUSH2 0xEBC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF47 DUP2 PUSH2 0xF0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFAA PUSH1 0x22 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xFB5 DUP3 PUSH2 0xF4E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD9 DUP2 PUSH2 0xF9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1016 PUSH1 0x1D DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1021 DUP3 PUSH2 0xFE0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1045 DUP2 PUSH2 0x1009 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A8 PUSH1 0x25 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x10B3 DUP3 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10D7 DUP2 PUSH2 0x109B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113A PUSH1 0x23 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1145 DUP3 PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1169 DUP2 PUSH2 0x112D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11CC PUSH1 0x26 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x11D7 DUP3 PUSH2 0x1170 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11FB DUP2 PUSH2 0x11BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xD6 0x2D 0x4D 0xED PUSH7 0xC1A97CE910233D TIMESTAMP RETURN 0x2B 0xF9 DUP3 0x2F 0xDD 0xE7 0xD5 PUSH15 0x31DAA7CC85FB1741E264736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1403:11214:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5192:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3093:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5873:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3408:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2367:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6594:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3729:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3976:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2156:98;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;4532:13;4548:12;:10;:12::i;:::-;4532:28;;4570:32;4579:5;4586:7;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;:::o;3244:106::-;3305:7;3331:12;;3324:19;;3244:106;:::o;5192:286::-;5319:4;5335:15;5353:12;:10;:12::i;:::-;5335:30;;5375:38;5391:4;5397:7;5406:6;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;5467:4;5460:11;;;5192:286;;;;;:::o;3093:91::-;3151:5;3175:2;3168:9;;3093:91;:::o;5873:234::-;5961:4;5977:13;5993:12;:10;:12::i;:::-;5977:28;;6015:64;6024:5;6031:7;6068:10;6040:25;6050:5;6057:7;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;:::-;6096:4;6089:11;;;5873:234;;;;:::o;3408:125::-;3482:7;3508:9;:18;3518:7;3508:18;;;;;;;;;;;;;;;;3501:25;;3408:125;;;:::o;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2367:102;:::o;6594:427::-;6687:4;6703:13;6719:12;:10;:12::i;:::-;6703:28;;6741:24;6768:25;6778:5;6785:7;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;:::-;7010:4;7003:11;;;;6594:427;;;;:::o;3729:189::-;3808:4;3824:13;3840:12;:10;:12::i;:::-;3824:28;;3862;3872:5;3879:2;3883:6;3862:9;:28::i;:::-;3907:4;3900:11;;;3729:189;;;;:::o;3976:149::-;4065:7;4091:11;:18;4103:5;4091:18;;;;;;;;;;;;;;;:27;4110:7;4091:27;;;;;;;;;;;;;;;;4084:34;;3976:149;;;;:::o;640:96:7:-;693:7;719:10;712:17;;640:96;:::o;10110:370:4:-;10258:1;10241:19;;:5;:19;;;10233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10338:1;10319:21;;:7;:21;;;10311:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10420:6;10390:11;:18;10402:5;10390:18;;;;;;;;;;;;;;;:27;10409:7;10390:27;;;;;;;;;;;;;;;:36;;;;10457:7;10441:32;;10450:5;10441:32;;;10466:6;10441:32;;;;;;:::i;:::-;;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;10977:17;10957:16;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10953:243;10881:321;10761:441;;;:::o;7475:651::-;7617:1;7601:18;;:4;:18;;;7593:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7693:1;7679:16;;:2;:16;;;7671:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7746:38;7767:4;7773:2;7777:6;7746:20;:38::i;:::-;7795:19;7817:9;:15;7827:4;7817:15;;;;;;;;;;;;;;;;7795:37;;7865:6;7850:11;:21;;7842:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7980:6;7966:11;:20;7948:9;:15;7958:4;7948:15;;;;;;;;;;;;;;;:38;;;;8023:6;8006:9;:13;8016:2;8006:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;8060:2;8045:26;;8054:4;8045:26;;;8064:6;8045:26;;;;;;:::i;:::-;;;;;;;;8082:37;8102:4;8108:2;8112:6;8082:19;:37::i;:::-;7583:543;7475:651;;;:::o;11786:121::-;;;;:::o;12495:120::-;;;;:::o;7:99:13:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"932800","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2863","decimals()":"432","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2482","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"15","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":324,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":330,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":332,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":334,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":336,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/CAT.sol":{"CAT":{"abi":[{"inputs":[{"internalType":"uint256","name":"initialSupply","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"receivingAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"_mintCAT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1044":{"entryPoint":null,"id":1044,"parameterSlots":3,"returnSlots":0},"@_353":{"entryPoint":null,"id":353,"parameterSlots":2,"returnSlots":0},"@_afterTokenTransfer_893":{"entryPoint":503,"id":893,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_882":{"entryPoint":498,"id":882,"parameterSlots":3,"returnSlots":0},"@_mint_711":{"entryPoint":122,"id":711,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":844,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":919,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":564,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":970,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":1990,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2169,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2029,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2186,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":715,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":508,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1235,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1124,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1932,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2110,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1546,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":528,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1507,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1381,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1701,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":800,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1256,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1182,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1671,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":661,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1371,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1639,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2063,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1135,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":614,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1421,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":587,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":592,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":523,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":518,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":597,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1272,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1626,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1479,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":1949,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1285,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1431,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":538,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1474,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10901:13","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:13","statements":[{"nodeType":"YulAssignment","src":"57:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:13"},"nodeType":"YulFunctionCall","src":"67:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:13","type":""}],"src":"7:75:13"},{"body":{"nodeType":"YulBlock","src":"177:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:13"},"nodeType":"YulFunctionCall","src":"187:12:13"},"nodeType":"YulExpressionStatement","src":"187:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:13"},{"body":{"nodeType":"YulBlock","src":"300:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:13"},"nodeType":"YulFunctionCall","src":"310:12:13"},"nodeType":"YulExpressionStatement","src":"310:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:13"},{"body":{"nodeType":"YulBlock","src":"379:32:13","statements":[{"nodeType":"YulAssignment","src":"389:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:13"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:13","type":""}],"src":"334:77:13"},{"body":{"nodeType":"YulBlock","src":"460:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:13"},"nodeType":"YulFunctionCall","src":"519:12:13"},"nodeType":"YulExpressionStatement","src":"519:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:13"},"nodeType":"YulFunctionCall","src":"490:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:13"},"nodeType":"YulFunctionCall","src":"480:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:13"},"nodeType":"YulFunctionCall","src":"473:43:13"},"nodeType":"YulIf","src":"470:63:13"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:13","type":""}],"src":"417:122:13"},{"body":{"nodeType":"YulBlock","src":"608:80:13","statements":[{"nodeType":"YulAssignment","src":"618:22:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"633:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"627:5:13"},"nodeType":"YulFunctionCall","src":"627:13:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"618:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:13"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"649:26:13"},"nodeType":"YulFunctionCall","src":"649:33:13"},"nodeType":"YulExpressionStatement","src":"649:33:13"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"586:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"594:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"602:5:13","type":""}],"src":"545:143:13"},{"body":{"nodeType":"YulBlock","src":"783:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"800:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"803:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"793:6:13"},"nodeType":"YulFunctionCall","src":"793:12:13"},"nodeType":"YulExpressionStatement","src":"793:12:13"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"694:117:13"},{"body":{"nodeType":"YulBlock","src":"906:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"923:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"926:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"916:6:13"},"nodeType":"YulFunctionCall","src":"916:12:13"},"nodeType":"YulExpressionStatement","src":"916:12:13"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"817:117:13"},{"body":{"nodeType":"YulBlock","src":"988:54:13","statements":[{"nodeType":"YulAssignment","src":"998:38:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1016:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"1023:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1012:3:13"},"nodeType":"YulFunctionCall","src":"1012:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1032:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1028:3:13"},"nodeType":"YulFunctionCall","src":"1028:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1008:3:13"},"nodeType":"YulFunctionCall","src":"1008:28:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"998:6:13"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"971:5:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"981:6:13","type":""}],"src":"940:102:13"},{"body":{"nodeType":"YulBlock","src":"1076:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1093:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1096:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1086:6:13"},"nodeType":"YulFunctionCall","src":"1086:88:13"},"nodeType":"YulExpressionStatement","src":"1086:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1190:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1193:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1183:6:13"},"nodeType":"YulFunctionCall","src":"1183:15:13"},"nodeType":"YulExpressionStatement","src":"1183:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1214:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1217:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1207:6:13"},"nodeType":"YulFunctionCall","src":"1207:15:13"},"nodeType":"YulExpressionStatement","src":"1207:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1048:180:13"},{"body":{"nodeType":"YulBlock","src":"1277:238:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1287:58:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1309:6:13"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1339:4:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1317:21:13"},"nodeType":"YulFunctionCall","src":"1317:27:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1305:3:13"},"nodeType":"YulFunctionCall","src":"1305:40:13"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1291:10:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1456:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1458:16:13"},"nodeType":"YulFunctionCall","src":"1458:18:13"},"nodeType":"YulExpressionStatement","src":"1458:18:13"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1399:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"1411:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1396:2:13"},"nodeType":"YulFunctionCall","src":"1396:34:13"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1435:10:13"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1447:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1432:2:13"},"nodeType":"YulFunctionCall","src":"1432:22:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1393:2:13"},"nodeType":"YulFunctionCall","src":"1393:62:13"},"nodeType":"YulIf","src":"1390:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1494:2:13","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1498:10:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1487:6:13"},"nodeType":"YulFunctionCall","src":"1487:22:13"},"nodeType":"YulExpressionStatement","src":"1487:22:13"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1263:6:13","type":""},{"name":"size","nodeType":"YulTypedName","src":"1271:4:13","type":""}],"src":"1234:281:13"},{"body":{"nodeType":"YulBlock","src":"1562:88:13","statements":[{"nodeType":"YulAssignment","src":"1572:30:13","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1582:18:13"},"nodeType":"YulFunctionCall","src":"1582:20:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1572:6:13"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1631:6:13"},{"name":"size","nodeType":"YulIdentifier","src":"1639:4:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1611:19:13"},"nodeType":"YulFunctionCall","src":"1611:33:13"},"nodeType":"YulExpressionStatement","src":"1611:33:13"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1546:4:13","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1555:6:13","type":""}],"src":"1521:129:13"},{"body":{"nodeType":"YulBlock","src":"1723:241:13","statements":[{"body":{"nodeType":"YulBlock","src":"1828:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1830:16:13"},"nodeType":"YulFunctionCall","src":"1830:18:13"},"nodeType":"YulExpressionStatement","src":"1830:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1808:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1797:2:13"},"nodeType":"YulFunctionCall","src":"1797:30:13"},"nodeType":"YulIf","src":"1794:56:13"},{"nodeType":"YulAssignment","src":"1860:37:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1890:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1868:21:13"},"nodeType":"YulFunctionCall","src":"1868:29:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1860:4:13"}]},{"nodeType":"YulAssignment","src":"1934:23:13","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1946:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"1952:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1942:3:13"},"nodeType":"YulFunctionCall","src":"1942:15:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1934:4:13"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1707:6:13","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1718:4:13","type":""}],"src":"1656:308:13"},{"body":{"nodeType":"YulBlock","src":"2032:184:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2042:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2051:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2046:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2111:63:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2136:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"2141:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2132:3:13"},"nodeType":"YulFunctionCall","src":"2132:11:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2155:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"2160:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2151:3:13"},"nodeType":"YulFunctionCall","src":"2151:11:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2145:5:13"},"nodeType":"YulFunctionCall","src":"2145:18:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2125:6:13"},"nodeType":"YulFunctionCall","src":"2125:39:13"},"nodeType":"YulExpressionStatement","src":"2125:39:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2072:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"2075:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2069:2:13"},"nodeType":"YulFunctionCall","src":"2069:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2083:19:13","statements":[{"nodeType":"YulAssignment","src":"2085:15:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2094:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"2097:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2090:3:13"},"nodeType":"YulFunctionCall","src":"2090:10:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2085:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"2065:3:13","statements":[]},"src":"2061:113:13"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2194:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2199:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2190:3:13"},"nodeType":"YulFunctionCall","src":"2190:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"2208:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2183:6:13"},"nodeType":"YulFunctionCall","src":"2183:27:13"},"nodeType":"YulExpressionStatement","src":"2183:27:13"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2014:3:13","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2019:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"2024:6:13","type":""}],"src":"1970:246:13"},{"body":{"nodeType":"YulBlock","src":"2317:339:13","statements":[{"nodeType":"YulAssignment","src":"2327:75:13","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2394:6:13"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2352:41:13"},"nodeType":"YulFunctionCall","src":"2352:49:13"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2336:15:13"},"nodeType":"YulFunctionCall","src":"2336:66:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2327:5:13"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2418:5:13"},{"name":"length","nodeType":"YulIdentifier","src":"2425:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2411:6:13"},"nodeType":"YulFunctionCall","src":"2411:21:13"},"nodeType":"YulExpressionStatement","src":"2411:21:13"},{"nodeType":"YulVariableDeclaration","src":"2441:27:13","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2456:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"2463:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:13"},"nodeType":"YulFunctionCall","src":"2452:16:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2445:3:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2506:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2508:77:13"},"nodeType":"YulFunctionCall","src":"2508:79:13"},"nodeType":"YulExpressionStatement","src":"2508:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2487:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2492:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2483:3:13"},"nodeType":"YulFunctionCall","src":"2483:16:13"},{"name":"end","nodeType":"YulIdentifier","src":"2501:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2480:2:13"},"nodeType":"YulFunctionCall","src":"2480:25:13"},"nodeType":"YulIf","src":"2477:112:13"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2633:3:13"},{"name":"dst","nodeType":"YulIdentifier","src":"2638:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2643:6:13"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2598:34:13"},"nodeType":"YulFunctionCall","src":"2598:52:13"},"nodeType":"YulExpressionStatement","src":"2598:52:13"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2290:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"2295:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2303:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2311:5:13","type":""}],"src":"2222:434:13"},{"body":{"nodeType":"YulBlock","src":"2749:282:13","statements":[{"body":{"nodeType":"YulBlock","src":"2798:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2800:77:13"},"nodeType":"YulFunctionCall","src":"2800:79:13"},"nodeType":"YulExpressionStatement","src":"2800:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2777:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2785:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2773:3:13"},"nodeType":"YulFunctionCall","src":"2773:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"2792:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2769:3:13"},"nodeType":"YulFunctionCall","src":"2769:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2762:6:13"},"nodeType":"YulFunctionCall","src":"2762:35:13"},"nodeType":"YulIf","src":"2759:122:13"},{"nodeType":"YulVariableDeclaration","src":"2890:27:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2910:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2904:5:13"},"nodeType":"YulFunctionCall","src":"2904:13:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2894:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2926:99:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2998:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3006:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2994:3:13"},"nodeType":"YulFunctionCall","src":"2994:17:13"},{"name":"length","nodeType":"YulIdentifier","src":"3013:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"3021:3:13"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2935:58:13"},"nodeType":"YulFunctionCall","src":"2935:90:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2926:5:13"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2727:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2735:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2743:5:13","type":""}],"src":"2676:355:13"},{"body":{"nodeType":"YulBlock","src":"3168:878:13","statements":[{"body":{"nodeType":"YulBlock","src":"3214:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3216:77:13"},"nodeType":"YulFunctionCall","src":"3216:79:13"},"nodeType":"YulExpressionStatement","src":"3216:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3189:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"3198:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3185:3:13"},"nodeType":"YulFunctionCall","src":"3185:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:13","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3181:3:13"},"nodeType":"YulFunctionCall","src":"3181:32:13"},"nodeType":"YulIf","src":"3178:119:13"},{"nodeType":"YulBlock","src":"3307:128:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3322:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3336:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3326:6:13","type":""}]},{"nodeType":"YulAssignment","src":"3351:74:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3397:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3408:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3393:3:13"},"nodeType":"YulFunctionCall","src":"3393:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3417:7:13"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3361:31:13"},"nodeType":"YulFunctionCall","src":"3361:64:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3351:6:13"}]}]},{"nodeType":"YulBlock","src":"3445:292:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3460:39:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3484:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3495:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3480:3:13"},"nodeType":"YulFunctionCall","src":"3480:18:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3474:5:13"},"nodeType":"YulFunctionCall","src":"3474:25:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3464:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3546:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3548:77:13"},"nodeType":"YulFunctionCall","src":"3548:79:13"},"nodeType":"YulExpressionStatement","src":"3548:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3518:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3526:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3515:2:13"},"nodeType":"YulFunctionCall","src":"3515:30:13"},"nodeType":"YulIf","src":"3512:117:13"},{"nodeType":"YulAssignment","src":"3643:84:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3699:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3710:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3695:3:13"},"nodeType":"YulFunctionCall","src":"3695:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3719:7:13"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3653:41:13"},"nodeType":"YulFunctionCall","src":"3653:74:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3643:6:13"}]}]},{"nodeType":"YulBlock","src":"3747:292:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3762:39:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3786:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3797:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3782:3:13"},"nodeType":"YulFunctionCall","src":"3782:18:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3776:5:13"},"nodeType":"YulFunctionCall","src":"3776:25:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3766:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3848:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3850:77:13"},"nodeType":"YulFunctionCall","src":"3850:79:13"},"nodeType":"YulExpressionStatement","src":"3850:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3820:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3828:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3817:2:13"},"nodeType":"YulFunctionCall","src":"3817:30:13"},"nodeType":"YulIf","src":"3814:117:13"},{"nodeType":"YulAssignment","src":"3945:84:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4001:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4012:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3997:3:13"},"nodeType":"YulFunctionCall","src":"3997:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4021:7:13"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3955:41:13"},"nodeType":"YulFunctionCall","src":"3955:74:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3945:6:13"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3122:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3133:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3145:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3153:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3161:6:13","type":""}],"src":"3037:1009:13"},{"body":{"nodeType":"YulBlock","src":"4111:40:13","statements":[{"nodeType":"YulAssignment","src":"4122:22:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4138:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4132:5:13"},"nodeType":"YulFunctionCall","src":"4132:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4122:6:13"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4094:5:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4104:6:13","type":""}],"src":"4052:99:13"},{"body":{"nodeType":"YulBlock","src":"4185:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4202:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4205:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4195:6:13"},"nodeType":"YulFunctionCall","src":"4195:88:13"},"nodeType":"YulExpressionStatement","src":"4195:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4299:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4302:4:13","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4292:6:13"},"nodeType":"YulFunctionCall","src":"4292:15:13"},"nodeType":"YulExpressionStatement","src":"4292:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4323:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4326:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4316:6:13"},"nodeType":"YulFunctionCall","src":"4316:15:13"},"nodeType":"YulExpressionStatement","src":"4316:15:13"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"4157:180:13"},{"body":{"nodeType":"YulBlock","src":"4394:269:13","statements":[{"nodeType":"YulAssignment","src":"4404:22:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4418:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"4424:1:13","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4414:3:13"},"nodeType":"YulFunctionCall","src":"4414:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4404:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"4435:38:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4465:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"4471:1:13","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4461:3:13"},"nodeType":"YulFunctionCall","src":"4461:12:13"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4439:18:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"4512:51:13","statements":[{"nodeType":"YulAssignment","src":"4526:27:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4540:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4548:4:13","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4536:3:13"},"nodeType":"YulFunctionCall","src":"4536:17:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4526:6:13"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4492:18:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4485:6:13"},"nodeType":"YulFunctionCall","src":"4485:26:13"},"nodeType":"YulIf","src":"4482:81:13"},{"body":{"nodeType":"YulBlock","src":"4615:42:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4629:16:13"},"nodeType":"YulFunctionCall","src":"4629:18:13"},"nodeType":"YulExpressionStatement","src":"4629:18:13"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4579:18:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4602:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4610:2:13","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4599:2:13"},"nodeType":"YulFunctionCall","src":"4599:14:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4576:2:13"},"nodeType":"YulFunctionCall","src":"4576:38:13"},"nodeType":"YulIf","src":"4573:84:13"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4378:4:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4387:6:13","type":""}],"src":"4343:320:13"},{"body":{"nodeType":"YulBlock","src":"4723:87:13","statements":[{"nodeType":"YulAssignment","src":"4733:11:13","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4741:3:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4733:4:13"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4761:1:13","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4764:3:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4754:6:13"},"nodeType":"YulFunctionCall","src":"4754:14:13"},"nodeType":"YulExpressionStatement","src":"4754:14:13"},{"nodeType":"YulAssignment","src":"4777:26:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4795:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4798:4:13","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4785:9:13"},"nodeType":"YulFunctionCall","src":"4785:18:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4777:4:13"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4710:3:13","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4718:4:13","type":""}],"src":"4669:141:13"},{"body":{"nodeType":"YulBlock","src":"4860:49:13","statements":[{"nodeType":"YulAssignment","src":"4870:33:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4888:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"4895:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4884:3:13"},"nodeType":"YulFunctionCall","src":"4884:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"4900:2:13","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4880:3:13"},"nodeType":"YulFunctionCall","src":"4880:23:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4870:6:13"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4843:5:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4853:6:13","type":""}],"src":"4816:93:13"},{"body":{"nodeType":"YulBlock","src":"4968:54:13","statements":[{"nodeType":"YulAssignment","src":"4978:37:13","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"5003:4:13"},{"name":"value","nodeType":"YulIdentifier","src":"5009:5:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4999:3:13"},"nodeType":"YulFunctionCall","src":"4999:16:13"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4978:8:13"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4943:4:13","type":""},{"name":"value","nodeType":"YulTypedName","src":"4949:5:13","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4959:8:13","type":""}],"src":"4915:107:13"},{"body":{"nodeType":"YulBlock","src":"5104:317:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5114:35:13","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"5135:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"5147:1:13","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5131:3:13"},"nodeType":"YulFunctionCall","src":"5131:18:13"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"5118:9:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5158:109:13","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5189:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5200:66:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5170:18:13"},"nodeType":"YulFunctionCall","src":"5170:97:13"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"5162:4:13","type":""}]},{"nodeType":"YulAssignment","src":"5276:51:13","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5307:9:13"},{"name":"toInsert","nodeType":"YulIdentifier","src":"5318:8:13"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5288:18:13"},"nodeType":"YulFunctionCall","src":"5288:39:13"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5276:8:13"}]},{"nodeType":"YulAssignment","src":"5336:30:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5349:5:13"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"5360:4:13"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5356:3:13"},"nodeType":"YulFunctionCall","src":"5356:9:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5345:3:13"},"nodeType":"YulFunctionCall","src":"5345:21:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5336:5:13"}]},{"nodeType":"YulAssignment","src":"5375:40:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5388:5:13"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5399:8:13"},{"name":"mask","nodeType":"YulIdentifier","src":"5409:4:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5395:3:13"},"nodeType":"YulFunctionCall","src":"5395:19:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5385:2:13"},"nodeType":"YulFunctionCall","src":"5385:30:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5375:6:13"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5065:5:13","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"5072:10:13","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"5084:8:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5097:6:13","type":""}],"src":"5028:393:13"},{"body":{"nodeType":"YulBlock","src":"5459:28:13","statements":[{"nodeType":"YulAssignment","src":"5469:12:13","value":{"name":"value","nodeType":"YulIdentifier","src":"5476:5:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5469:3:13"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5445:5:13","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5455:3:13","type":""}],"src":"5427:60:13"},{"body":{"nodeType":"YulBlock","src":"5553:82:13","statements":[{"nodeType":"YulAssignment","src":"5563:66:13","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5621:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5603:17:13"},"nodeType":"YulFunctionCall","src":"5603:24:13"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5594:8:13"},"nodeType":"YulFunctionCall","src":"5594:34:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5576:17:13"},"nodeType":"YulFunctionCall","src":"5576:53:13"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5563:9:13"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5533:5:13","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5543:9:13","type":""}],"src":"5493:142:13"},{"body":{"nodeType":"YulBlock","src":"5688:28:13","statements":[{"nodeType":"YulAssignment","src":"5698:12:13","value":{"name":"value","nodeType":"YulIdentifier","src":"5705:5:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5698:3:13"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5674:5:13","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5684:3:13","type":""}],"src":"5641:75:13"},{"body":{"nodeType":"YulBlock","src":"5798:193:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5808:63:13","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5863:7:13"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5832:30:13"},"nodeType":"YulFunctionCall","src":"5832:39:13"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5812:16:13","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5887:4:13"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5927:4:13"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5921:5:13"},"nodeType":"YulFunctionCall","src":"5921:11:13"},{"name":"offset","nodeType":"YulIdentifier","src":"5934:6:13"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5966:16:13"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5942:23:13"},"nodeType":"YulFunctionCall","src":"5942:41:13"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5893:27:13"},"nodeType":"YulFunctionCall","src":"5893:91:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5880:6:13"},"nodeType":"YulFunctionCall","src":"5880:105:13"},"nodeType":"YulExpressionStatement","src":"5880:105:13"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5775:4:13","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5781:6:13","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5789:7:13","type":""}],"src":"5722:269:13"},{"body":{"nodeType":"YulBlock","src":"6046:24:13","statements":[{"nodeType":"YulAssignment","src":"6056:8:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6063:1:13","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6056:3:13"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6042:3:13","type":""}],"src":"5997:73:13"},{"body":{"nodeType":"YulBlock","src":"6129:136:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6139:46:13","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"6153:30:13"},"nodeType":"YulFunctionCall","src":"6153:32:13"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"6143:6:13","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6238:4:13"},{"name":"offset","nodeType":"YulIdentifier","src":"6244:6:13"},{"name":"zero_0","nodeType":"YulIdentifier","src":"6252:6:13"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6194:43:13"},"nodeType":"YulFunctionCall","src":"6194:65:13"},"nodeType":"YulExpressionStatement","src":"6194:65:13"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6115:4:13","type":""},{"name":"offset","nodeType":"YulTypedName","src":"6121:6:13","type":""}],"src":"6076:189:13"},{"body":{"nodeType":"YulBlock","src":"6321:136:13","statements":[{"body":{"nodeType":"YulBlock","src":"6388:63:13","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6432:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"6439:1:13","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"6402:29:13"},"nodeType":"YulFunctionCall","src":"6402:39:13"},"nodeType":"YulExpressionStatement","src":"6402:39:13"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6341:5:13"},{"name":"end","nodeType":"YulIdentifier","src":"6348:3:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6338:2:13"},"nodeType":"YulFunctionCall","src":"6338:14:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6353:26:13","statements":[{"nodeType":"YulAssignment","src":"6355:22:13","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6368:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"6375:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6364:3:13"},"nodeType":"YulFunctionCall","src":"6364:13:13"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"6355:5:13"}]}]},"pre":{"nodeType":"YulBlock","src":"6335:2:13","statements":[]},"src":"6331:120:13"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"6309:5:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"6316:3:13","type":""}],"src":"6271:186:13"},{"body":{"nodeType":"YulBlock","src":"6542:464:13","statements":[{"body":{"nodeType":"YulBlock","src":"6568:431:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6582:54:13","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6630:5:13"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6598:31:13"},"nodeType":"YulFunctionCall","src":"6598:38:13"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6586:8:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6649:63:13","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6672:8:13"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6700:10:13"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6682:17:13"},"nodeType":"YulFunctionCall","src":"6682:29:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6668:3:13"},"nodeType":"YulFunctionCall","src":"6668:44:13"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6653:11:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"6869:27:13","statements":[{"nodeType":"YulAssignment","src":"6871:23:13","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6886:8:13"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6871:11:13"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6853:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"6865:2:13","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6850:2:13"},"nodeType":"YulFunctionCall","src":"6850:18:13"},"nodeType":"YulIf","src":"6847:49:13"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6938:11:13"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6955:8:13"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6983:3:13"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6965:17:13"},"nodeType":"YulFunctionCall","src":"6965:22:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6951:3:13"},"nodeType":"YulFunctionCall","src":"6951:37:13"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6909:28:13"},"nodeType":"YulFunctionCall","src":"6909:80:13"},"nodeType":"YulExpressionStatement","src":"6909:80:13"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6559:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"6564:2:13","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6556:2:13"},"nodeType":"YulFunctionCall","src":"6556:11:13"},"nodeType":"YulIf","src":"6553:446:13"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6518:5:13","type":""},{"name":"len","nodeType":"YulTypedName","src":"6525:3:13","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6530:10:13","type":""}],"src":"6463:543:13"},{"body":{"nodeType":"YulBlock","src":"7075:54:13","statements":[{"nodeType":"YulAssignment","src":"7085:37:13","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"7110:4:13"},{"name":"value","nodeType":"YulIdentifier","src":"7116:5:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7106:3:13"},"nodeType":"YulFunctionCall","src":"7106:16:13"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"7085:8:13"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"7050:4:13","type":""},{"name":"value","nodeType":"YulTypedName","src":"7056:5:13","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"7066:8:13","type":""}],"src":"7012:117:13"},{"body":{"nodeType":"YulBlock","src":"7186:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7196:68:13","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7245:1:13","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"7248:5:13"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7241:3:13"},"nodeType":"YulFunctionCall","src":"7241:13:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7260:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7256:3:13"},"nodeType":"YulFunctionCall","src":"7256:6:13"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"7212:28:13"},"nodeType":"YulFunctionCall","src":"7212:51:13"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7208:3:13"},"nodeType":"YulFunctionCall","src":"7208:56:13"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7200:4:13","type":""}]},{"nodeType":"YulAssignment","src":"7273:25:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7287:4:13"},{"name":"mask","nodeType":"YulIdentifier","src":"7293:4:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7283:3:13"},"nodeType":"YulFunctionCall","src":"7283:15:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7273:6:13"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7163:4:13","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"7169:5:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7179:6:13","type":""}],"src":"7135:169:13"},{"body":{"nodeType":"YulBlock","src":"7390:214:13","statements":[{"nodeType":"YulAssignment","src":"7523:37:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7550:4:13"},{"name":"len","nodeType":"YulIdentifier","src":"7556:3:13"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7531:18:13"},"nodeType":"YulFunctionCall","src":"7531:29:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7523:4:13"}]},{"nodeType":"YulAssignment","src":"7569:29:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7580:4:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7590:1:13","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7593:3:13"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7586:3:13"},"nodeType":"YulFunctionCall","src":"7586:11:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7577:2:13"},"nodeType":"YulFunctionCall","src":"7577:21:13"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7569:4:13"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7371:4:13","type":""},{"name":"len","nodeType":"YulTypedName","src":"7377:3:13","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"7385:4:13","type":""}],"src":"7309:295:13"},{"body":{"nodeType":"YulBlock","src":"7701:1303:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7712:51:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7759:3:13"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7726:32:13"},"nodeType":"YulFunctionCall","src":"7726:37:13"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7716:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"7848:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7850:16:13"},"nodeType":"YulFunctionCall","src":"7850:18:13"},"nodeType":"YulExpressionStatement","src":"7850:18:13"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7820:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7828:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7817:2:13"},"nodeType":"YulFunctionCall","src":"7817:30:13"},"nodeType":"YulIf","src":"7814:56:13"},{"nodeType":"YulVariableDeclaration","src":"7880:52:13","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7926:4:13"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7920:5:13"},"nodeType":"YulFunctionCall","src":"7920:11:13"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7894:25:13"},"nodeType":"YulFunctionCall","src":"7894:38:13"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7884:6:13","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8025:4:13"},{"name":"oldLen","nodeType":"YulIdentifier","src":"8031:6:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"8039:6:13"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7979:45:13"},"nodeType":"YulFunctionCall","src":"7979:67:13"},"nodeType":"YulExpressionStatement","src":"7979:67:13"},{"nodeType":"YulVariableDeclaration","src":"8056:18:13","value":{"kind":"number","nodeType":"YulLiteral","src":"8073:1:13","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"8060:9:13","type":""}]},{"nodeType":"YulAssignment","src":"8084:17:13","value":{"kind":"number","nodeType":"YulLiteral","src":"8097:4:13","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8084:9:13"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"8148:611:13","statements":[{"nodeType":"YulVariableDeclaration","src":"8162:37:13","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8181:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8193:4:13","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8189:3:13"},"nodeType":"YulFunctionCall","src":"8189:9:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8177:3:13"},"nodeType":"YulFunctionCall","src":"8177:22:13"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"8166:7:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8213:51:13","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8259:4:13"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"8227:31:13"},"nodeType":"YulFunctionCall","src":"8227:37:13"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"8217:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8277:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"8286:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8281:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"8345:163:13","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8370:6:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8388:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8393:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8384:3:13"},"nodeType":"YulFunctionCall","src":"8384:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8378:5:13"},"nodeType":"YulFunctionCall","src":"8378:26:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8363:6:13"},"nodeType":"YulFunctionCall","src":"8363:42:13"},"nodeType":"YulExpressionStatement","src":"8363:42:13"},{"nodeType":"YulAssignment","src":"8422:24:13","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8436:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8444:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8432:3:13"},"nodeType":"YulFunctionCall","src":"8432:14:13"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8422:6:13"}]},{"nodeType":"YulAssignment","src":"8463:31:13","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8480:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8491:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8476:3:13"},"nodeType":"YulFunctionCall","src":"8476:18:13"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8463:9:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8311:1:13"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"8314:7:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8308:2:13"},"nodeType":"YulFunctionCall","src":"8308:14:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8323:21:13","statements":[{"nodeType":"YulAssignment","src":"8325:17:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8334:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"8337:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8330:3:13"},"nodeType":"YulFunctionCall","src":"8330:12:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8325:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"8304:3:13","statements":[]},"src":"8300:208:13"},{"body":{"nodeType":"YulBlock","src":"8544:156:13","statements":[{"nodeType":"YulVariableDeclaration","src":"8562:43:13","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8589:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8594:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8585:3:13"},"nodeType":"YulFunctionCall","src":"8585:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8579:5:13"},"nodeType":"YulFunctionCall","src":"8579:26:13"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8566:9:13","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8629:6:13"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8656:9:13"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8671:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8679:4:13","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8667:3:13"},"nodeType":"YulFunctionCall","src":"8667:17:13"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8637:18:13"},"nodeType":"YulFunctionCall","src":"8637:48:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8622:6:13"},"nodeType":"YulFunctionCall","src":"8622:64:13"},"nodeType":"YulExpressionStatement","src":"8622:64:13"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8527:7:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"8536:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8524:2:13"},"nodeType":"YulFunctionCall","src":"8524:19:13"},"nodeType":"YulIf","src":"8521:179:13"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8720:4:13"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8734:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8742:1:13","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8730:3:13"},"nodeType":"YulFunctionCall","src":"8730:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"8746:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8726:3:13"},"nodeType":"YulFunctionCall","src":"8726:22:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8713:6:13"},"nodeType":"YulFunctionCall","src":"8713:36:13"},"nodeType":"YulExpressionStatement","src":"8713:36:13"}]},"nodeType":"YulCase","src":"8141:618:13","value":{"kind":"number","nodeType":"YulLiteral","src":"8146:1:13","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8776:222:13","statements":[{"nodeType":"YulVariableDeclaration","src":"8790:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"8803:1:13","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8794:5:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"8827:67:13","statements":[{"nodeType":"YulAssignment","src":"8845:35:13","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8864:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8869:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8860:3:13"},"nodeType":"YulFunctionCall","src":"8860:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8854:5:13"},"nodeType":"YulFunctionCall","src":"8854:26:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8845:5:13"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8820:6:13"},"nodeType":"YulIf","src":"8817:77:13"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8914:4:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8973:5:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"8980:6:13"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8920:52:13"},"nodeType":"YulFunctionCall","src":"8920:67:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8907:6:13"},"nodeType":"YulFunctionCall","src":"8907:81:13"},"nodeType":"YulExpressionStatement","src":"8907:81:13"}]},"nodeType":"YulCase","src":"8768:230:13","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8121:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8129:2:13","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8118:2:13"},"nodeType":"YulFunctionCall","src":"8118:14:13"},"nodeType":"YulSwitch","src":"8111:887:13"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7690:4:13","type":""},{"name":"src","nodeType":"YulTypedName","src":"7696:3:13","type":""}],"src":"7609:1395:13"},{"body":{"nodeType":"YulBlock","src":"9106:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9123:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"9128:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9116:6:13"},"nodeType":"YulFunctionCall","src":"9116:19:13"},"nodeType":"YulExpressionStatement","src":"9116:19:13"},{"nodeType":"YulAssignment","src":"9144:29:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9163:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"9168:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9159:3:13"},"nodeType":"YulFunctionCall","src":"9159:14:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9144:11:13"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9078:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"9083:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9094:11:13","type":""}],"src":"9010:169:13"},{"body":{"nodeType":"YulBlock","src":"9291:75:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9313:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"9321:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9309:3:13"},"nodeType":"YulFunctionCall","src":"9309:14:13"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"9325:33:13","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9302:6:13"},"nodeType":"YulFunctionCall","src":"9302:57:13"},"nodeType":"YulExpressionStatement","src":"9302:57:13"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9283:6:13","type":""}],"src":"9185:181:13"},{"body":{"nodeType":"YulBlock","src":"9518:220:13","statements":[{"nodeType":"YulAssignment","src":"9528:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9594:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"9599:2:13","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9535:58:13"},"nodeType":"YulFunctionCall","src":"9535:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9528:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9700:3:13"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"9611:88:13"},"nodeType":"YulFunctionCall","src":"9611:93:13"},"nodeType":"YulExpressionStatement","src":"9611:93:13"},{"nodeType":"YulAssignment","src":"9713:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9724:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"9729:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9720:3:13"},"nodeType":"YulFunctionCall","src":"9720:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9713:3:13"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9506:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9514:3:13","type":""}],"src":"9372:366:13"},{"body":{"nodeType":"YulBlock","src":"9915:248:13","statements":[{"nodeType":"YulAssignment","src":"9925:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9937:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9948:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9933:3:13"},"nodeType":"YulFunctionCall","src":"9933:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9925:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9972:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9983:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9968:3:13"},"nodeType":"YulFunctionCall","src":"9968:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9991:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"9997:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9987:3:13"},"nodeType":"YulFunctionCall","src":"9987:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9961:6:13"},"nodeType":"YulFunctionCall","src":"9961:47:13"},"nodeType":"YulExpressionStatement","src":"9961:47:13"},{"nodeType":"YulAssignment","src":"10017:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10151:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10025:124:13"},"nodeType":"YulFunctionCall","src":"10025:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10017:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9895:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9910:4:13","type":""}],"src":"9744:419:13"},{"body":{"nodeType":"YulBlock","src":"10197:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10214:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10217:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10207:6:13"},"nodeType":"YulFunctionCall","src":"10207:88:13"},"nodeType":"YulExpressionStatement","src":"10207:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10311:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10314:4:13","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10304:6:13"},"nodeType":"YulFunctionCall","src":"10304:15:13"},"nodeType":"YulExpressionStatement","src":"10304:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10335:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10338:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10328:6:13"},"nodeType":"YulFunctionCall","src":"10328:15:13"},"nodeType":"YulExpressionStatement","src":"10328:15:13"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10169:180:13"},{"body":{"nodeType":"YulBlock","src":"10399:147:13","statements":[{"nodeType":"YulAssignment","src":"10409:25:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10432:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10414:17:13"},"nodeType":"YulFunctionCall","src":"10414:20:13"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"10409:1:13"}]},{"nodeType":"YulAssignment","src":"10443:25:13","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10466:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10448:17:13"},"nodeType":"YulFunctionCall","src":"10448:20:13"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"10443:1:13"}]},{"nodeType":"YulAssignment","src":"10477:16:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10488:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"10491:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10484:3:13"},"nodeType":"YulFunctionCall","src":"10484:9:13"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"10477:3:13"}]},{"body":{"nodeType":"YulBlock","src":"10517:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10519:16:13"},"nodeType":"YulFunctionCall","src":"10519:18:13"},"nodeType":"YulExpressionStatement","src":"10519:18:13"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10509:1:13"},{"name":"sum","nodeType":"YulIdentifier","src":"10512:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10506:2:13"},"nodeType":"YulFunctionCall","src":"10506:10:13"},"nodeType":"YulIf","src":"10503:36:13"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10386:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"10389:1:13","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"10395:3:13","type":""}],"src":"10355:191:13"},{"body":{"nodeType":"YulBlock","src":"10617:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10634:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10657:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10639:17:13"},"nodeType":"YulFunctionCall","src":"10639:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10627:6:13"},"nodeType":"YulFunctionCall","src":"10627:37:13"},"nodeType":"YulExpressionStatement","src":"10627:37:13"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10605:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10612:3:13","type":""}],"src":"10552:118:13"},{"body":{"nodeType":"YulBlock","src":"10774:124:13","statements":[{"nodeType":"YulAssignment","src":"10784:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10796:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10807:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10792:3:13"},"nodeType":"YulFunctionCall","src":"10792:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10784:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10864:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10877:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10888:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10873:3:13"},"nodeType":"YulFunctionCall","src":"10873:17:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10820:43:13"},"nodeType":"YulFunctionCall","src":"10820:71:13"},"nodeType":"YulExpressionStatement","src":"10820:71:13"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10746:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10758:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10769:4:13","type":""}],"src":"10676:222:13"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001cef38038062001cef8339818101604052810190620000379190620003ca565b818181600390816200004a9190620006a5565b5080600490816200005c9190620006a5565b5050506200007133846200007a60201b60201c565b505050620008a7565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000ec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000e390620007ed565b60405180910390fd5b6200010060008383620001f260201b60201c565b80600260008282546200011491906200083e565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200016b91906200083e565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001d291906200088a565b60405180910390a3620001ee60008383620001f760201b60201c565b5050565b505050565b505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b620002258162000210565b81146200023157600080fd5b50565b60008151905062000245816200021a565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002a08262000255565b810181811067ffffffffffffffff82111715620002c257620002c162000266565b5b80604052505050565b6000620002d7620001fc565b9050620002e5828262000295565b919050565b600067ffffffffffffffff82111562000308576200030762000266565b5b620003138262000255565b9050602081019050919050565b60005b838110156200034057808201518184015260208101905062000323565b60008484015250505050565b6000620003636200035d84620002ea565b620002cb565b90508281526020810184848401111562000382576200038162000250565b5b6200038f84828562000320565b509392505050565b600082601f830112620003af57620003ae6200024b565b5b8151620003c18482602086016200034c565b91505092915050565b600080600060608486031215620003e657620003e562000206565b5b6000620003f68682870162000234565b935050602084015167ffffffffffffffff8111156200041a57620004196200020b565b5b620004288682870162000397565b925050604084015167ffffffffffffffff8111156200044c576200044b6200020b565b5b6200045a8682870162000397565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004b757607f821691505b602082108103620004cd57620004cc6200046f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004f8565b620005438683620004f8565b95508019841693508086168417925050509392505050565b6000819050919050565b600062000586620005806200057a8462000210565b6200055b565b62000210565b9050919050565b6000819050919050565b620005a28362000565565b620005ba620005b1826200058d565b84845462000505565b825550505050565b600090565b620005d1620005c2565b620005de81848462000597565b505050565b5b818110156200060657620005fa600082620005c7565b600181019050620005e4565b5050565b601f82111562000655576200061f81620004d3565b6200062a84620004e8565b810160208510156200063a578190505b620006526200064985620004e8565b830182620005e3565b50505b505050565b600082821c905092915050565b60006200067a600019846008026200065a565b1980831691505092915050565b600062000695838362000667565b9150826002028217905092915050565b620006b08262000464565b67ffffffffffffffff811115620006cc57620006cb62000266565b5b620006d882546200049e565b620006e58282856200060a565b600060209050601f8311600181146200071d576000841562000708578287015190505b62000714858262000687565b86555062000784565b601f1984166200072d86620004d3565b60005b82811015620007575784890151825560018201915060208501945060208101905062000730565b8683101562000777578489015162000773601f89168262000667565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000620007d5601f836200078c565b9150620007e2826200079d565b602082019050919050565b600060208201905081810360008301526200080881620007c6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200084b8262000210565b9150620008588362000210565b92508282019050808211156200087357620008726200080f565b5b92915050565b620008848162000210565b82525050565b6000602082019050620008a1600083018462000879565b92915050565b61143880620008b76000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80633950935111610071578063395093511461018f57806370a08231146101bf57806395d89b41146101ef578063a457c2d71461020d578063a9059cbb1461023d578063dd62ed3e1461026d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd146101255780632daf865d14610155578063313ce56714610171575b600080fd5b6100c161029d565b6040516100ce9190610ca9565b60405180910390f35b6100f160048036038101906100ec9190610d64565b61032f565b6040516100fe9190610dbf565b60405180910390f35b61010f610352565b60405161011c9190610de9565b60405180910390f35b61013f600480360381019061013a9190610e04565b61035c565b60405161014c9190610dbf565b60405180910390f35b61016f600480360381019061016a9190610d64565b61038b565b005b610179610399565b6040516101869190610e73565b60405180910390f35b6101a960048036038101906101a49190610d64565b6103a2565b6040516101b69190610dbf565b60405180910390f35b6101d960048036038101906101d49190610e8e565b6103d9565b6040516101e69190610de9565b60405180910390f35b6101f7610421565b6040516102049190610ca9565b60405180910390f35b61022760048036038101906102229190610d64565b6104b3565b6040516102349190610dbf565b60405180910390f35b61025760048036038101906102529190610d64565b61052a565b6040516102649190610dbf565b60405180910390f35b61028760048036038101906102829190610ebb565b61054d565b6040516102949190610de9565b60405180910390f35b6060600380546102ac90610f2a565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890610f2a565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b60008061033a6105d4565b90506103478185856105dc565b600191505092915050565b6000600254905090565b6000806103676105d4565b90506103748582856107a5565b61037f858585610831565b60019150509392505050565b6103958282610ab0565b5050565b60006012905090565b6000806103ad6105d4565b90506103ce8185856103bf858961054d565b6103c99190610f8a565b6105dc565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461043090610f2a565b80601f016020809104026020016040519081016040528092919081815260200182805461045c90610f2a565b80156104a95780601f1061047e576101008083540402835291602001916104a9565b820191906000526020600020905b81548152906001019060200180831161048c57829003601f168201915b5050505050905090565b6000806104be6105d4565b905060006104cc828661054d565b905083811015610511576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050890611030565b60405180910390fd5b61051e82868684036105dc565b60019250505092915050565b6000806105356105d4565b9050610542818585610831565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361064b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610642906110c2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b190611154565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107989190610de9565b60405180910390a3505050565b60006107b1848461054d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461082b578181101561081d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610814906111c0565b60405180910390fd5b61082a84848484036105dc565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089790611252565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361090f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610906906112e4565b60405180910390fd5b61091a838383610c0f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156109a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099790611376565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a339190610f8a565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a979190610de9565b60405180910390a3610aaa848484610c14565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b16906113e2565b60405180910390fd5b610b2b60008383610c0f565b8060026000828254610b3d9190610f8a565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b929190610f8a565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610bf79190610de9565b60405180910390a3610c0b60008383610c14565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c53578082015181840152602081019050610c38565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c7b82610c19565b610c858185610c24565b9350610c95818560208601610c35565b610c9e81610c5f565b840191505092915050565b60006020820190508181036000830152610cc38184610c70565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cfb82610cd0565b9050919050565b610d0b81610cf0565b8114610d1657600080fd5b50565b600081359050610d2881610d02565b92915050565b6000819050919050565b610d4181610d2e565b8114610d4c57600080fd5b50565b600081359050610d5e81610d38565b92915050565b60008060408385031215610d7b57610d7a610ccb565b5b6000610d8985828601610d19565b9250506020610d9a85828601610d4f565b9150509250929050565b60008115159050919050565b610db981610da4565b82525050565b6000602082019050610dd46000830184610db0565b92915050565b610de381610d2e565b82525050565b6000602082019050610dfe6000830184610dda565b92915050565b600080600060608486031215610e1d57610e1c610ccb565b5b6000610e2b86828701610d19565b9350506020610e3c86828701610d19565b9250506040610e4d86828701610d4f565b9150509250925092565b600060ff82169050919050565b610e6d81610e57565b82525050565b6000602082019050610e886000830184610e64565b92915050565b600060208284031215610ea457610ea3610ccb565b5b6000610eb284828501610d19565b91505092915050565b60008060408385031215610ed257610ed1610ccb565b5b6000610ee085828601610d19565b9250506020610ef185828601610d19565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f4257607f821691505b602082108103610f5557610f54610efb565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f9582610d2e565b9150610fa083610d2e565b9250828201905080821115610fb857610fb7610f5b565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061101a602583610c24565b915061102582610fbe565b604082019050919050565b600060208201905081810360008301526110498161100d565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006110ac602483610c24565b91506110b782611050565b604082019050919050565b600060208201905081810360008301526110db8161109f565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061113e602283610c24565b9150611149826110e2565b604082019050919050565b6000602082019050818103600083015261116d81611131565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006111aa601d83610c24565b91506111b582611174565b602082019050919050565b600060208201905081810360008301526111d98161119d565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061123c602583610c24565b9150611247826111e0565b604082019050919050565b6000602082019050818103600083015261126b8161122f565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006112ce602383610c24565b91506112d982611272565b604082019050919050565b600060208201905081810360008301526112fd816112c1565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611360602683610c24565b915061136b82611304565b604082019050919050565b6000602082019050818103600083015261138f81611353565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006113cc601f83610c24565b91506113d782611396565b602082019050919050565b600060208201905081810360008301526113fb816113bf565b905091905056fea2646970667358221220b6dd4c34e597318db74b4d39ad3a841b14117b972ede764f2018b879f428b31364736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1CEF CODESIZE SUB DUP1 PUSH3 0x1CEF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x3CA JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0x6A5 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5C SWAP2 SWAP1 PUSH3 0x6A5 JUMP JUMPDEST POP POP POP PUSH3 0x71 CALLER DUP5 PUSH3 0x7A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0x8A7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xE3 SWAP1 PUSH3 0x7ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x100 PUSH1 0x0 DUP4 DUP4 PUSH3 0x1F2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x114 SWAP2 SWAP1 PUSH3 0x83E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x16B SWAP2 SWAP1 PUSH3 0x83E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x1D2 SWAP2 SWAP1 PUSH3 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x1EE PUSH1 0x0 DUP4 DUP4 PUSH3 0x1F7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x225 DUP2 PUSH3 0x210 JUMP JUMPDEST DUP2 EQ PUSH3 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x245 DUP2 PUSH3 0x21A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x2A0 DUP3 PUSH3 0x255 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2C2 JUMPI PUSH3 0x2C1 PUSH3 0x266 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2D7 PUSH3 0x1FC JUMP JUMPDEST SWAP1 POP PUSH3 0x2E5 DUP3 DUP3 PUSH3 0x295 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x308 JUMPI PUSH3 0x307 PUSH3 0x266 JUMP JUMPDEST JUMPDEST PUSH3 0x313 DUP3 PUSH3 0x255 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x340 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x323 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x363 PUSH3 0x35D DUP5 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x2CB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x382 JUMPI PUSH3 0x381 PUSH3 0x250 JUMP JUMPDEST JUMPDEST PUSH3 0x38F DUP5 DUP3 DUP6 PUSH3 0x320 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x3AF JUMPI PUSH3 0x3AE PUSH3 0x24B JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x3C1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x34C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x3E6 JUMPI PUSH3 0x3E5 PUSH3 0x206 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x3F6 DUP7 DUP3 DUP8 ADD PUSH3 0x234 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x41A JUMPI PUSH3 0x419 PUSH3 0x20B JUMP JUMPDEST JUMPDEST PUSH3 0x428 DUP7 DUP3 DUP8 ADD PUSH3 0x397 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x44C JUMPI PUSH3 0x44B PUSH3 0x20B JUMP JUMPDEST JUMPDEST PUSH3 0x45A DUP7 DUP3 DUP8 ADD PUSH3 0x397 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x4B7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4CD JUMPI PUSH3 0x4CC PUSH3 0x46F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x537 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x4F8 JUMP JUMPDEST PUSH3 0x543 DUP7 DUP4 PUSH3 0x4F8 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x586 PUSH3 0x580 PUSH3 0x57A DUP5 PUSH3 0x210 JUMP JUMPDEST PUSH3 0x55B JUMP JUMPDEST PUSH3 0x210 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5A2 DUP4 PUSH3 0x565 JUMP JUMPDEST PUSH3 0x5BA PUSH3 0x5B1 DUP3 PUSH3 0x58D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x505 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x5D1 PUSH3 0x5C2 JUMP JUMPDEST PUSH3 0x5DE DUP2 DUP5 DUP5 PUSH3 0x597 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x606 JUMPI PUSH3 0x5FA PUSH1 0x0 DUP3 PUSH3 0x5C7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5E4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x655 JUMPI PUSH3 0x61F DUP2 PUSH3 0x4D3 JUMP JUMPDEST PUSH3 0x62A DUP5 PUSH3 0x4E8 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x63A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x652 PUSH3 0x649 DUP6 PUSH3 0x4E8 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5E3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x67A PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x65A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x695 DUP4 DUP4 PUSH3 0x667 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x6B0 DUP3 PUSH3 0x464 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6CC JUMPI PUSH3 0x6CB PUSH3 0x266 JUMP JUMPDEST JUMPDEST PUSH3 0x6D8 DUP3 SLOAD PUSH3 0x49E JUMP JUMPDEST PUSH3 0x6E5 DUP3 DUP3 DUP6 PUSH3 0x60A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x71D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x708 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x714 DUP6 DUP3 PUSH3 0x687 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x784 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x72D DUP7 PUSH3 0x4D3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x757 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x730 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x777 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x773 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x667 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7D5 PUSH1 0x1F DUP4 PUSH3 0x78C JUMP JUMPDEST SWAP2 POP PUSH3 0x7E2 DUP3 PUSH3 0x79D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x808 DUP2 PUSH3 0x7C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x84B DUP3 PUSH3 0x210 JUMP JUMPDEST SWAP2 POP PUSH3 0x858 DUP4 PUSH3 0x210 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x873 JUMPI PUSH3 0x872 PUSH3 0x80F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x884 DUP2 PUSH3 0x210 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x8A1 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x879 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1438 DUP1 PUSH3 0x8B7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x26D JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x2DAF865D EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xE04 JUMP JUMPDEST PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16A SWAP2 SWAP1 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x179 PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0xE73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0xE8E JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0xEBB JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xF2A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0xF2A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x325 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x325 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x308 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x33A PUSH2 0x5D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x347 DUP2 DUP6 DUP6 PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x367 PUSH2 0x5D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x374 DUP6 DUP3 DUP6 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x37F DUP6 DUP6 DUP6 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x395 DUP3 DUP3 PUSH2 0xAB0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3AD PUSH2 0x5D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x3CE DUP2 DUP6 DUP6 PUSH2 0x3BF DUP6 DUP10 PUSH2 0x54D JUMP JUMPDEST PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x430 SWAP1 PUSH2 0xF2A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x45C SWAP1 PUSH2 0xF2A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x48C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4BE PUSH2 0x5D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4CC DUP3 DUP7 PUSH2 0x54D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x511 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x508 SWAP1 PUSH2 0x1030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x51E DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x535 PUSH2 0x5D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x542 DUP2 DUP6 DUP6 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x64B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x10C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x798 SWAP2 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 DUP5 DUP5 PUSH2 0x54D JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x82B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x81D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x814 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x82A DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5DC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x897 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x90F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x906 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x91A DUP4 DUP4 DUP4 PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x9A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x997 SWAP1 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA33 SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA97 SWAP2 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xAAA DUP5 DUP5 DUP5 PUSH2 0xC14 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB16 SWAP1 PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB2B PUSH1 0x0 DUP4 DUP4 PUSH2 0xC0F JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB92 SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xBF7 SWAP2 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xC0B PUSH1 0x0 DUP4 DUP4 PUSH2 0xC14 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC53 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC38 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7B DUP3 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0xC85 DUP2 DUP6 PUSH2 0xC24 JUMP JUMPDEST SWAP4 POP PUSH2 0xC95 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC35 JUMP JUMPDEST PUSH2 0xC9E DUP2 PUSH2 0xC5F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCC3 DUP2 DUP5 PUSH2 0xC70 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCFB DUP3 PUSH2 0xCD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD0B DUP2 PUSH2 0xCF0 JUMP JUMPDEST DUP2 EQ PUSH2 0xD16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD28 DUP2 PUSH2 0xD02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD41 DUP2 PUSH2 0xD2E JUMP JUMPDEST DUP2 EQ PUSH2 0xD4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD5E DUP2 PUSH2 0xD38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD7B JUMPI PUSH2 0xD7A PUSH2 0xCCB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD89 DUP6 DUP3 DUP7 ADD PUSH2 0xD19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD9A DUP6 DUP3 DUP7 ADD PUSH2 0xD4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB9 DUP2 PUSH2 0xDA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDD4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDE3 DUP2 PUSH2 0xD2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDFE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE1D JUMPI PUSH2 0xE1C PUSH2 0xCCB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE2B DUP7 DUP3 DUP8 ADD PUSH2 0xD19 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE3C DUP7 DUP3 DUP8 ADD PUSH2 0xD19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE4D DUP7 DUP3 DUP8 ADD PUSH2 0xD4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE6D DUP2 PUSH2 0xE57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA4 JUMPI PUSH2 0xEA3 PUSH2 0xCCB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEB2 DUP5 DUP3 DUP6 ADD PUSH2 0xD19 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED2 JUMPI PUSH2 0xED1 PUSH2 0xCCB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEE0 DUP6 DUP3 DUP7 ADD PUSH2 0xD19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEF1 DUP6 DUP3 DUP7 ADD PUSH2 0xD19 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF42 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF55 JUMPI PUSH2 0xF54 PUSH2 0xEFB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF95 DUP3 PUSH2 0xD2E JUMP JUMPDEST SWAP2 POP PUSH2 0xFA0 DUP4 PUSH2 0xD2E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xFB8 JUMPI PUSH2 0xFB7 PUSH2 0xF5B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x101A PUSH1 0x25 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x1025 DUP3 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1049 DUP2 PUSH2 0x100D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10AC PUSH1 0x24 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x10B7 DUP3 PUSH2 0x1050 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10DB DUP2 PUSH2 0x109F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113E PUSH1 0x22 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x1149 DUP3 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x116D DUP2 PUSH2 0x1131 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AA PUSH1 0x1D DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x11B5 DUP3 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11D9 DUP2 PUSH2 0x119D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123C PUSH1 0x25 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x1247 DUP3 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x126B DUP2 PUSH2 0x122F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12CE PUSH1 0x23 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x12D9 DUP3 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12FD DUP2 PUSH2 0x12C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1360 PUSH1 0x26 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x136B DUP3 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x138F DUP2 PUSH2 0x1353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13CC PUSH1 0x1F DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x13D7 DUP3 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13FB DUP2 PUSH2 0x13BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0xDD 0x4C CALLVALUE 0xE5 SWAP8 BALANCE DUP14 0xB7 0x4B 0x4D CODECOPY 0xAD GASPRICE DUP5 SHL EQ GT PUSH28 0x972EDE764F2018B879F428B31364736F6C6343000811003300000000 ","sourceMap":"122:339:8:-:0;;;151:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;268:4;274:6;2052:5:4;2044;:13;;;;;;:::i;:::-;;2077:7;2067;:17;;;;;;:::i;:::-;;1978:113;;293:32:8::1;299:10;311:13;293:5;;;:32;;:::i;:::-;151:182:::0;;;122:339;;8402:389:4;8504:1;8485:21;;:7;:21;;;8477:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8553:49;8582:1;8586:7;8595:6;8553:20;;;:49;;:::i;:::-;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;;;;;8667:6;8645:9;:18;8655:7;8645:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8709:7;8688:37;;8705:1;8688:37;;;8718:6;8688:37;;;;;;:::i;:::-;;;;;;;;8736:48;8764:1;8768:7;8777:6;8736:19;;;:48;;:::i;:::-;8402:389;;:::o;11786:121::-;;;;:::o;12495:120::-;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:117::-;803:1;800;793:12;817:117;926:1;923;916:12;940:102;981:6;1032:2;1028:7;1023:2;1016:5;1012:14;1008:28;998:38;;940:102;;;:::o;1048:180::-;1096:77;1093:1;1086:88;1193:4;1190:1;1183:15;1217:4;1214:1;1207:15;1234:281;1317:27;1339:4;1317:27;:::i;:::-;1309:6;1305:40;1447:6;1435:10;1432:22;1411:18;1399:10;1396:34;1393:62;1390:88;;;1458:18;;:::i;:::-;1390:88;1498:10;1494:2;1487:22;1277:238;1234:281;;:::o;1521:129::-;1555:6;1582:20;;:::i;:::-;1572:30;;1611:33;1639:4;1631:6;1611:33;:::i;:::-;1521:129;;;:::o;1656:308::-;1718:4;1808:18;1800:6;1797:30;1794:56;;;1830:18;;:::i;:::-;1794:56;1868:29;1890:6;1868:29;:::i;:::-;1860:37;;1952:4;1946;1942:15;1934:23;;1656:308;;;:::o;1970:246::-;2051:1;2061:113;2075:6;2072:1;2069:13;2061:113;;;2160:1;2155:3;2151:11;2145:18;2141:1;2136:3;2132:11;2125:39;2097:2;2094:1;2090:10;2085:15;;2061:113;;;2208:1;2199:6;2194:3;2190:16;2183:27;2032:184;1970:246;;;:::o;2222:434::-;2311:5;2336:66;2352:49;2394:6;2352:49;:::i;:::-;2336:66;:::i;:::-;2327:75;;2425:6;2418:5;2411:21;2463:4;2456:5;2452:16;2501:3;2492:6;2487:3;2483:16;2480:25;2477:112;;;2508:79;;:::i;:::-;2477:112;2598:52;2643:6;2638:3;2633;2598:52;:::i;:::-;2317:339;2222:434;;;;;:::o;2676:355::-;2743:5;2792:3;2785:4;2777:6;2773:17;2769:27;2759:122;;2800:79;;:::i;:::-;2759:122;2910:6;2904:13;2935:90;3021:3;3013:6;3006:4;2998:6;2994:17;2935:90;:::i;:::-;2926:99;;2749:282;2676:355;;;;:::o;3037:1009::-;3145:6;3153;3161;3210:2;3198:9;3189:7;3185:23;3181:32;3178:119;;;3216:79;;:::i;:::-;3178:119;3336:1;3361:64;3417:7;3408:6;3397:9;3393:22;3361:64;:::i;:::-;3351:74;;3307:128;3495:2;3484:9;3480:18;3474:25;3526:18;3518:6;3515:30;3512:117;;;3548:79;;:::i;:::-;3512:117;3653:74;3719:7;3710:6;3699:9;3695:22;3653:74;:::i;:::-;3643:84;;3445:292;3797:2;3786:9;3782:18;3776:25;3828:18;3820:6;3817:30;3814:117;;;3850:79;;:::i;:::-;3814:117;3955:74;4021:7;4012:6;4001:9;3997:22;3955:74;:::i;:::-;3945:84;;3747:292;3037:1009;;;;;:::o;4052:99::-;4104:6;4138:5;4132:12;4122:22;;4052:99;;;:::o;4157:180::-;4205:77;4202:1;4195:88;4302:4;4299:1;4292:15;4326:4;4323:1;4316:15;4343:320;4387:6;4424:1;4418:4;4414:12;4404:22;;4471:1;4465:4;4461:12;4492:18;4482:81;;4548:4;4540:6;4536:17;4526:27;;4482:81;4610:2;4602:6;4599:14;4579:18;4576:38;4573:84;;4629:18;;:::i;:::-;4573:84;4394:269;4343:320;;;:::o;4669:141::-;4718:4;4741:3;4733:11;;4764:3;4761:1;4754:14;4798:4;4795:1;4785:18;4777:26;;4669:141;;;:::o;4816:93::-;4853:6;4900:2;4895;4888:5;4884:14;4880:23;4870:33;;4816:93;;;:::o;4915:107::-;4959:8;5009:5;5003:4;4999:16;4978:37;;4915:107;;;;:::o;5028:393::-;5097:6;5147:1;5135:10;5131:18;5170:97;5200:66;5189:9;5170:97;:::i;:::-;5288:39;5318:8;5307:9;5288:39;:::i;:::-;5276:51;;5360:4;5356:9;5349:5;5345:21;5336:30;;5409:4;5399:8;5395:19;5388:5;5385:30;5375:40;;5104:317;;5028:393;;;;;:::o;5427:60::-;5455:3;5476:5;5469:12;;5427:60;;;:::o;5493:142::-;5543:9;5576:53;5594:34;5603:24;5621:5;5603:24;:::i;:::-;5594:34;:::i;:::-;5576:53;:::i;:::-;5563:66;;5493:142;;;:::o;5641:75::-;5684:3;5705:5;5698:12;;5641:75;;;:::o;5722:269::-;5832:39;5863:7;5832:39;:::i;:::-;5893:91;5942:41;5966:16;5942:41;:::i;:::-;5934:6;5927:4;5921:11;5893:91;:::i;:::-;5887:4;5880:105;5798:193;5722:269;;;:::o;5997:73::-;6042:3;5997:73;:::o;6076:189::-;6153:32;;:::i;:::-;6194:65;6252:6;6244;6238:4;6194:65;:::i;:::-;6129:136;6076:189;;:::o;6271:186::-;6331:120;6348:3;6341:5;6338:14;6331:120;;;6402:39;6439:1;6432:5;6402:39;:::i;:::-;6375:1;6368:5;6364:13;6355:22;;6331:120;;;6271:186;;:::o;6463:543::-;6564:2;6559:3;6556:11;6553:446;;;6598:38;6630:5;6598:38;:::i;:::-;6682:29;6700:10;6682:29;:::i;:::-;6672:8;6668:44;6865:2;6853:10;6850:18;6847:49;;;6886:8;6871:23;;6847:49;6909:80;6965:22;6983:3;6965:22;:::i;:::-;6955:8;6951:37;6938:11;6909:80;:::i;:::-;6568:431;;6553:446;6463:543;;;:::o;7012:117::-;7066:8;7116:5;7110:4;7106:16;7085:37;;7012:117;;;;:::o;7135:169::-;7179:6;7212:51;7260:1;7256:6;7248:5;7245:1;7241:13;7212:51;:::i;:::-;7208:56;7293:4;7287;7283:15;7273:25;;7186:118;7135:169;;;;:::o;7309:295::-;7385:4;7531:29;7556:3;7550:4;7531:29;:::i;:::-;7523:37;;7593:3;7590:1;7586:11;7580:4;7577:21;7569:29;;7309:295;;;;:::o;7609:1395::-;7726:37;7759:3;7726:37;:::i;:::-;7828:18;7820:6;7817:30;7814:56;;;7850:18;;:::i;:::-;7814:56;7894:38;7926:4;7920:11;7894:38;:::i;:::-;7979:67;8039:6;8031;8025:4;7979:67;:::i;:::-;8073:1;8097:4;8084:17;;8129:2;8121:6;8118:14;8146:1;8141:618;;;;8803:1;8820:6;8817:77;;;8869:9;8864:3;8860:19;8854:26;8845:35;;8817:77;8920:67;8980:6;8973:5;8920:67;:::i;:::-;8914:4;8907:81;8776:222;8111:887;;8141:618;8193:4;8189:9;8181:6;8177:22;8227:37;8259:4;8227:37;:::i;:::-;8286:1;8300:208;8314:7;8311:1;8308:14;8300:208;;;8393:9;8388:3;8384:19;8378:26;8370:6;8363:42;8444:1;8436:6;8432:14;8422:24;;8491:2;8480:9;8476:18;8463:31;;8337:4;8334:1;8330:12;8325:17;;8300:208;;;8536:6;8527:7;8524:19;8521:179;;;8594:9;8589:3;8585:19;8579:26;8637:48;8679:4;8671:6;8667:17;8656:9;8637:48;:::i;:::-;8629:6;8622:64;8544:156;8521:179;8746:1;8742;8734:6;8730:14;8726:22;8720:4;8713:36;8148:611;;;8111:887;;7701:1303;;;7609:1395;;:::o;9010:169::-;9094:11;9128:6;9123:3;9116:19;9168:4;9163:3;9159:14;9144:29;;9010:169;;;;:::o;9185:181::-;9325:33;9321:1;9313:6;9309:14;9302:57;9185:181;:::o;9372:366::-;9514:3;9535:67;9599:2;9594:3;9535:67;:::i;:::-;9528:74;;9611:93;9700:3;9611:93;:::i;:::-;9729:2;9724:3;9720:12;9713:19;;9372:366;;;:::o;9744:419::-;9910:4;9948:2;9937:9;9933:18;9925:26;;9997:9;9991:4;9987:20;9983:1;9972:9;9968:17;9961:47;10025:131;10151:4;10025:131;:::i;:::-;10017:139;;9744:419;;;:::o;10169:180::-;10217:77;10214:1;10207:88;10314:4;10311:1;10304:15;10338:4;10335:1;10328:15;10355:191;10395:3;10414:20;10432:1;10414:20;:::i;:::-;10409:25;;10448:20;10466:1;10448:20;:::i;:::-;10443:25;;10491:1;10488;10484:9;10477:16;;10512:3;10509:1;10506:10;10503:36;;;10519:18;;:::i;:::-;10503:36;10355:191;;;;:::o;10552:118::-;10639:24;10657:5;10639:24;:::i;:::-;10634:3;10627:37;10552:118;;:::o;10676:222::-;10769:4;10807:2;10796:9;10792:18;10784:26;;10820:71;10888:1;10877:9;10873:17;10864:6;10820:71;:::i;:::-;10676:222;;;;:::o;122:339:8:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_893":{"entryPoint":3092,"id":893,"parameterSlots":3,"returnSlots":0},"@_approve_828":{"entryPoint":1500,"id":828,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_882":{"entryPoint":3087,"id":882,"parameterSlots":3,"returnSlots":0},"@_mintCAT_1057":{"entryPoint":907,"id":1057,"parameterSlots":2,"returnSlots":0},"@_mint_711":{"entryPoint":2736,"id":711,"parameterSlots":2,"returnSlots":0},"@_msgSender_1009":{"entryPoint":1492,"id":1009,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_871":{"entryPoint":1957,"id":871,"parameterSlots":3,"returnSlots":0},"@_transfer_655":{"entryPoint":2097,"id":655,"parameterSlots":3,"returnSlots":0},"@allowance_450":{"entryPoint":1357,"id":450,"parameterSlots":2,"returnSlots":1},"@approve_475":{"entryPoint":815,"id":475,"parameterSlots":2,"returnSlots":1},"@balanceOf_407":{"entryPoint":985,"id":407,"parameterSlots":1,"returnSlots":1},"@decimals_383":{"entryPoint":921,"id":383,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_578":{"entryPoint":1203,"id":578,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_537":{"entryPoint":930,"id":537,"parameterSlots":2,"returnSlots":1},"@name_363":{"entryPoint":669,"id":363,"parameterSlots":0,"returnSlots":1},"@symbol_373":{"entryPoint":1057,"id":373,"parameterSlots":0,"returnSlots":1},"@totalSupply_393":{"entryPoint":850,"id":393,"parameterSlots":0,"returnSlots":1},"@transferFrom_508":{"entryPoint":860,"id":508,"parameterSlots":3,"returnSlots":1},"@transfer_432":{"entryPoint":1322,"id":432,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3353,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3407,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3726,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3771,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3588,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3428,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3504,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3184,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4801,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":4401,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4509,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4947,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4655,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":4255,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":4109,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":5055,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3546,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3684,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3519,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3241,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4836,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4436,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4544,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4982,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4690,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4290,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4144,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5090,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3561,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3699,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3097,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3108,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3978,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3312,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3492,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3280,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3374,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3671,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3125,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3882,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3931,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3835,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3275,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3167,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4722,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":4322,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4468,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4868,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4576,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":4176,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":4030,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":5014,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3330,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3384,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:14683:13","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:13","statements":[{"nodeType":"YulAssignment","src":"77:22:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:13"},"nodeType":"YulFunctionCall","src":"87:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:13"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:13","type":""}],"src":"7:99:13"},{"body":{"nodeType":"YulBlock","src":"208:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:13"},"nodeType":"YulFunctionCall","src":"218:19:13"},"nodeType":"YulExpressionStatement","src":"218:19:13"},{"nodeType":"YulAssignment","src":"246:29:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:13"},"nodeType":"YulFunctionCall","src":"261:14:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:13"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:13","type":""}],"src":"112:169:13"},{"body":{"nodeType":"YulBlock","src":"349:184:13","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:13"},"nodeType":"YulFunctionCall","src":"449:11:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:13"},"nodeType":"YulFunctionCall","src":"468:11:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:13"},"nodeType":"YulFunctionCall","src":"462:18:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:13"},"nodeType":"YulFunctionCall","src":"442:39:13"},"nodeType":"YulExpressionStatement","src":"442:39:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:13"},"nodeType":"YulFunctionCall","src":"386:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:13","statements":[{"nodeType":"YulAssignment","src":"402:15:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:13"},"nodeType":"YulFunctionCall","src":"407:10:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:13","statements":[]},"src":"378:113:13"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:13"},"nodeType":"YulFunctionCall","src":"507:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:13"},"nodeType":"YulFunctionCall","src":"500:27:13"},"nodeType":"YulExpressionStatement","src":"500:27:13"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:13","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:13","type":""}],"src":"287:246:13"},{"body":{"nodeType":"YulBlock","src":"587:54:13","statements":[{"nodeType":"YulAssignment","src":"597:38:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:13"},"nodeType":"YulFunctionCall","src":"611:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:13"},"nodeType":"YulFunctionCall","src":"627:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:13"},"nodeType":"YulFunctionCall","src":"607:28:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:13"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:13","type":""}],"src":"539:102:13"},{"body":{"nodeType":"YulBlock","src":"739:285:13","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:13"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:13"},"nodeType":"YulFunctionCall","src":"763:39:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:13","type":""}]},{"nodeType":"YulAssignment","src":"811:78:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:13"},"nodeType":"YulFunctionCall","src":"818:71:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:13"},"nodeType":"YulFunctionCall","src":"933:16:13"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:13"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:13"},"nodeType":"YulFunctionCall","src":"898:65:13"},"nodeType":"YulExpressionStatement","src":"898:65:13"},{"nodeType":"YulAssignment","src":"972:46:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:13"},"nodeType":"YulFunctionCall","src":"988:29:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:13"},"nodeType":"YulFunctionCall","src":"979:39:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:13"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:13","type":""}],"src":"647:377:13"},{"body":{"nodeType":"YulBlock","src":"1148:195:13","statements":[{"nodeType":"YulAssignment","src":"1158:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:13"},"nodeType":"YulFunctionCall","src":"1166:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:13"},"nodeType":"YulFunctionCall","src":"1201:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:13"},"nodeType":"YulFunctionCall","src":"1220:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:13"},"nodeType":"YulFunctionCall","src":"1194:47:13"},"nodeType":"YulExpressionStatement","src":"1194:47:13"},{"nodeType":"YulAssignment","src":"1250:86:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:13"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:13"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:13"},"nodeType":"YulFunctionCall","src":"1258:78:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:13"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:13","type":""}],"src":"1030:313:13"},{"body":{"nodeType":"YulBlock","src":"1389:35:13","statements":[{"nodeType":"YulAssignment","src":"1399:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:13"},"nodeType":"YulFunctionCall","src":"1409:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:13","type":""}],"src":"1349:75:13"},{"body":{"nodeType":"YulBlock","src":"1519:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:13"},"nodeType":"YulFunctionCall","src":"1529:12:13"},"nodeType":"YulExpressionStatement","src":"1529:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:13"},{"body":{"nodeType":"YulBlock","src":"1642:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:13"},"nodeType":"YulFunctionCall","src":"1652:12:13"},"nodeType":"YulExpressionStatement","src":"1652:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:13"},{"body":{"nodeType":"YulBlock","src":"1721:81:13","statements":[{"nodeType":"YulAssignment","src":"1731:65:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:13"},"nodeType":"YulFunctionCall","src":"1742:54:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:13"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:13","type":""}],"src":"1676:126:13"},{"body":{"nodeType":"YulBlock","src":"1853:51:13","statements":[{"nodeType":"YulAssignment","src":"1863:35:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:13"},"nodeType":"YulFunctionCall","src":"1874:24:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:13"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:13","type":""}],"src":"1808:96:13"},{"body":{"nodeType":"YulBlock","src":"1953:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:13"},"nodeType":"YulFunctionCall","src":"2012:12:13"},"nodeType":"YulExpressionStatement","src":"2012:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:13"},"nodeType":"YulFunctionCall","src":"1983:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:13"},"nodeType":"YulFunctionCall","src":"1973:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:13"},"nodeType":"YulFunctionCall","src":"1966:43:13"},"nodeType":"YulIf","src":"1963:63:13"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:13","type":""}],"src":"1910:122:13"},{"body":{"nodeType":"YulBlock","src":"2090:87:13","statements":[{"nodeType":"YulAssignment","src":"2100:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:13"},"nodeType":"YulFunctionCall","src":"2109:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:13"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:13"},"nodeType":"YulFunctionCall","src":"2138:33:13"},"nodeType":"YulExpressionStatement","src":"2138:33:13"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:13","type":""}],"src":"2038:139:13"},{"body":{"nodeType":"YulBlock","src":"2228:32:13","statements":[{"nodeType":"YulAssignment","src":"2238:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:13"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:13","type":""}],"src":"2183:77:13"},{"body":{"nodeType":"YulBlock","src":"2309:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:13"},"nodeType":"YulFunctionCall","src":"2368:12:13"},"nodeType":"YulExpressionStatement","src":"2368:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:13"},"nodeType":"YulFunctionCall","src":"2339:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:13"},"nodeType":"YulFunctionCall","src":"2329:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:13"},"nodeType":"YulFunctionCall","src":"2322:43:13"},"nodeType":"YulIf","src":"2319:63:13"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:13","type":""}],"src":"2266:122:13"},{"body":{"nodeType":"YulBlock","src":"2446:87:13","statements":[{"nodeType":"YulAssignment","src":"2456:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:13"},"nodeType":"YulFunctionCall","src":"2465:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:13"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:13"},"nodeType":"YulFunctionCall","src":"2494:33:13"},"nodeType":"YulExpressionStatement","src":"2494:33:13"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:13","type":""}],"src":"2394:139:13"},{"body":{"nodeType":"YulBlock","src":"2622:391:13","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:13"},"nodeType":"YulFunctionCall","src":"2670:79:13"},"nodeType":"YulExpressionStatement","src":"2670:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:13"},"nodeType":"YulFunctionCall","src":"2639:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:13"},"nodeType":"YulFunctionCall","src":"2635:32:13"},"nodeType":"YulIf","src":"2632:119:13"},{"nodeType":"YulBlock","src":"2761:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:13"},"nodeType":"YulFunctionCall","src":"2836:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:13"},"nodeType":"YulFunctionCall","src":"2815:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:13"}]}]},{"nodeType":"YulBlock","src":"2888:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:13"},"nodeType":"YulFunctionCall","src":"2964:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:13"},"nodeType":"YulFunctionCall","src":"2943:53:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:13","type":""}],"src":"2539:474:13"},{"body":{"nodeType":"YulBlock","src":"3061:48:13","statements":[{"nodeType":"YulAssignment","src":"3071:32:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:13"},"nodeType":"YulFunctionCall","src":"3089:13:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:13"},"nodeType":"YulFunctionCall","src":"3082:21:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:13"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:13","type":""}],"src":"3019:90:13"},{"body":{"nodeType":"YulBlock","src":"3174:50:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:13"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:13"},"nodeType":"YulFunctionCall","src":"3196:21:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:13"},"nodeType":"YulFunctionCall","src":"3184:34:13"},"nodeType":"YulExpressionStatement","src":"3184:34:13"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:13","type":""}],"src":"3115:109:13"},{"body":{"nodeType":"YulBlock","src":"3322:118:13","statements":[{"nodeType":"YulAssignment","src":"3332:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:13"},"nodeType":"YulFunctionCall","src":"3340:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:13"},"nodeType":"YulFunctionCall","src":"3415:17:13"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:13"},"nodeType":"YulFunctionCall","src":"3368:65:13"},"nodeType":"YulExpressionStatement","src":"3368:65:13"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:13","type":""}],"src":"3230:210:13"},{"body":{"nodeType":"YulBlock","src":"3511:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:13"},"nodeType":"YulFunctionCall","src":"3533:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:13"},"nodeType":"YulFunctionCall","src":"3521:37:13"},"nodeType":"YulExpressionStatement","src":"3521:37:13"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:13","type":""}],"src":"3446:118:13"},{"body":{"nodeType":"YulBlock","src":"3668:124:13","statements":[{"nodeType":"YulAssignment","src":"3678:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:13"},"nodeType":"YulFunctionCall","src":"3686:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:13"},"nodeType":"YulFunctionCall","src":"3767:17:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:13"},"nodeType":"YulFunctionCall","src":"3714:71:13"},"nodeType":"YulExpressionStatement","src":"3714:71:13"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:13","type":""}],"src":"3570:222:13"},{"body":{"nodeType":"YulBlock","src":"3898:519:13","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:13"},"nodeType":"YulFunctionCall","src":"3946:79:13"},"nodeType":"YulExpressionStatement","src":"3946:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:13"},"nodeType":"YulFunctionCall","src":"3915:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:13","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:13"},"nodeType":"YulFunctionCall","src":"3911:32:13"},"nodeType":"YulIf","src":"3908:119:13"},{"nodeType":"YulBlock","src":"4037:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:13","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:13"},"nodeType":"YulFunctionCall","src":"4112:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:13"},"nodeType":"YulFunctionCall","src":"4091:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:13"}]}]},{"nodeType":"YulBlock","src":"4164:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:13","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:13"},"nodeType":"YulFunctionCall","src":"4240:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:13"},"nodeType":"YulFunctionCall","src":"4219:53:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:13"}]}]},{"nodeType":"YulBlock","src":"4292:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:13","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:13","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:13"},"nodeType":"YulFunctionCall","src":"4368:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:13"},"nodeType":"YulFunctionCall","src":"4347:53:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:13","type":""}],"src":"3798:619:13"},{"body":{"nodeType":"YulBlock","src":"4466:43:13","statements":[{"nodeType":"YulAssignment","src":"4476:27:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:13","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:13"},"nodeType":"YulFunctionCall","src":"4487:16:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:13"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:13","type":""}],"src":"4423:86:13"},{"body":{"nodeType":"YulBlock","src":"4576:51:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:13"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:13"},"nodeType":"YulFunctionCall","src":"4598:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:13"},"nodeType":"YulFunctionCall","src":"4586:35:13"},"nodeType":"YulExpressionStatement","src":"4586:35:13"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:13","type":""}],"src":"4515:112:13"},{"body":{"nodeType":"YulBlock","src":"4727:120:13","statements":[{"nodeType":"YulAssignment","src":"4737:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:13"},"nodeType":"YulFunctionCall","src":"4745:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:13"},"nodeType":"YulFunctionCall","src":"4822:17:13"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:13"},"nodeType":"YulFunctionCall","src":"4773:67:13"},"nodeType":"YulExpressionStatement","src":"4773:67:13"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:13","type":""}],"src":"4633:214:13"},{"body":{"nodeType":"YulBlock","src":"4919:263:13","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:13"},"nodeType":"YulFunctionCall","src":"4967:79:13"},"nodeType":"YulExpressionStatement","src":"4967:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:13"},"nodeType":"YulFunctionCall","src":"4936:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:13"},"nodeType":"YulFunctionCall","src":"4932:32:13"},"nodeType":"YulIf","src":"4929:119:13"},{"nodeType":"YulBlock","src":"5058:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:13","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:13"},"nodeType":"YulFunctionCall","src":"5133:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:13"},"nodeType":"YulFunctionCall","src":"5112:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:13"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:13","type":""}],"src":"4853:329:13"},{"body":{"nodeType":"YulBlock","src":"5271:391:13","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:13"},"nodeType":"YulFunctionCall","src":"5319:79:13"},"nodeType":"YulExpressionStatement","src":"5319:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:13"},"nodeType":"YulFunctionCall","src":"5288:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:13"},"nodeType":"YulFunctionCall","src":"5284:32:13"},"nodeType":"YulIf","src":"5281:119:13"},{"nodeType":"YulBlock","src":"5410:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:13","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:13"},"nodeType":"YulFunctionCall","src":"5485:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:13"},"nodeType":"YulFunctionCall","src":"5464:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:13"}]}]},{"nodeType":"YulBlock","src":"5537:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:13","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:13"},"nodeType":"YulFunctionCall","src":"5613:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:13"},"nodeType":"YulFunctionCall","src":"5592:53:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:13","type":""}],"src":"5188:474:13"},{"body":{"nodeType":"YulBlock","src":"5696:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:13"},"nodeType":"YulFunctionCall","src":"5706:88:13"},"nodeType":"YulExpressionStatement","src":"5706:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:13","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:13"},"nodeType":"YulFunctionCall","src":"5803:15:13"},"nodeType":"YulExpressionStatement","src":"5803:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:13"},"nodeType":"YulFunctionCall","src":"5827:15:13"},"nodeType":"YulExpressionStatement","src":"5827:15:13"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:13"},{"body":{"nodeType":"YulBlock","src":"5905:269:13","statements":[{"nodeType":"YulAssignment","src":"5915:22:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:13","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:13"},"nodeType":"YulFunctionCall","src":"5925:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:13","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:13"},"nodeType":"YulFunctionCall","src":"5972:12:13"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:13","statements":[{"nodeType":"YulAssignment","src":"6037:27:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:13","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:13"},"nodeType":"YulFunctionCall","src":"6047:17:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:13"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:13"},"nodeType":"YulFunctionCall","src":"5996:26:13"},"nodeType":"YulIf","src":"5993:81:13"},{"body":{"nodeType":"YulBlock","src":"6126:42:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:13"},"nodeType":"YulFunctionCall","src":"6140:18:13"},"nodeType":"YulExpressionStatement","src":"6140:18:13"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:13","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:13"},"nodeType":"YulFunctionCall","src":"6110:14:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:13"},"nodeType":"YulFunctionCall","src":"6087:38:13"},"nodeType":"YulIf","src":"6084:84:13"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:13","type":""}],"src":"5854:320:13"},{"body":{"nodeType":"YulBlock","src":"6208:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6225:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6228:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6218:6:13"},"nodeType":"YulFunctionCall","src":"6218:88:13"},"nodeType":"YulExpressionStatement","src":"6218:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6322:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6325:4:13","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:13"},"nodeType":"YulFunctionCall","src":"6315:15:13"},"nodeType":"YulExpressionStatement","src":"6315:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6346:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6349:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6339:6:13"},"nodeType":"YulFunctionCall","src":"6339:15:13"},"nodeType":"YulExpressionStatement","src":"6339:15:13"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6180:180:13"},{"body":{"nodeType":"YulBlock","src":"6410:147:13","statements":[{"nodeType":"YulAssignment","src":"6420:25:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6443:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6425:17:13"},"nodeType":"YulFunctionCall","src":"6425:20:13"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6420:1:13"}]},{"nodeType":"YulAssignment","src":"6454:25:13","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6477:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6459:17:13"},"nodeType":"YulFunctionCall","src":"6459:20:13"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6454:1:13"}]},{"nodeType":"YulAssignment","src":"6488:16:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6499:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"6502:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:13"},"nodeType":"YulFunctionCall","src":"6495:9:13"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6488:3:13"}]},{"body":{"nodeType":"YulBlock","src":"6528:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6530:16:13"},"nodeType":"YulFunctionCall","src":"6530:18:13"},"nodeType":"YulExpressionStatement","src":"6530:18:13"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6520:1:13"},{"name":"sum","nodeType":"YulIdentifier","src":"6523:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6517:2:13"},"nodeType":"YulFunctionCall","src":"6517:10:13"},"nodeType":"YulIf","src":"6514:36:13"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6397:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"6400:1:13","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6406:3:13","type":""}],"src":"6366:191:13"},{"body":{"nodeType":"YulBlock","src":"6669:118:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6691:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"6699:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6687:3:13"},"nodeType":"YulFunctionCall","src":"6687:14:13"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6703:34:13","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6680:6:13"},"nodeType":"YulFunctionCall","src":"6680:58:13"},"nodeType":"YulExpressionStatement","src":"6680:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6759:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"6767:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6755:3:13"},"nodeType":"YulFunctionCall","src":"6755:15:13"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6772:7:13","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6748:6:13"},"nodeType":"YulFunctionCall","src":"6748:32:13"},"nodeType":"YulExpressionStatement","src":"6748:32:13"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:13","type":""}],"src":"6563:224:13"},{"body":{"nodeType":"YulBlock","src":"6939:220:13","statements":[{"nodeType":"YulAssignment","src":"6949:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7015:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:13","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6956:58:13"},"nodeType":"YulFunctionCall","src":"6956:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6949:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:13"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7032:88:13"},"nodeType":"YulFunctionCall","src":"7032:93:13"},"nodeType":"YulExpressionStatement","src":"7032:93:13"},{"nodeType":"YulAssignment","src":"7134:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7145:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"7150:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:13"},"nodeType":"YulFunctionCall","src":"7141:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7134:3:13"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6927:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6935:3:13","type":""}],"src":"6793:366:13"},{"body":{"nodeType":"YulBlock","src":"7336:248:13","statements":[{"nodeType":"YulAssignment","src":"7346:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7358:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7369:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7354:3:13"},"nodeType":"YulFunctionCall","src":"7354:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7346:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7404:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:13"},"nodeType":"YulFunctionCall","src":"7389:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7412:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"7418:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7408:3:13"},"nodeType":"YulFunctionCall","src":"7408:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7382:6:13"},"nodeType":"YulFunctionCall","src":"7382:47:13"},"nodeType":"YulExpressionStatement","src":"7382:47:13"},{"nodeType":"YulAssignment","src":"7438:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7572:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7446:124:13"},"nodeType":"YulFunctionCall","src":"7446:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7438:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7316:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7331:4:13","type":""}],"src":"7165:419:13"},{"body":{"nodeType":"YulBlock","src":"7696:117:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7718:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7726:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:13"},"nodeType":"YulFunctionCall","src":"7714:14:13"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7730:34:13","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:13"},"nodeType":"YulFunctionCall","src":"7707:58:13"},"nodeType":"YulExpressionStatement","src":"7707:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7786:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:13"},"nodeType":"YulFunctionCall","src":"7782:15:13"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7799:6:13","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7775:6:13"},"nodeType":"YulFunctionCall","src":"7775:31:13"},"nodeType":"YulExpressionStatement","src":"7775:31:13"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7688:6:13","type":""}],"src":"7590:223:13"},{"body":{"nodeType":"YulBlock","src":"7965:220:13","statements":[{"nodeType":"YulAssignment","src":"7975:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:13","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7982:58:13"},"nodeType":"YulFunctionCall","src":"7982:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7975:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8147:3:13"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8058:88:13"},"nodeType":"YulFunctionCall","src":"8058:93:13"},"nodeType":"YulExpressionStatement","src":"8058:93:13"},{"nodeType":"YulAssignment","src":"8160:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8171:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"8176:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:13"},"nodeType":"YulFunctionCall","src":"8167:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8160:3:13"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7953:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7961:3:13","type":""}],"src":"7819:366:13"},{"body":{"nodeType":"YulBlock","src":"8362:248:13","statements":[{"nodeType":"YulAssignment","src":"8372:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8395:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:13"},"nodeType":"YulFunctionCall","src":"8380:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8430:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:13"},"nodeType":"YulFunctionCall","src":"8415:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8438:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8434:3:13"},"nodeType":"YulFunctionCall","src":"8434:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8408:6:13"},"nodeType":"YulFunctionCall","src":"8408:47:13"},"nodeType":"YulExpressionStatement","src":"8408:47:13"},{"nodeType":"YulAssignment","src":"8464:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8598:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8472:124:13"},"nodeType":"YulFunctionCall","src":"8472:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8464:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8342:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8357:4:13","type":""}],"src":"8191:419:13"},{"body":{"nodeType":"YulBlock","src":"8722:115:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8744:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8752:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8740:3:13"},"nodeType":"YulFunctionCall","src":"8740:14:13"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8756:34:13","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8733:6:13"},"nodeType":"YulFunctionCall","src":"8733:58:13"},"nodeType":"YulExpressionStatement","src":"8733:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8812:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8820:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:13"},"nodeType":"YulFunctionCall","src":"8808:15:13"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8825:4:13","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8801:6:13"},"nodeType":"YulFunctionCall","src":"8801:29:13"},"nodeType":"YulExpressionStatement","src":"8801:29:13"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8714:6:13","type":""}],"src":"8616:221:13"},{"body":{"nodeType":"YulBlock","src":"8989:220:13","statements":[{"nodeType":"YulAssignment","src":"8999:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"9070:2:13","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9006:58:13"},"nodeType":"YulFunctionCall","src":"9006:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8999:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9171:3:13"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9082:88:13"},"nodeType":"YulFunctionCall","src":"9082:93:13"},"nodeType":"YulExpressionStatement","src":"9082:93:13"},{"nodeType":"YulAssignment","src":"9184:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9195:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:13"},"nodeType":"YulFunctionCall","src":"9191:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9184:3:13"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8977:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8985:3:13","type":""}],"src":"8843:366:13"},{"body":{"nodeType":"YulBlock","src":"9386:248:13","statements":[{"nodeType":"YulAssignment","src":"9396:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9408:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9419:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9404:3:13"},"nodeType":"YulFunctionCall","src":"9404:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9396:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9454:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:13"},"nodeType":"YulFunctionCall","src":"9439:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9462:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9458:3:13"},"nodeType":"YulFunctionCall","src":"9458:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:13"},"nodeType":"YulFunctionCall","src":"9432:47:13"},"nodeType":"YulExpressionStatement","src":"9432:47:13"},{"nodeType":"YulAssignment","src":"9488:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9622:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9496:124:13"},"nodeType":"YulFunctionCall","src":"9496:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9488:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9366:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9381:4:13","type":""}],"src":"9215:419:13"},{"body":{"nodeType":"YulBlock","src":"9746:73:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9768:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"9776:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9764:3:13"},"nodeType":"YulFunctionCall","src":"9764:14:13"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9780:31:13","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9757:6:13"},"nodeType":"YulFunctionCall","src":"9757:55:13"},"nodeType":"YulExpressionStatement","src":"9757:55:13"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9738:6:13","type":""}],"src":"9640:179:13"},{"body":{"nodeType":"YulBlock","src":"9971:220:13","statements":[{"nodeType":"YulAssignment","src":"9981:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"10052:2:13","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9988:58:13"},"nodeType":"YulFunctionCall","src":"9988:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9981:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10153:3:13"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10064:88:13"},"nodeType":"YulFunctionCall","src":"10064:93:13"},"nodeType":"YulExpressionStatement","src":"10064:93:13"},{"nodeType":"YulAssignment","src":"10166:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10177:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"10182:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:13"},"nodeType":"YulFunctionCall","src":"10173:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10166:3:13"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9959:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9967:3:13","type":""}],"src":"9825:366:13"},{"body":{"nodeType":"YulBlock","src":"10368:248:13","statements":[{"nodeType":"YulAssignment","src":"10378:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10390:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10401:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10386:3:13"},"nodeType":"YulFunctionCall","src":"10386:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10378:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10425:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10436:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10421:3:13"},"nodeType":"YulFunctionCall","src":"10421:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10444:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"10450:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10440:3:13"},"nodeType":"YulFunctionCall","src":"10440:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:13"},"nodeType":"YulFunctionCall","src":"10414:47:13"},"nodeType":"YulExpressionStatement","src":"10414:47:13"},{"nodeType":"YulAssignment","src":"10470:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10604:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10478:124:13"},"nodeType":"YulFunctionCall","src":"10478:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10470:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10348:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10363:4:13","type":""}],"src":"10197:419:13"},{"body":{"nodeType":"YulBlock","src":"10728:118:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10750:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10746:3:13"},"nodeType":"YulFunctionCall","src":"10746:14:13"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10762:34:13","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10739:6:13"},"nodeType":"YulFunctionCall","src":"10739:58:13"},"nodeType":"YulExpressionStatement","src":"10739:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10818:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"10826:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10814:3:13"},"nodeType":"YulFunctionCall","src":"10814:15:13"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10831:7:13","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10807:6:13"},"nodeType":"YulFunctionCall","src":"10807:32:13"},"nodeType":"YulExpressionStatement","src":"10807:32:13"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10720:6:13","type":""}],"src":"10622:224:13"},{"body":{"nodeType":"YulBlock","src":"10998:220:13","statements":[{"nodeType":"YulAssignment","src":"11008:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11074:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"11079:2:13","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11015:58:13"},"nodeType":"YulFunctionCall","src":"11015:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11008:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11180:3:13"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11091:88:13"},"nodeType":"YulFunctionCall","src":"11091:93:13"},"nodeType":"YulExpressionStatement","src":"11091:93:13"},{"nodeType":"YulAssignment","src":"11193:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11204:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"11209:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11200:3:13"},"nodeType":"YulFunctionCall","src":"11200:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11193:3:13"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10986:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10994:3:13","type":""}],"src":"10852:366:13"},{"body":{"nodeType":"YulBlock","src":"11395:248:13","statements":[{"nodeType":"YulAssignment","src":"11405:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:13"},"nodeType":"YulFunctionCall","src":"11413:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11405:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11452:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:13"},"nodeType":"YulFunctionCall","src":"11448:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11471:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11467:3:13"},"nodeType":"YulFunctionCall","src":"11467:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11441:6:13"},"nodeType":"YulFunctionCall","src":"11441:47:13"},"nodeType":"YulExpressionStatement","src":"11441:47:13"},{"nodeType":"YulAssignment","src":"11497:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11631:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11505:124:13"},"nodeType":"YulFunctionCall","src":"11505:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11497:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11375:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11390:4:13","type":""}],"src":"11224:419:13"},{"body":{"nodeType":"YulBlock","src":"11755:116:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11777:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"11785:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:13"},"nodeType":"YulFunctionCall","src":"11773:14:13"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11789:34:13","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11766:6:13"},"nodeType":"YulFunctionCall","src":"11766:58:13"},"nodeType":"YulExpressionStatement","src":"11766:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11845:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11841:3:13"},"nodeType":"YulFunctionCall","src":"11841:15:13"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"11858:5:13","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11834:6:13"},"nodeType":"YulFunctionCall","src":"11834:30:13"},"nodeType":"YulExpressionStatement","src":"11834:30:13"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11747:6:13","type":""}],"src":"11649:222:13"},{"body":{"nodeType":"YulBlock","src":"12023:220:13","statements":[{"nodeType":"YulAssignment","src":"12033:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12099:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"12104:2:13","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12040:58:13"},"nodeType":"YulFunctionCall","src":"12040:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12205:3:13"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12116:88:13"},"nodeType":"YulFunctionCall","src":"12116:93:13"},"nodeType":"YulExpressionStatement","src":"12116:93:13"},{"nodeType":"YulAssignment","src":"12218:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12229:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"12234:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12225:3:13"},"nodeType":"YulFunctionCall","src":"12225:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12218:3:13"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12011:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12019:3:13","type":""}],"src":"11877:366:13"},{"body":{"nodeType":"YulBlock","src":"12420:248:13","statements":[{"nodeType":"YulAssignment","src":"12430:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:13"},"nodeType":"YulFunctionCall","src":"12438:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12488:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:13"},"nodeType":"YulFunctionCall","src":"12473:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12492:3:13"},"nodeType":"YulFunctionCall","src":"12492:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12466:6:13"},"nodeType":"YulFunctionCall","src":"12466:47:13"},"nodeType":"YulExpressionStatement","src":"12466:47:13"},{"nodeType":"YulAssignment","src":"12522:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12656:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12530:124:13"},"nodeType":"YulFunctionCall","src":"12530:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12522:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12400:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12415:4:13","type":""}],"src":"12249:419:13"},{"body":{"nodeType":"YulBlock","src":"12780:119:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12802:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"12810:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:13"},"nodeType":"YulFunctionCall","src":"12798:14:13"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12814:34:13","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12791:6:13"},"nodeType":"YulFunctionCall","src":"12791:58:13"},"nodeType":"YulExpressionStatement","src":"12791:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12870:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"12878:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12866:3:13"},"nodeType":"YulFunctionCall","src":"12866:15:13"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12883:8:13","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12859:6:13"},"nodeType":"YulFunctionCall","src":"12859:33:13"},"nodeType":"YulExpressionStatement","src":"12859:33:13"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12772:6:13","type":""}],"src":"12674:225:13"},{"body":{"nodeType":"YulBlock","src":"13051:220:13","statements":[{"nodeType":"YulAssignment","src":"13061:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13127:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"13132:2:13","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13068:58:13"},"nodeType":"YulFunctionCall","src":"13068:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13233:3:13"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13144:88:13"},"nodeType":"YulFunctionCall","src":"13144:93:13"},"nodeType":"YulExpressionStatement","src":"13144:93:13"},{"nodeType":"YulAssignment","src":"13246:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13257:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:13"},"nodeType":"YulFunctionCall","src":"13253:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13246:3:13"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13039:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13047:3:13","type":""}],"src":"12905:366:13"},{"body":{"nodeType":"YulBlock","src":"13448:248:13","statements":[{"nodeType":"YulAssignment","src":"13458:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:13"},"nodeType":"YulFunctionCall","src":"13466:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13458:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13505:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13516:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13501:3:13"},"nodeType":"YulFunctionCall","src":"13501:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13524:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"13530:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13520:3:13"},"nodeType":"YulFunctionCall","src":"13520:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:13"},"nodeType":"YulFunctionCall","src":"13494:47:13"},"nodeType":"YulExpressionStatement","src":"13494:47:13"},{"nodeType":"YulAssignment","src":"13550:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13684:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13558:124:13"},"nodeType":"YulFunctionCall","src":"13558:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13550:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13428:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13443:4:13","type":""}],"src":"13277:419:13"},{"body":{"nodeType":"YulBlock","src":"13808:75:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13830:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"13838:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13826:3:13"},"nodeType":"YulFunctionCall","src":"13826:14:13"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"13842:33:13","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13819:6:13"},"nodeType":"YulFunctionCall","src":"13819:57:13"},"nodeType":"YulExpressionStatement","src":"13819:57:13"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13800:6:13","type":""}],"src":"13702:181:13"},{"body":{"nodeType":"YulBlock","src":"14035:220:13","statements":[{"nodeType":"YulAssignment","src":"14045:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14111:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"14116:2:13","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14052:58:13"},"nodeType":"YulFunctionCall","src":"14052:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14045:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14217:3:13"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"14128:88:13"},"nodeType":"YulFunctionCall","src":"14128:93:13"},"nodeType":"YulExpressionStatement","src":"14128:93:13"},{"nodeType":"YulAssignment","src":"14230:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14241:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"14246:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14237:3:13"},"nodeType":"YulFunctionCall","src":"14237:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14230:3:13"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14023:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14031:3:13","type":""}],"src":"13889:366:13"},{"body":{"nodeType":"YulBlock","src":"14432:248:13","statements":[{"nodeType":"YulAssignment","src":"14442:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14454:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14465:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14450:3:13"},"nodeType":"YulFunctionCall","src":"14450:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14442:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14489:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14500:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14485:3:13"},"nodeType":"YulFunctionCall","src":"14485:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14508:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"14514:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14504:3:13"},"nodeType":"YulFunctionCall","src":"14504:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14478:6:13"},"nodeType":"YulFunctionCall","src":"14478:47:13"},"nodeType":"YulExpressionStatement","src":"14478:47:13"},{"nodeType":"YulAssignment","src":"14534:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14668:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14542:124:13"},"nodeType":"YulFunctionCall","src":"14542:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14534:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14412:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14427:4:13","type":""}],"src":"14261:419:13"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100b45760003560e01c80633950935111610071578063395093511461018f57806370a08231146101bf57806395d89b41146101ef578063a457c2d71461020d578063a9059cbb1461023d578063dd62ed3e1461026d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd146101255780632daf865d14610155578063313ce56714610171575b600080fd5b6100c161029d565b6040516100ce9190610ca9565b60405180910390f35b6100f160048036038101906100ec9190610d64565b61032f565b6040516100fe9190610dbf565b60405180910390f35b61010f610352565b60405161011c9190610de9565b60405180910390f35b61013f600480360381019061013a9190610e04565b61035c565b60405161014c9190610dbf565b60405180910390f35b61016f600480360381019061016a9190610d64565b61038b565b005b610179610399565b6040516101869190610e73565b60405180910390f35b6101a960048036038101906101a49190610d64565b6103a2565b6040516101b69190610dbf565b60405180910390f35b6101d960048036038101906101d49190610e8e565b6103d9565b6040516101e69190610de9565b60405180910390f35b6101f7610421565b6040516102049190610ca9565b60405180910390f35b61022760048036038101906102229190610d64565b6104b3565b6040516102349190610dbf565b60405180910390f35b61025760048036038101906102529190610d64565b61052a565b6040516102649190610dbf565b60405180910390f35b61028760048036038101906102829190610ebb565b61054d565b6040516102949190610de9565b60405180910390f35b6060600380546102ac90610f2a565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890610f2a565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b60008061033a6105d4565b90506103478185856105dc565b600191505092915050565b6000600254905090565b6000806103676105d4565b90506103748582856107a5565b61037f858585610831565b60019150509392505050565b6103958282610ab0565b5050565b60006012905090565b6000806103ad6105d4565b90506103ce8185856103bf858961054d565b6103c99190610f8a565b6105dc565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461043090610f2a565b80601f016020809104026020016040519081016040528092919081815260200182805461045c90610f2a565b80156104a95780601f1061047e576101008083540402835291602001916104a9565b820191906000526020600020905b81548152906001019060200180831161048c57829003601f168201915b5050505050905090565b6000806104be6105d4565b905060006104cc828661054d565b905083811015610511576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050890611030565b60405180910390fd5b61051e82868684036105dc565b60019250505092915050565b6000806105356105d4565b9050610542818585610831565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361064b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610642906110c2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b190611154565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107989190610de9565b60405180910390a3505050565b60006107b1848461054d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461082b578181101561081d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610814906111c0565b60405180910390fd5b61082a84848484036105dc565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089790611252565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361090f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610906906112e4565b60405180910390fd5b61091a838383610c0f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156109a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099790611376565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a339190610f8a565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a979190610de9565b60405180910390a3610aaa848484610c14565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b16906113e2565b60405180910390fd5b610b2b60008383610c0f565b8060026000828254610b3d9190610f8a565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b929190610f8a565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610bf79190610de9565b60405180910390a3610c0b60008383610c14565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c53578082015181840152602081019050610c38565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c7b82610c19565b610c858185610c24565b9350610c95818560208601610c35565b610c9e81610c5f565b840191505092915050565b60006020820190508181036000830152610cc38184610c70565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cfb82610cd0565b9050919050565b610d0b81610cf0565b8114610d1657600080fd5b50565b600081359050610d2881610d02565b92915050565b6000819050919050565b610d4181610d2e565b8114610d4c57600080fd5b50565b600081359050610d5e81610d38565b92915050565b60008060408385031215610d7b57610d7a610ccb565b5b6000610d8985828601610d19565b9250506020610d9a85828601610d4f565b9150509250929050565b60008115159050919050565b610db981610da4565b82525050565b6000602082019050610dd46000830184610db0565b92915050565b610de381610d2e565b82525050565b6000602082019050610dfe6000830184610dda565b92915050565b600080600060608486031215610e1d57610e1c610ccb565b5b6000610e2b86828701610d19565b9350506020610e3c86828701610d19565b9250506040610e4d86828701610d4f565b9150509250925092565b600060ff82169050919050565b610e6d81610e57565b82525050565b6000602082019050610e886000830184610e64565b92915050565b600060208284031215610ea457610ea3610ccb565b5b6000610eb284828501610d19565b91505092915050565b60008060408385031215610ed257610ed1610ccb565b5b6000610ee085828601610d19565b9250506020610ef185828601610d19565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f4257607f821691505b602082108103610f5557610f54610efb565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f9582610d2e565b9150610fa083610d2e565b9250828201905080821115610fb857610fb7610f5b565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061101a602583610c24565b915061102582610fbe565b604082019050919050565b600060208201905081810360008301526110498161100d565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006110ac602483610c24565b91506110b782611050565b604082019050919050565b600060208201905081810360008301526110db8161109f565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061113e602283610c24565b9150611149826110e2565b604082019050919050565b6000602082019050818103600083015261116d81611131565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006111aa601d83610c24565b91506111b582611174565b602082019050919050565b600060208201905081810360008301526111d98161119d565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061123c602583610c24565b9150611247826111e0565b604082019050919050565b6000602082019050818103600083015261126b8161122f565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006112ce602383610c24565b91506112d982611272565b604082019050919050565b600060208201905081810360008301526112fd816112c1565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611360602683610c24565b915061136b82611304565b604082019050919050565b6000602082019050818103600083015261138f81611353565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006113cc601f83610c24565b91506113d782611396565b602082019050919050565b600060208201905081810360008301526113fb816113bf565b905091905056fea2646970667358221220b6dd4c34e597318db74b4d39ad3a841b14117b972ede764f2018b879f428b31364736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x26D JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x2DAF865D EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xE04 JUMP JUMPDEST PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16A SWAP2 SWAP1 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x179 PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0xE73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0xE8E JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0xEBB JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xF2A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0xF2A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x325 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x325 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x308 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x33A PUSH2 0x5D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x347 DUP2 DUP6 DUP6 PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x367 PUSH2 0x5D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x374 DUP6 DUP3 DUP6 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x37F DUP6 DUP6 DUP6 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x395 DUP3 DUP3 PUSH2 0xAB0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3AD PUSH2 0x5D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x3CE DUP2 DUP6 DUP6 PUSH2 0x3BF DUP6 DUP10 PUSH2 0x54D JUMP JUMPDEST PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x430 SWAP1 PUSH2 0xF2A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x45C SWAP1 PUSH2 0xF2A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x48C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4BE PUSH2 0x5D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4CC DUP3 DUP7 PUSH2 0x54D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x511 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x508 SWAP1 PUSH2 0x1030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x51E DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x535 PUSH2 0x5D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x542 DUP2 DUP6 DUP6 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x64B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x10C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x798 SWAP2 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 DUP5 DUP5 PUSH2 0x54D JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x82B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x81D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x814 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x82A DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5DC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x897 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x90F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x906 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x91A DUP4 DUP4 DUP4 PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x9A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x997 SWAP1 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA33 SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA97 SWAP2 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xAAA DUP5 DUP5 DUP5 PUSH2 0xC14 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB16 SWAP1 PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB2B PUSH1 0x0 DUP4 DUP4 PUSH2 0xC0F JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB92 SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xBF7 SWAP2 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xC0B PUSH1 0x0 DUP4 DUP4 PUSH2 0xC14 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC53 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC38 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7B DUP3 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0xC85 DUP2 DUP6 PUSH2 0xC24 JUMP JUMPDEST SWAP4 POP PUSH2 0xC95 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC35 JUMP JUMPDEST PUSH2 0xC9E DUP2 PUSH2 0xC5F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCC3 DUP2 DUP5 PUSH2 0xC70 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCFB DUP3 PUSH2 0xCD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD0B DUP2 PUSH2 0xCF0 JUMP JUMPDEST DUP2 EQ PUSH2 0xD16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD28 DUP2 PUSH2 0xD02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD41 DUP2 PUSH2 0xD2E JUMP JUMPDEST DUP2 EQ PUSH2 0xD4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD5E DUP2 PUSH2 0xD38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD7B JUMPI PUSH2 0xD7A PUSH2 0xCCB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD89 DUP6 DUP3 DUP7 ADD PUSH2 0xD19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD9A DUP6 DUP3 DUP7 ADD PUSH2 0xD4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB9 DUP2 PUSH2 0xDA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDD4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDE3 DUP2 PUSH2 0xD2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDFE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE1D JUMPI PUSH2 0xE1C PUSH2 0xCCB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE2B DUP7 DUP3 DUP8 ADD PUSH2 0xD19 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE3C DUP7 DUP3 DUP8 ADD PUSH2 0xD19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE4D DUP7 DUP3 DUP8 ADD PUSH2 0xD4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE6D DUP2 PUSH2 0xE57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA4 JUMPI PUSH2 0xEA3 PUSH2 0xCCB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEB2 DUP5 DUP3 DUP6 ADD PUSH2 0xD19 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED2 JUMPI PUSH2 0xED1 PUSH2 0xCCB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEE0 DUP6 DUP3 DUP7 ADD PUSH2 0xD19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEF1 DUP6 DUP3 DUP7 ADD PUSH2 0xD19 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF42 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF55 JUMPI PUSH2 0xF54 PUSH2 0xEFB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF95 DUP3 PUSH2 0xD2E JUMP JUMPDEST SWAP2 POP PUSH2 0xFA0 DUP4 PUSH2 0xD2E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xFB8 JUMPI PUSH2 0xFB7 PUSH2 0xF5B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x101A PUSH1 0x25 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x1025 DUP3 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1049 DUP2 PUSH2 0x100D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10AC PUSH1 0x24 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x10B7 DUP3 PUSH2 0x1050 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10DB DUP2 PUSH2 0x109F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113E PUSH1 0x22 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x1149 DUP3 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x116D DUP2 PUSH2 0x1131 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AA PUSH1 0x1D DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x11B5 DUP3 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11D9 DUP2 PUSH2 0x119D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123C PUSH1 0x25 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x1247 DUP3 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x126B DUP2 PUSH2 0x122F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12CE PUSH1 0x23 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x12D9 DUP3 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12FD DUP2 PUSH2 0x12C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1360 PUSH1 0x26 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x136B DUP3 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x138F DUP2 PUSH2 0x1353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13CC PUSH1 0x1F DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x13D7 DUP3 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13FB DUP2 PUSH2 0x13BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0xDD 0x4C CALLVALUE 0xE5 SWAP8 BALANCE DUP14 0xB7 0x4B 0x4D CODECOPY 0xAD GASPRICE DUP5 SHL EQ GT PUSH28 0x972EDE764F2018B879F428B31364736F6C6343000811003300000000 ","sourceMap":"122:339:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5192:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;341:117:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3093:91:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5873:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3408:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2367:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6594:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3729:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3976:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2156:98;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;4532:13;4548:12;:10;:12::i;:::-;4532:28;;4570:32;4579:5;4586:7;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;:::o;3244:106::-;3305:7;3331:12;;3324:19;;3244:106;:::o;5192:286::-;5319:4;5335:15;5353:12;:10;:12::i;:::-;5335:30;;5375:38;5391:4;5397:7;5406:6;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;5467:4;5460:11;;;5192:286;;;;;:::o;341:117:8:-;419:31;425:16;443:6;419:5;:31::i;:::-;341:117;;:::o;3093:91:4:-;3151:5;3175:2;3168:9;;3093:91;:::o;5873:234::-;5961:4;5977:13;5993:12;:10;:12::i;:::-;5977:28;;6015:64;6024:5;6031:7;6068:10;6040:25;6050:5;6057:7;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;:::-;6096:4;6089:11;;;5873:234;;;;:::o;3408:125::-;3482:7;3508:9;:18;3518:7;3508:18;;;;;;;;;;;;;;;;3501:25;;3408:125;;;:::o;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2367:102;:::o;6594:427::-;6687:4;6703:13;6719:12;:10;:12::i;:::-;6703:28;;6741:24;6768:25;6778:5;6785:7;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;:::-;7010:4;7003:11;;;;6594:427;;;;:::o;3729:189::-;3808:4;3824:13;3840:12;:10;:12::i;:::-;3824:28;;3862;3872:5;3879:2;3883:6;3862:9;:28::i;:::-;3907:4;3900:11;;;3729:189;;;;:::o;3976:149::-;4065:7;4091:11;:18;4103:5;4091:18;;;;;;;;;;;;;;;:27;4110:7;4091:27;;;;;;;;;;;;;;;;4084:34;;3976:149;;;;:::o;640:96:7:-;693:7;719:10;712:17;;640:96;:::o;10110:370:4:-;10258:1;10241:19;;:5;:19;;;10233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10338:1;10319:21;;:7;:21;;;10311:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10420:6;10390:11;:18;10402:5;10390:18;;;;;;;;;;;;;;;:27;10409:7;10390:27;;;;;;;;;;;;;;;:36;;;;10457:7;10441:32;;10450:5;10441:32;;;10466:6;10441:32;;;;;;:::i;:::-;;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;10977:17;10957:16;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10953:243;10881:321;10761:441;;;:::o;7475:651::-;7617:1;7601:18;;:4;:18;;;7593:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7693:1;7679:16;;:2;:16;;;7671:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7746:38;7767:4;7773:2;7777:6;7746:20;:38::i;:::-;7795:19;7817:9;:15;7827:4;7817:15;;;;;;;;;;;;;;;;7795:37;;7865:6;7850:11;:21;;7842:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7980:6;7966:11;:20;7948:9;:15;7958:4;7948:15;;;;;;;;;;;;;;;:38;;;;8023:6;8006:9;:13;8016:2;8006:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;8060:2;8045:26;;8054:4;8045:26;;;8064:6;8045:26;;;;;;:::i;:::-;;;;;;;;8082:37;8102:4;8108:2;8112:6;8082:19;:37::i;:::-;7583:543;7475:651;;;:::o;8402:389::-;8504:1;8485:21;;:7;:21;;;8477:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8553:49;8582:1;8586:7;8595:6;8553:20;:49::i;:::-;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;;;;;8667:6;8645:9;:18;8655:7;8645:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8709:7;8688:37;;8705:1;8688:37;;;8718:6;8688:37;;;;;;:::i;:::-;;;;;;;;8736:48;8764:1;8768:7;8777:6;8736:19;:48::i;:::-;8402:389;;:::o;11786:121::-;;;;:::o;12495:120::-;;;;:::o;7:99:13:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o;13702:181::-;13842:33;13838:1;13830:6;13826:14;13819:57;13702:181;:::o;13889:366::-;14031:3;14052:67;14116:2;14111:3;14052:67;:::i;:::-;14045:74;;14128:93;14217:3;14128:93;:::i;:::-;14246:2;14241:3;14237:12;14230:19;;13889:366;;;:::o;14261:419::-;14427:4;14465:2;14454:9;14450:18;14442:26;;14514:9;14508:4;14504:20;14500:1;14489:9;14485:17;14478:47;14542:131;14668:4;14542:131;:::i;:::-;14534:139;;14261:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1035200","executionCost":"infinite","totalCost":"infinite"},"external":{"_mintCAT(address,uint256)":"infinite","allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2863","decimals()":"454","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2482","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"_mintCAT(address,uint256)":"2daf865d","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receivingAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_mintCAT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CAT.sol\":\"CAT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/CAT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\n\\r\\ncontract CAT is ERC20 {\\r\\n    constructor(\\r\\n        uint256 initialSupply,\\r\\n        string memory name,\\r\\n        string memory symbol\\r\\n    ) ERC20(name, symbol) {\\r\\n        _mint(msg.sender, initialSupply);\\r\\n    }\\r\\n\\r\\n    function _mintCAT(address receivingAddress, uint256 amount) public {\\r\\n        _mint(receivingAddress, amount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x5cbfafe37676a905ca47123c090ba83f243036506a68eb61606ef0d34ba54f09\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":324,"contract":"contracts/CAT.sol:CAT","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":330,"contract":"contracts/CAT.sol:CAT","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":332,"contract":"contracts/CAT.sol:CAT","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":334,"contract":"contracts/CAT.sol:CAT","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":336,"contract":"contracts/CAT.sol:CAT","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Gold-feed.sol":{"GoldPriceFeed":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"getLatestPriceGold","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1075":{"entryPoint":null,"id":1075,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50737b219f57a8e9c7303204af681e9fa69d17ef626f6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610289806100746000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063bfa73fd414610030575b600080fd5b61003861004e565b6040516100459190610114565b60405180910390f35b60008060008060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156100c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e691906101d8565b94509450945094509450839550505050505090565b6000819050919050565b61010e816100fb565b82525050565b60006020820190506101296000830184610105565b92915050565b600080fd5b600069ffffffffffffffffffff82169050919050565b61015381610134565b811461015e57600080fd5b50565b6000815190506101708161014a565b92915050565b61017f816100fb565b811461018a57600080fd5b50565b60008151905061019c81610176565b92915050565b6000819050919050565b6101b5816101a2565b81146101c057600080fd5b50565b6000815190506101d2816101ac565b92915050565b600080600080600060a086880312156101f4576101f361012f565b5b600061020288828901610161565b95505060206102138882890161018d565b9450506040610224888289016101c3565b9350506060610235888289016101c3565b925050608061024688828901610161565b915050929550929590935056fea2646970667358221220936acb9d88f244460d9e2596aa723e590ae59b70f1fcf3fe8fae07774274189764736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0x7B219F57A8E9C7303204AF681E9FA69D17EF626F PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x289 DUP1 PUSH2 0x74 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBFA73FD4 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x114 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x1D8 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP DUP4 SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10E DUP2 PUSH2 0xFB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x129 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x105 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x153 DUP2 PUSH2 0x134 JUMP JUMPDEST DUP2 EQ PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x170 DUP2 PUSH2 0x14A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17F DUP2 PUSH2 0xFB JUMP JUMPDEST DUP2 EQ PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19C DUP2 PUSH2 0x176 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5 DUP2 PUSH2 0x1A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D2 DUP2 PUSH2 0x1AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1F4 JUMPI PUSH2 0x1F3 PUSH2 0x12F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x202 DUP9 DUP3 DUP10 ADD PUSH2 0x161 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x213 DUP9 DUP3 DUP10 ADD PUSH2 0x18D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x224 DUP9 DUP3 DUP10 ADD PUSH2 0x1C3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x235 DUP9 DUP3 DUP10 ADD PUSH2 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x246 DUP9 DUP3 DUP10 ADD PUSH2 0x161 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 PUSH11 0xCB9D88F244460D9E2596AA PUSH19 0x3E590AE59B70F1FCF3FE8FAE07774274189764 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"262:723:9:-:0;;;501:117;;;;;;;;;;567:42;533:9;;:77;;;;;;;;;;;;;;;;;;262:723;;;;;;"},"deployedBytecode":{"functionDebugData":{"@getLatestPriceGold_1098":{"entryPoint":78,"id":1098,"parameterSlots":0,"returnSlots":1},"abi_decode_t_int256_fromMemory":{"entryPoint":397,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint80_fromMemory":{"entryPoint":353,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":472,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_t_int256_to_t_int256_fromStack":{"entryPoint":261,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":276,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_int256":{"entryPoint":251,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":418,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint80":{"entryPoint":308,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":303,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":374,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":428,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint80":{"entryPoint":330,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2752:13","statements":[{"body":{"nodeType":"YulBlock","src":"51:32:13","statements":[{"nodeType":"YulAssignment","src":"61:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"72:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"61:7:13"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"43:7:13","type":""}],"src":"7:76:13"},{"body":{"nodeType":"YulBlock","src":"152:52:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"169:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"191:5:13"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"174:16:13"},"nodeType":"YulFunctionCall","src":"174:23:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"162:6:13"},"nodeType":"YulFunctionCall","src":"162:36:13"},"nodeType":"YulExpressionStatement","src":"162:36:13"}]},"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"140:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"147:3:13","type":""}],"src":"89:115:13"},{"body":{"nodeType":"YulBlock","src":"306:122:13","statements":[{"nodeType":"YulAssignment","src":"316:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"328:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"339:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"324:3:13"},"nodeType":"YulFunctionCall","src":"324:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"316:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"394:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"407:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"418:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:13"},"nodeType":"YulFunctionCall","src":"403:17:13"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulIdentifier","src":"352:41:13"},"nodeType":"YulFunctionCall","src":"352:69:13"},"nodeType":"YulExpressionStatement","src":"352:69:13"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"278:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"290:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"301:4:13","type":""}],"src":"210:218:13"},{"body":{"nodeType":"YulBlock","src":"474:35:13","statements":[{"nodeType":"YulAssignment","src":"484:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"500:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"494:5:13"},"nodeType":"YulFunctionCall","src":"494:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"484:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"467:6:13","type":""}],"src":"434:75:13"},{"body":{"nodeType":"YulBlock","src":"604:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"621:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"624:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"614:6:13"},"nodeType":"YulFunctionCall","src":"614:12:13"},"nodeType":"YulExpressionStatement","src":"614:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"515:117:13"},{"body":{"nodeType":"YulBlock","src":"727:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:13"},"nodeType":"YulFunctionCall","src":"737:12:13"},"nodeType":"YulExpressionStatement","src":"737:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"638:117:13"},{"body":{"nodeType":"YulBlock","src":"805:61:13","statements":[{"nodeType":"YulAssignment","src":"815:45:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"830:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"837:22:13","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"826:3:13"},"nodeType":"YulFunctionCall","src":"826:34:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"815:7:13"}]}]},"name":"cleanup_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"787:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"797:7:13","type":""}],"src":"761:105:13"},{"body":{"nodeType":"YulBlock","src":"914:78:13","statements":[{"body":{"nodeType":"YulBlock","src":"970:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"979:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"982:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"972:6:13"},"nodeType":"YulFunctionCall","src":"972:12:13"},"nodeType":"YulExpressionStatement","src":"972:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"961:5:13"}],"functionName":{"name":"cleanup_t_uint80","nodeType":"YulIdentifier","src":"944:16:13"},"nodeType":"YulFunctionCall","src":"944:23:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"934:2:13"},"nodeType":"YulFunctionCall","src":"934:34:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"927:6:13"},"nodeType":"YulFunctionCall","src":"927:42:13"},"nodeType":"YulIf","src":"924:62:13"}]},"name":"validator_revert_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"907:5:13","type":""}],"src":"872:120:13"},{"body":{"nodeType":"YulBlock","src":"1060:79:13","statements":[{"nodeType":"YulAssignment","src":"1070:22:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1085:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1079:5:13"},"nodeType":"YulFunctionCall","src":"1079:13:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1070:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1127:5:13"}],"functionName":{"name":"validator_revert_t_uint80","nodeType":"YulIdentifier","src":"1101:25:13"},"nodeType":"YulFunctionCall","src":"1101:32:13"},"nodeType":"YulExpressionStatement","src":"1101:32:13"}]},"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1038:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"1046:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1054:5:13","type":""}],"src":"998:141:13"},{"body":{"nodeType":"YulBlock","src":"1187:78:13","statements":[{"body":{"nodeType":"YulBlock","src":"1243:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1252:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1255:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1245:6:13"},"nodeType":"YulFunctionCall","src":"1245:12:13"},"nodeType":"YulExpressionStatement","src":"1245:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1210:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1234:5:13"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"1217:16:13"},"nodeType":"YulFunctionCall","src":"1217:23:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1207:2:13"},"nodeType":"YulFunctionCall","src":"1207:34:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1200:6:13"},"nodeType":"YulFunctionCall","src":"1200:42:13"},"nodeType":"YulIf","src":"1197:62:13"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1180:5:13","type":""}],"src":"1145:120:13"},{"body":{"nodeType":"YulBlock","src":"1333:79:13","statements":[{"nodeType":"YulAssignment","src":"1343:22:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1358:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1352:5:13"},"nodeType":"YulFunctionCall","src":"1352:13:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1343:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1400:5:13"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"1374:25:13"},"nodeType":"YulFunctionCall","src":"1374:32:13"},"nodeType":"YulExpressionStatement","src":"1374:32:13"}]},"name":"abi_decode_t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1311:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"1319:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1327:5:13","type":""}],"src":"1271:141:13"},{"body":{"nodeType":"YulBlock","src":"1463:32:13","statements":[{"nodeType":"YulAssignment","src":"1473:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"1484:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1473:7:13"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1445:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1455:7:13","type":""}],"src":"1418:77:13"},{"body":{"nodeType":"YulBlock","src":"1544:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"1601:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1610:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1613:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1603:6:13"},"nodeType":"YulFunctionCall","src":"1603:12:13"},"nodeType":"YulExpressionStatement","src":"1603:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1567:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1592:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1574:17:13"},"nodeType":"YulFunctionCall","src":"1574:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1564:2:13"},"nodeType":"YulFunctionCall","src":"1564:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1557:6:13"},"nodeType":"YulFunctionCall","src":"1557:43:13"},"nodeType":"YulIf","src":"1554:63:13"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1537:5:13","type":""}],"src":"1501:122:13"},{"body":{"nodeType":"YulBlock","src":"1692:80:13","statements":[{"nodeType":"YulAssignment","src":"1702:22:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1717:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1711:5:13"},"nodeType":"YulFunctionCall","src":"1711:13:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1702:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1760:5:13"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1733:26:13"},"nodeType":"YulFunctionCall","src":"1733:33:13"},"nodeType":"YulExpressionStatement","src":"1733:33:13"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1670:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"1678:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1686:5:13","type":""}],"src":"1629:143:13"},{"body":{"nodeType":"YulBlock","src":"1920:829:13","statements":[{"body":{"nodeType":"YulBlock","src":"1967:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1969:77:13"},"nodeType":"YulFunctionCall","src":"1969:79:13"},"nodeType":"YulExpressionStatement","src":"1969:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1941:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"1950:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1937:3:13"},"nodeType":"YulFunctionCall","src":"1937:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"1962:3:13","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1933:3:13"},"nodeType":"YulFunctionCall","src":"1933:33:13"},"nodeType":"YulIf","src":"1930:120:13"},{"nodeType":"YulBlock","src":"2060:127:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2075:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2089:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2079:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2104:73:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2149:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"2160:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2145:3:13"},"nodeType":"YulFunctionCall","src":"2145:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2169:7:13"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"2114:30:13"},"nodeType":"YulFunctionCall","src":"2114:63:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2104:6:13"}]}]},{"nodeType":"YulBlock","src":"2197:128:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2212:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2226:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2216:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2242:73:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2287:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"2298:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2283:3:13"},"nodeType":"YulFunctionCall","src":"2283:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2307:7:13"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nodeType":"YulIdentifier","src":"2252:30:13"},"nodeType":"YulFunctionCall","src":"2252:63:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2242:6:13"}]}]},{"nodeType":"YulBlock","src":"2335:129:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2350:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2364:2:13","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2354:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2380:74:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2426:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"2437:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2422:3:13"},"nodeType":"YulFunctionCall","src":"2422:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2446:7:13"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2390:31:13"},"nodeType":"YulFunctionCall","src":"2390:64:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2380:6:13"}]}]},{"nodeType":"YulBlock","src":"2474:129:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2489:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2503:2:13","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2493:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2519:74:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2565:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"2576:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2561:3:13"},"nodeType":"YulFunctionCall","src":"2561:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2585:7:13"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2529:31:13"},"nodeType":"YulFunctionCall","src":"2529:64:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2519:6:13"}]}]},{"nodeType":"YulBlock","src":"2613:129:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2628:17:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2642:3:13","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2632:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2659:73:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2704:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"2715:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2700:3:13"},"nodeType":"YulFunctionCall","src":"2700:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2724:7:13"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"2669:30:13"},"nodeType":"YulFunctionCall","src":"2669:63:13"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2659:6:13"}]}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1858:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1869:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1881:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1889:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1897:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1905:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1913:6:13","type":""}],"src":"1778:971:13"}]},"contents":"{\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c8063bfa73fd414610030575b600080fd5b61003861004e565b6040516100459190610114565b60405180910390f35b60008060008060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156100c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e691906101d8565b94509450945094509450839550505050505090565b6000819050919050565b61010e816100fb565b82525050565b60006020820190506101296000830184610105565b92915050565b600080fd5b600069ffffffffffffffffffff82169050919050565b61015381610134565b811461015e57600080fd5b50565b6000815190506101708161014a565b92915050565b61017f816100fb565b811461018a57600080fd5b50565b60008151905061019c81610176565b92915050565b6000819050919050565b6101b5816101a2565b81146101c057600080fd5b50565b6000815190506101d2816101ac565b92915050565b600080600080600060a086880312156101f4576101f361012f565b5b600061020288828901610161565b95505060206102138882890161018d565b9450506040610224888289016101c3565b9350506060610235888289016101c3565b925050608061024688828901610161565b915050929550929590935056fea2646970667358221220936acb9d88f244460d9e2596aa723e590ae59b70f1fcf3fe8fae07774274189764736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBFA73FD4 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x114 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x1D8 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP DUP4 SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10E DUP2 PUSH2 0xFB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x129 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x105 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x153 DUP2 PUSH2 0x134 JUMP JUMPDEST DUP2 EQ PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x170 DUP2 PUSH2 0x14A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17F DUP2 PUSH2 0xFB JUMP JUMPDEST DUP2 EQ PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19C DUP2 PUSH2 0x176 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5 DUP2 PUSH2 0x1A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D2 DUP2 PUSH2 0x1AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1F4 JUMPI PUSH2 0x1F3 PUSH2 0x12F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x202 DUP9 DUP3 DUP10 ADD PUSH2 0x161 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x213 DUP9 DUP3 DUP10 ADD PUSH2 0x18D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x224 DUP9 DUP3 DUP10 ADD PUSH2 0x1C3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x235 DUP9 DUP3 DUP10 ADD PUSH2 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x246 DUP9 DUP3 DUP10 ADD PUSH2 0x161 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 PUSH11 0xCB9D88F244460D9E2596AA PUSH19 0x3E590AE59B70F1FCF3FE8FAE07774274189764 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"262:723:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;683:299;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;734:6;768:14;797:12;824:17;856;888:22;924:9;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;753:198;;;;;;;;;;969:5;962:12;;;;;;;683:299;:::o;7:76:13:-;43:7;72:5;61:16;;7:76;;;:::o;89:115::-;174:23;191:5;174:23;:::i;:::-;169:3;162:36;89:115;;:::o;210:218::-;301:4;339:2;328:9;324:18;316:26;;352:69;418:1;407:9;403:17;394:6;352:69;:::i;:::-;210:218;;;;:::o;515:117::-;624:1;621;614:12;761:105;797:7;837:22;830:5;826:34;815:45;;761:105;;;:::o;872:120::-;944:23;961:5;944:23;:::i;:::-;937:5;934:34;924:62;;982:1;979;972:12;924:62;872:120;:::o;998:141::-;1054:5;1085:6;1079:13;1070:22;;1101:32;1127:5;1101:32;:::i;:::-;998:141;;;;:::o;1145:120::-;1217:23;1234:5;1217:23;:::i;:::-;1210:5;1207:34;1197:62;;1255:1;1252;1245:12;1197:62;1145:120;:::o;1271:141::-;1327:5;1358:6;1352:13;1343:22;;1374:32;1400:5;1374:32;:::i;:::-;1271:141;;;;:::o;1418:77::-;1455:7;1484:5;1473:16;;1418:77;;;:::o;1501:122::-;1574:24;1592:5;1574:24;:::i;:::-;1567:5;1564:35;1554:63;;1613:1;1610;1603:12;1554:63;1501:122;:::o;1629:143::-;1686:5;1717:6;1711:13;1702:22;;1733:33;1760:5;1733:33;:::i;:::-;1629:143;;;;:::o;1778:971::-;1881:6;1889;1897;1905;1913;1962:3;1950:9;1941:7;1937:23;1933:33;1930:120;;;1969:79;;:::i;:::-;1930:120;2089:1;2114:63;2169:7;2160:6;2149:9;2145:22;2114:63;:::i;:::-;2104:73;;2060:127;2226:2;2252:63;2307:7;2298:6;2287:9;2283:22;2252:63;:::i;:::-;2242:73;;2197:128;2364:2;2390:64;2446:7;2437:6;2426:9;2422:22;2390:64;:::i;:::-;2380:74;;2335:129;2503:2;2529:64;2585:7;2576:6;2565:9;2561:22;2529:64;:::i;:::-;2519:74;;2474:129;2642:3;2669:63;2724:7;2715:6;2704:9;2700:22;2669:63;:::i;:::-;2659:73;;2613:129;1778:971;;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"129800","executionCost":"24444","totalCost":"154244"},"external":{"getLatestPriceGold()":"infinite"}},"methodIdentifiers":{"getLatestPriceGold()":"bfa73fd4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getLatestPriceGold\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"DEMO: Goerli Testnet via LINK Proxy IDs Aggregator1: Gold XAU/USD Address: 0x7b219F57a8e9C7303204Af681e9fA69d17ef626f\"},\"getLatestPriceGold()\":{\"notice\":\"Return the latest gold price\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Gold-feed.sol\":\"GoldPriceFeed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/Gold-feed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// CAT (Commodity Asset Token) LINK Contract Demo Gold\\r\\n// GOAL: aggregate the gold price feed over the Goerli Testnet\\r\\n\\r\\npragma solidity ^0.8.1;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\ncontract GoldPriceFeed {\\r\\n    AggregatorV3Interface internal priceFeed;\\r\\n\\r\\n    /**\\r\\n     * DEMO: Goerli Testnet via LINK Proxy IDs\\r\\n     * Aggregator1: Gold XAU/USD\\r\\n     * Address: 0x7b219F57a8e9C7303204Af681e9fA69d17ef626f\\r\\n     */\\r\\n    constructor() public {\\r\\n        priceFeed = AggregatorV3Interface(0x7b219F57a8e9C7303204Af681e9fA69d17ef626f);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Return the latest gold price\\r\\n     */\\r\\n\\r\\n    function getLatestPriceGold() public view returns (int256) {\\r\\n        (\\r\\n            uint80 roundID,\\r\\n            int256 price,\\r\\n            uint256 startedAt,\\r\\n            uint256 timeStamp,\\r\\n            uint80 answeredInRound\\r\\n        ) = priceFeed.latestRoundData();\\r\\n        return price;\\r\\n    }\\r\\n} //end contract\\r\\n\",\"keccak256\":\"0x02120120d1cb09949e1af48614fb9b5213b60a0ceca3cb6a2bd71147c52d9579\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1064,"contract":"contracts/Gold-feed.sol:GoldPriceFeed","label":"priceFeed","offset":0,"slot":"0","type":"t_contract(AggregatorV3Interface)102"}],"types":{"t_contract(AggregatorV3Interface)102":{"encoding":"inplace","label":"contract AggregatorV3Interface","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"constructor":{"notice":"DEMO: Goerli Testnet via LINK Proxy IDs Aggregator1: Gold XAU/USD Address: 0x7b219F57a8e9C7303204Af681e9fA69d17ef626f"},"getLatestPriceGold()":{"notice":"Return the latest gold price"}},"version":1}}},"contracts/Loan.sol":{"Loan":{"abi":[{"inputs":[{"internalType":"address","name":"commodityToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"i_token","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1124":{"entryPoint":null,"id":1124,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":193,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":214,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":152,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":120,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":115,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":170,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1199:13","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:13","statements":[{"nodeType":"YulAssignment","src":"57:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:13"},"nodeType":"YulFunctionCall","src":"67:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:13","type":""}],"src":"7:75:13"},{"body":{"nodeType":"YulBlock","src":"177:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:13"},"nodeType":"YulFunctionCall","src":"187:12:13"},"nodeType":"YulExpressionStatement","src":"187:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:13"},{"body":{"nodeType":"YulBlock","src":"300:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:13"},"nodeType":"YulFunctionCall","src":"310:12:13"},"nodeType":"YulExpressionStatement","src":"310:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:13"},{"body":{"nodeType":"YulBlock","src":"379:81:13","statements":[{"nodeType":"YulAssignment","src":"389:65:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:13"},"nodeType":"YulFunctionCall","src":"400:54:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:13"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:13","type":""}],"src":"334:126:13"},{"body":{"nodeType":"YulBlock","src":"511:51:13","statements":[{"nodeType":"YulAssignment","src":"521:35:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:13"},"nodeType":"YulFunctionCall","src":"532:24:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:13"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:13","type":""}],"src":"466:96:13"},{"body":{"nodeType":"YulBlock","src":"611:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:13"},"nodeType":"YulFunctionCall","src":"670:12:13"},"nodeType":"YulExpressionStatement","src":"670:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:13"},"nodeType":"YulFunctionCall","src":"641:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:13"},"nodeType":"YulFunctionCall","src":"631:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:13"},"nodeType":"YulFunctionCall","src":"624:43:13"},"nodeType":"YulIf","src":"621:63:13"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:13","type":""}],"src":"568:122:13"},{"body":{"nodeType":"YulBlock","src":"759:80:13","statements":[{"nodeType":"YulAssignment","src":"769:22:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:13"},"nodeType":"YulFunctionCall","src":"778:13:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:13"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:13"},"nodeType":"YulFunctionCall","src":"800:33:13"},"nodeType":"YulExpressionStatement","src":"800:33:13"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:13","type":""}],"src":"696:143:13"},{"body":{"nodeType":"YulBlock","src":"922:274:13","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:13"},"nodeType":"YulFunctionCall","src":"970:79:13"},"nodeType":"YulExpressionStatement","src":"970:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:13"},"nodeType":"YulFunctionCall","src":"939:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:13"},"nodeType":"YulFunctionCall","src":"935:32:13"},"nodeType":"YulIf","src":"932:119:13"},{"nodeType":"YulBlock","src":"1061:128:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:13","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:13"},"nodeType":"YulFunctionCall","src":"1147:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:13"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:13"},"nodeType":"YulFunctionCall","src":"1115:64:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:13"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:13","type":""}],"src":"845:351:13"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561001057600080fd5b50604051610212380380610212833981810160405281019061003291906100d6565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250504260008190555050610103565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a382610078565b9050919050565b6100b381610098565b81146100be57600080fd5b50565b6000815190506100d0816100aa565b92915050565b6000602082840312156100ec576100eb610073565b5b60006100fa848285016100c1565b91505092915050565b60805160f761011b60003960006049015260f76000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80639608b23214602d575b600080fd5b60336047565b604051603e919060a8565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000609482606b565b9050919050565b60a281608b565b82525050565b600060208201905060bb6000830184609b565b9291505056fea2646970667358221220dc736142748aac810d46fdf036143e75bcbe1ec0cb2aecc1d09215fa1456fd2b64736f6c63430008110033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x212 CODESIZE SUB DUP1 PUSH2 0x212 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xD6 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP TIMESTAMP PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP PUSH2 0x103 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3 DUP3 PUSH2 0x78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3 DUP2 PUSH2 0x98 JUMP JUMPDEST DUP2 EQ PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD0 DUP2 PUSH2 0xAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC JUMPI PUSH2 0xEB PUSH2 0x73 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFA DUP5 DUP3 DUP6 ADD PUSH2 0xC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xF7 PUSH2 0x11B PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0x49 ADD MSTORE PUSH1 0xF7 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9608B232 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0xA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x94 DUP3 PUSH1 0x6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA2 DUP2 PUSH1 0x8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xBB PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC PUSH20 0x6142748AAC810D46FDF036143E75BCBE1EC0CB2A 0xEC 0xC1 0xD0 SWAP3 ISZERO STATICCALL EQ JUMP REVERT 0x2B PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"74:615:10:-:0;;;439:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;496:14;486:24;;;;;;;;;;555:15;521:31;:49;;;;439:139;74:615;;88:117:13;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;74:615:10:-;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@i_token_1109":{"entryPoint":71,"id":1109,"parameterSlots":0,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":155,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":168,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":139,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":107,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:590:13","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:13","statements":[{"nodeType":"YulAssignment","src":"62:65:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:13"},"nodeType":"YulFunctionCall","src":"73:54:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:13"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:13","type":""}],"src":"7:126:13"},{"body":{"nodeType":"YulBlock","src":"184:51:13","statements":[{"nodeType":"YulAssignment","src":"194:35:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:13"},"nodeType":"YulFunctionCall","src":"205:24:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:13"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:13","type":""}],"src":"139:96:13"},{"body":{"nodeType":"YulBlock","src":"306:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:13"},"nodeType":"YulFunctionCall","src":"328:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:13"},"nodeType":"YulFunctionCall","src":"316:37:13"},"nodeType":"YulExpressionStatement","src":"316:37:13"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:13","type":""}],"src":"241:118:13"},{"body":{"nodeType":"YulBlock","src":"463:124:13","statements":[{"nodeType":"YulAssignment","src":"473:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:13"},"nodeType":"YulFunctionCall","src":"481:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:13"},"nodeType":"YulFunctionCall","src":"562:17:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:13"},"nodeType":"YulFunctionCall","src":"509:71:13"},"nodeType":"YulExpressionStatement","src":"509:71:13"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:13","type":""}],"src":"365:222:13"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1109":[{"length":32,"start":73}]},"linkReferences":{},"object":"6080604052348015600f57600080fd5b506004361060285760003560e01c80639608b23214602d575b600080fd5b60336047565b604051603e919060a8565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000609482606b565b9050919050565b60a281608b565b82525050565b600060208201905060bb6000830184609b565b9291505056fea2646970667358221220dc736142748aac810d46fdf036143e75bcbe1ec0cb2aecc1d09215fa1456fd2b64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9608B232 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0xA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x94 DUP3 PUSH1 0x6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA2 DUP2 PUSH1 0x8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xBB PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC PUSH20 0x6142748AAC810D46FDF036143E75BCBE1EC0CB2A 0xEC 0xC1 0xD0 SWAP3 ISZERO STATICCALL EQ JUMP REVERT 0x2B PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"74:615:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;398:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;7:126:13:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"49400","executionCost":"infinite","totalCost":"infinite"},"external":{"i_token()":"infinite"}},"methodIdentifiers":{"i_token()":"9608b232"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"commodityToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"i_token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Loan.sol\":\"Loan\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Loan.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\n/*A loan  */\\r\\ncontract Loan {\\r\\n    //simply holds the collateral value and the outstanding loan value and the issue date from which the interest needs to be calculated by liquidators and checked by liquidation contract\\r\\n    uint256 private s_blockHeightLastInterestUpdate;\\r\\n    mapping(address => uint256) collateralAmountByToken;\\r\\n\\r\\n    address public immutable i_token;\\r\\n\\r\\n    constructor(address commodityToken) {\\r\\n        i_token = commodityToken;\\r\\n        s_blockHeightLastInterestUpdate = block.timestamp;\\r\\n    }\\r\\n\\r\\n    uint256 private s_amountBorrowedPerToken;\\r\\n\\r\\n    //mapping(address, uint256) accruedInterestPerToken\\r\\n}\\r\\n\",\"keccak256\":\"0x967915ebb4818d0b37baa7294d938fcf66f6216c0bc408d8c67bda305b67766f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1103,"contract":"contracts/Loan.sol:Loan","label":"s_blockHeightLastInterestUpdate","offset":0,"slot":"0","type":"t_uint256"},{"astId":1107,"contract":"contracts/Loan.sol:Loan","label":"collateralAmountByToken","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"},{"astId":1126,"contract":"contracts/Loan.sol:Loan","label":"s_amountBorrowedPerToken","offset":0,"slot":"2","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Vault.sol":{"Vault":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"toBorrowAmount","type":"uint256"}],"name":"borrow","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getToken","outputs":[{"internalType":"contract CAT","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1157":{"entryPoint":null,"id":1157,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":467,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":542,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":593,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack":{"entryPoint":796,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":841,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_0_by_1_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":906,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":338,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":190,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":369,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":813,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":824,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_rational_0_by_1":{"entryPoint":726,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":736,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_0_by_1_to_t_uint256":{"entryPoint":756,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":423,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":284,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":237,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":210,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":215,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":205,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":200,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":220,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5399:13","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:13","statements":[{"nodeType":"YulAssignment","src":"57:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:13"},"nodeType":"YulFunctionCall","src":"67:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:13","type":""}],"src":"7:75:13"},{"body":{"nodeType":"YulBlock","src":"177:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:13"},"nodeType":"YulFunctionCall","src":"187:12:13"},"nodeType":"YulExpressionStatement","src":"187:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:13"},{"body":{"nodeType":"YulBlock","src":"300:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:13"},"nodeType":"YulFunctionCall","src":"310:12:13"},"nodeType":"YulExpressionStatement","src":"310:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:13"},{"body":{"nodeType":"YulBlock","src":"423:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:13"},"nodeType":"YulFunctionCall","src":"433:12:13"},"nodeType":"YulExpressionStatement","src":"433:12:13"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:13"},{"body":{"nodeType":"YulBlock","src":"546:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:13"},"nodeType":"YulFunctionCall","src":"556:12:13"},"nodeType":"YulExpressionStatement","src":"556:12:13"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:13"},{"body":{"nodeType":"YulBlock","src":"628:54:13","statements":[{"nodeType":"YulAssignment","src":"638:38:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:13"},"nodeType":"YulFunctionCall","src":"652:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:13"},"nodeType":"YulFunctionCall","src":"668:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:13"},"nodeType":"YulFunctionCall","src":"648:28:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:13"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:13","type":""}],"src":"580:102:13"},{"body":{"nodeType":"YulBlock","src":"716:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:13"},"nodeType":"YulFunctionCall","src":"726:88:13"},"nodeType":"YulExpressionStatement","src":"726:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:13"},"nodeType":"YulFunctionCall","src":"823:15:13"},"nodeType":"YulExpressionStatement","src":"823:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:13"},"nodeType":"YulFunctionCall","src":"847:15:13"},"nodeType":"YulExpressionStatement","src":"847:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:13"},{"body":{"nodeType":"YulBlock","src":"917:238:13","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:13"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:13"},"nodeType":"YulFunctionCall","src":"957:27:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:13"},"nodeType":"YulFunctionCall","src":"945:40:13"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:13"},"nodeType":"YulFunctionCall","src":"1098:18:13"},"nodeType":"YulExpressionStatement","src":"1098:18:13"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:13"},"nodeType":"YulFunctionCall","src":"1036:34:13"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:13"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:13"},"nodeType":"YulFunctionCall","src":"1072:22:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:13"},"nodeType":"YulFunctionCall","src":"1033:62:13"},"nodeType":"YulIf","src":"1030:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:13","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:13"},"nodeType":"YulFunctionCall","src":"1127:22:13"},"nodeType":"YulExpressionStatement","src":"1127:22:13"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:13","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:13","type":""}],"src":"874:281:13"},{"body":{"nodeType":"YulBlock","src":"1202:88:13","statements":[{"nodeType":"YulAssignment","src":"1212:30:13","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:13"},"nodeType":"YulFunctionCall","src":"1222:20:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:13"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:13"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:13"},"nodeType":"YulFunctionCall","src":"1251:33:13"},"nodeType":"YulExpressionStatement","src":"1251:33:13"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:13","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:13","type":""}],"src":"1161:129:13"},{"body":{"nodeType":"YulBlock","src":"1363:241:13","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:13"},"nodeType":"YulFunctionCall","src":"1470:18:13"},"nodeType":"YulExpressionStatement","src":"1470:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:13"},"nodeType":"YulFunctionCall","src":"1437:30:13"},"nodeType":"YulIf","src":"1434:56:13"},{"nodeType":"YulAssignment","src":"1500:37:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:13"},"nodeType":"YulFunctionCall","src":"1508:29:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:13"}]},{"nodeType":"YulAssignment","src":"1574:23:13","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:13"},"nodeType":"YulFunctionCall","src":"1582:15:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:13"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:13","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:13","type":""}],"src":"1296:308:13"},{"body":{"nodeType":"YulBlock","src":"1672:184:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:13"},"nodeType":"YulFunctionCall","src":"1772:11:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:13"},"nodeType":"YulFunctionCall","src":"1791:11:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:13"},"nodeType":"YulFunctionCall","src":"1785:18:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:13"},"nodeType":"YulFunctionCall","src":"1765:39:13"},"nodeType":"YulExpressionStatement","src":"1765:39:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:13"},"nodeType":"YulFunctionCall","src":"1709:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:13","statements":[{"nodeType":"YulAssignment","src":"1725:15:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:13"},"nodeType":"YulFunctionCall","src":"1730:10:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:13","statements":[]},"src":"1701:113:13"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:13"},"nodeType":"YulFunctionCall","src":"1830:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:13"},"nodeType":"YulFunctionCall","src":"1823:27:13"},"nodeType":"YulExpressionStatement","src":"1823:27:13"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:13","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:13","type":""}],"src":"1610:246:13"},{"body":{"nodeType":"YulBlock","src":"1957:339:13","statements":[{"nodeType":"YulAssignment","src":"1967:75:13","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:13"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:13"},"nodeType":"YulFunctionCall","src":"1992:49:13"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:13"},"nodeType":"YulFunctionCall","src":"1976:66:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:13"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:13"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:13"},"nodeType":"YulFunctionCall","src":"2051:21:13"},"nodeType":"YulExpressionStatement","src":"2051:21:13"},{"nodeType":"YulVariableDeclaration","src":"2081:27:13","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:13"},"nodeType":"YulFunctionCall","src":"2092:16:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:13"},"nodeType":"YulFunctionCall","src":"2148:79:13"},"nodeType":"YulExpressionStatement","src":"2148:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:13"},"nodeType":"YulFunctionCall","src":"2123:16:13"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:13"},"nodeType":"YulFunctionCall","src":"2120:25:13"},"nodeType":"YulIf","src":"2117:112:13"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:13"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:13"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:13"},"nodeType":"YulFunctionCall","src":"2238:52:13"},"nodeType":"YulExpressionStatement","src":"2238:52:13"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:13","type":""}],"src":"1862:434:13"},{"body":{"nodeType":"YulBlock","src":"2389:282:13","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:13"},"nodeType":"YulFunctionCall","src":"2440:79:13"},"nodeType":"YulExpressionStatement","src":"2440:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:13"},"nodeType":"YulFunctionCall","src":"2413:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:13"},"nodeType":"YulFunctionCall","src":"2409:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:13"},"nodeType":"YulFunctionCall","src":"2402:35:13"},"nodeType":"YulIf","src":"2399:122:13"},{"nodeType":"YulVariableDeclaration","src":"2530:27:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:13"},"nodeType":"YulFunctionCall","src":"2544:13:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:13"},"nodeType":"YulFunctionCall","src":"2634:17:13"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:13"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:13"},"nodeType":"YulFunctionCall","src":"2575:90:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:13"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:13","type":""}],"src":"2316:355:13"},{"body":{"nodeType":"YulBlock","src":"2791:739:13","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:13"},"nodeType":"YulFunctionCall","src":"2839:79:13"},"nodeType":"YulExpressionStatement","src":"2839:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:13"},"nodeType":"YulFunctionCall","src":"2808:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:13"},"nodeType":"YulFunctionCall","src":"2804:32:13"},"nodeType":"YulIf","src":"2801:119:13"},{"nodeType":"YulBlock","src":"2930:291:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:13"},"nodeType":"YulFunctionCall","src":"2965:17:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:13"},"nodeType":"YulFunctionCall","src":"2959:24:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:13"},"nodeType":"YulFunctionCall","src":"3032:79:13"},"nodeType":"YulExpressionStatement","src":"3032:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:13"},"nodeType":"YulFunctionCall","src":"2999:30:13"},"nodeType":"YulIf","src":"2996:117:13"},{"nodeType":"YulAssignment","src":"3127:84:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:13"},"nodeType":"YulFunctionCall","src":"3179:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:13"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:13"},"nodeType":"YulFunctionCall","src":"3137:74:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:13"}]}]},{"nodeType":"YulBlock","src":"3231:292:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:13"},"nodeType":"YulFunctionCall","src":"3266:18:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:13"},"nodeType":"YulFunctionCall","src":"3260:25:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:13"},"nodeType":"YulFunctionCall","src":"3334:79:13"},"nodeType":"YulExpressionStatement","src":"3334:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:13"},"nodeType":"YulFunctionCall","src":"3301:30:13"},"nodeType":"YulIf","src":"3298:117:13"},{"nodeType":"YulAssignment","src":"3429:84:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:13"},"nodeType":"YulFunctionCall","src":"3481:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:13"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:13"},"nodeType":"YulFunctionCall","src":"3439:74:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:13"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:13","type":""}],"src":"2677:853:13"},{"body":{"nodeType":"YulBlock","src":"3589:32:13","statements":[{"nodeType":"YulAssignment","src":"3599:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"3610:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3599:7:13"}]}]},"name":"cleanup_t_rational_0_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3571:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3581:7:13","type":""}],"src":"3536:85:13"},{"body":{"nodeType":"YulBlock","src":"3672:32:13","statements":[{"nodeType":"YulAssignment","src":"3682:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"3693:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3682:7:13"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3654:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3664:7:13","type":""}],"src":"3627:77:13"},{"body":{"nodeType":"YulBlock","src":"3742:28:13","statements":[{"nodeType":"YulAssignment","src":"3752:12:13","value":{"name":"value","nodeType":"YulIdentifier","src":"3759:5:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3752:3:13"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3728:5:13","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3738:3:13","type":""}],"src":"3710:60:13"},{"body":{"nodeType":"YulBlock","src":"3844:90:13","statements":[{"nodeType":"YulAssignment","src":"3854:74:13","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3920:5:13"}],"functionName":{"name":"cleanup_t_rational_0_by_1","nodeType":"YulIdentifier","src":"3894:25:13"},"nodeType":"YulFunctionCall","src":"3894:32:13"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3885:8:13"},"nodeType":"YulFunctionCall","src":"3885:42:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3867:17:13"},"nodeType":"YulFunctionCall","src":"3867:61:13"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3854:9:13"}]}]},"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3824:5:13","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3834:9:13","type":""}],"src":"3776:158:13"},{"body":{"nodeType":"YulBlock","src":"4013:74:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4030:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4074:5:13"}],"functionName":{"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulIdentifier","src":"4035:38:13"},"nodeType":"YulFunctionCall","src":"4035:45:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4023:6:13"},"nodeType":"YulFunctionCall","src":"4023:58:13"},"nodeType":"YulExpressionStatement","src":"4023:58:13"}]},"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4001:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4008:3:13","type":""}],"src":"3940:147:13"},{"body":{"nodeType":"YulBlock","src":"4152:40:13","statements":[{"nodeType":"YulAssignment","src":"4163:22:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4179:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4173:5:13"},"nodeType":"YulFunctionCall","src":"4173:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4163:6:13"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4135:5:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4145:6:13","type":""}],"src":"4093:99:13"},{"body":{"nodeType":"YulBlock","src":"4294:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4311:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"4316:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4304:6:13"},"nodeType":"YulFunctionCall","src":"4304:19:13"},"nodeType":"YulExpressionStatement","src":"4304:19:13"},{"nodeType":"YulAssignment","src":"4332:29:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4351:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"4356:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4347:3:13"},"nodeType":"YulFunctionCall","src":"4347:14:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4332:11:13"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4266:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"4271:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4282:11:13","type":""}],"src":"4198:169:13"},{"body":{"nodeType":"YulBlock","src":"4465:285:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4475:53:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4522:5:13"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4489:32:13"},"nodeType":"YulFunctionCall","src":"4489:39:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4479:6:13","type":""}]},{"nodeType":"YulAssignment","src":"4537:78:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4603:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"4608:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4544:58:13"},"nodeType":"YulFunctionCall","src":"4544:71:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4537:3:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4663:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"4670:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4659:3:13"},"nodeType":"YulFunctionCall","src":"4659:16:13"},{"name":"pos","nodeType":"YulIdentifier","src":"4677:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"4682:6:13"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4624:34:13"},"nodeType":"YulFunctionCall","src":"4624:65:13"},"nodeType":"YulExpressionStatement","src":"4624:65:13"},{"nodeType":"YulAssignment","src":"4698:46:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4709:3:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4736:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4714:21:13"},"nodeType":"YulFunctionCall","src":"4714:29:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4705:3:13"},"nodeType":"YulFunctionCall","src":"4705:39:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4698:3:13"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4446:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4453:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4461:3:13","type":""}],"src":"4373:377:13"},{"body":{"nodeType":"YulBlock","src":"4958:438:13","statements":[{"nodeType":"YulAssignment","src":"4968:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4980:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4991:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4976:3:13"},"nodeType":"YulFunctionCall","src":"4976:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4968:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5056:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5069:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5080:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5065:3:13"},"nodeType":"YulFunctionCall","src":"5065:17:13"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5004:51:13"},"nodeType":"YulFunctionCall","src":"5004:79:13"},"nodeType":"YulExpressionStatement","src":"5004:79:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5104:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5115:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5100:3:13"},"nodeType":"YulFunctionCall","src":"5100:18:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5124:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"5130:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5120:3:13"},"nodeType":"YulFunctionCall","src":"5120:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5093:6:13"},"nodeType":"YulFunctionCall","src":"5093:48:13"},"nodeType":"YulExpressionStatement","src":"5093:48:13"},{"nodeType":"YulAssignment","src":"5150:86:13","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5222:6:13"},{"name":"tail","nodeType":"YulIdentifier","src":"5231:4:13"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5158:63:13"},"nodeType":"YulFunctionCall","src":"5158:78:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5150:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5257:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5268:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5253:3:13"},"nodeType":"YulFunctionCall","src":"5253:18:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5277:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"5283:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5273:3:13"},"nodeType":"YulFunctionCall","src":"5273:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5246:6:13"},"nodeType":"YulFunctionCall","src":"5246:48:13"},"nodeType":"YulExpressionStatement","src":"5246:48:13"},{"nodeType":"YulAssignment","src":"5303:86:13","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5375:6:13"},{"name":"tail","nodeType":"YulIdentifier","src":"5384:4:13"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5311:63:13"},"nodeType":"YulFunctionCall","src":"5311:78:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5303:4:13"}]}]},"name":"abi_encode_tuple_t_rational_0_by_1_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4914:9:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4926:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4934:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4942:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4953:4:13","type":""}],"src":"4756:640:13"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x23A3 CODESIZE SUB DUP1 PUSH3 0x23A3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x251 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH3 0x49 SWAP1 PUSH3 0xB0 JUMP JUMPDEST PUSH3 0x57 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH3 0x3D5 JUMP JUMPDEST PUSH2 0x1CEF DUP1 PUSH3 0x6B4 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x127 DUP3 PUSH3 0xDC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x149 JUMPI PUSH3 0x148 PUSH3 0xED JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15E PUSH3 0xBE JUMP JUMPDEST SWAP1 POP PUSH3 0x16C DUP3 DUP3 PUSH3 0x11C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x18F JUMPI PUSH3 0x18E PUSH3 0xED JUMP JUMPDEST JUMPDEST PUSH3 0x19A DUP3 PUSH3 0xDC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1C7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1AA JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1EA PUSH3 0x1E4 DUP5 PUSH3 0x171 JUMP JUMPDEST PUSH3 0x152 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x209 JUMPI PUSH3 0x208 PUSH3 0xD7 JUMP JUMPDEST JUMPDEST PUSH3 0x216 DUP5 DUP3 DUP6 PUSH3 0x1A7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x236 JUMPI PUSH3 0x235 PUSH3 0xD2 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x248 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x26B JUMPI PUSH3 0x26A PUSH3 0xC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x28C JUMPI PUSH3 0x28B PUSH3 0xCD JUMP JUMPDEST JUMPDEST PUSH3 0x29A DUP6 DUP3 DUP7 ADD PUSH3 0x21E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2BE JUMPI PUSH3 0x2BD PUSH3 0xCD JUMP JUMPDEST JUMPDEST PUSH3 0x2CC DUP6 DUP3 DUP7 ADD PUSH3 0x21E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x315 PUSH3 0x30F PUSH3 0x309 DUP5 PUSH3 0x2D6 JUMP JUMPDEST PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x2E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x327 DUP2 PUSH3 0x2F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x356 DUP3 PUSH3 0x32D JUMP JUMPDEST PUSH3 0x362 DUP2 DUP6 PUSH3 0x338 JUMP JUMPDEST SWAP4 POP PUSH3 0x374 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x1A7 JUMP JUMPDEST PUSH3 0x37F DUP2 PUSH3 0xDC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x3A1 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x31C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x3B5 DUP2 DUP6 PUSH3 0x349 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH3 0x3CB DUP2 DUP5 PUSH3 0x349 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2BE PUSH3 0x3F6 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x79 ADD MSTORE PUSH1 0x9F ADD MSTORE PUSH2 0x2BE PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xC5EBEAEC EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x202 JUMP JUMPDEST PUSH2 0x9D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2DAF865D CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP3 SWAP2 SWAP1 PUSH2 0x25F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x126 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x172 PUSH2 0x16D PUSH2 0x168 DUP5 PUSH2 0x12D JUMP JUMPDEST PUSH2 0x14D JUMP JUMPDEST PUSH2 0x12D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x184 DUP3 PUSH2 0x157 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x196 DUP3 PUSH2 0x179 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A6 DUP2 PUSH2 0x18B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DF DUP2 PUSH2 0x1CC JUMP JUMPDEST DUP2 EQ PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FC DUP2 PUSH2 0x1D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x218 JUMPI PUSH2 0x217 PUSH2 0x1C7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x226 DUP5 DUP3 DUP6 ADD PUSH2 0x1ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A DUP3 PUSH2 0x12D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24A DUP2 PUSH2 0x22F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x1CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x274 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x241 JUMP JUMPDEST PUSH2 0x281 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x250 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL SWAP9 BLOCKHASH SSTORE 0xA5 0x2F LOG4 0xEC CALLER 0xDF 0xBE 0x24 ADD 0xEF TIMESTAMP SIGNEXTEND BASEFEE 0x5F 0xD0 0x2A 0xDD PUSH1 0xEF SSTORE 0xDE PUSH11 0x11D5D2B466EB64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1CEF CODESIZE SUB DUP1 PUSH3 0x1CEF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x3CA JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0x6A5 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5C SWAP2 SWAP1 PUSH3 0x6A5 JUMP JUMPDEST POP POP POP PUSH3 0x71 CALLER DUP5 PUSH3 0x7A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0x8A7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xE3 SWAP1 PUSH3 0x7ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x100 PUSH1 0x0 DUP4 DUP4 PUSH3 0x1F2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x114 SWAP2 SWAP1 PUSH3 0x83E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x16B SWAP2 SWAP1 PUSH3 0x83E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x1D2 SWAP2 SWAP1 PUSH3 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x1EE PUSH1 0x0 DUP4 DUP4 PUSH3 0x1F7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x225 DUP2 PUSH3 0x210 JUMP JUMPDEST DUP2 EQ PUSH3 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x245 DUP2 PUSH3 0x21A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x2A0 DUP3 PUSH3 0x255 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2C2 JUMPI PUSH3 0x2C1 PUSH3 0x266 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2D7 PUSH3 0x1FC JUMP JUMPDEST SWAP1 POP PUSH3 0x2E5 DUP3 DUP3 PUSH3 0x295 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x308 JUMPI PUSH3 0x307 PUSH3 0x266 JUMP JUMPDEST JUMPDEST PUSH3 0x313 DUP3 PUSH3 0x255 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x340 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x323 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x363 PUSH3 0x35D DUP5 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x2CB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x382 JUMPI PUSH3 0x381 PUSH3 0x250 JUMP JUMPDEST JUMPDEST PUSH3 0x38F DUP5 DUP3 DUP6 PUSH3 0x320 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x3AF JUMPI PUSH3 0x3AE PUSH3 0x24B JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x3C1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x34C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x3E6 JUMPI PUSH3 0x3E5 PUSH3 0x206 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x3F6 DUP7 DUP3 DUP8 ADD PUSH3 0x234 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x41A JUMPI PUSH3 0x419 PUSH3 0x20B JUMP JUMPDEST JUMPDEST PUSH3 0x428 DUP7 DUP3 DUP8 ADD PUSH3 0x397 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x44C JUMPI PUSH3 0x44B PUSH3 0x20B JUMP JUMPDEST JUMPDEST PUSH3 0x45A DUP7 DUP3 DUP8 ADD PUSH3 0x397 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x4B7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4CD JUMPI PUSH3 0x4CC PUSH3 0x46F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x537 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x4F8 JUMP JUMPDEST PUSH3 0x543 DUP7 DUP4 PUSH3 0x4F8 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x586 PUSH3 0x580 PUSH3 0x57A DUP5 PUSH3 0x210 JUMP JUMPDEST PUSH3 0x55B JUMP JUMPDEST PUSH3 0x210 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5A2 DUP4 PUSH3 0x565 JUMP JUMPDEST PUSH3 0x5BA PUSH3 0x5B1 DUP3 PUSH3 0x58D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x505 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x5D1 PUSH3 0x5C2 JUMP JUMPDEST PUSH3 0x5DE DUP2 DUP5 DUP5 PUSH3 0x597 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x606 JUMPI PUSH3 0x5FA PUSH1 0x0 DUP3 PUSH3 0x5C7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5E4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x655 JUMPI PUSH3 0x61F DUP2 PUSH3 0x4D3 JUMP JUMPDEST PUSH3 0x62A DUP5 PUSH3 0x4E8 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x63A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x652 PUSH3 0x649 DUP6 PUSH3 0x4E8 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5E3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x67A PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x65A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x695 DUP4 DUP4 PUSH3 0x667 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x6B0 DUP3 PUSH3 0x464 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6CC JUMPI PUSH3 0x6CB PUSH3 0x266 JUMP JUMPDEST JUMPDEST PUSH3 0x6D8 DUP3 SLOAD PUSH3 0x49E JUMP JUMPDEST PUSH3 0x6E5 DUP3 DUP3 DUP6 PUSH3 0x60A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x71D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x708 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x714 DUP6 DUP3 PUSH3 0x687 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x784 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x72D DUP7 PUSH3 0x4D3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x757 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x730 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x777 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x773 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x667 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7D5 PUSH1 0x1F DUP4 PUSH3 0x78C JUMP JUMPDEST SWAP2 POP PUSH3 0x7E2 DUP3 PUSH3 0x79D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x808 DUP2 PUSH3 0x7C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x84B DUP3 PUSH3 0x210 JUMP JUMPDEST SWAP2 POP PUSH3 0x858 DUP4 PUSH3 0x210 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x873 JUMPI PUSH3 0x872 PUSH3 0x80F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x884 DUP2 PUSH3 0x210 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x8A1 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x879 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1438 DUP1 PUSH3 0x8B7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x26D JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x2DAF865D EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xE04 JUMP JUMPDEST PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16A SWAP2 SWAP1 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x179 PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0xE73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0xE8E JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0xEBB JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xF2A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0xF2A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x325 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x325 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x308 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x33A PUSH2 0x5D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x347 DUP2 DUP6 DUP6 PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x367 PUSH2 0x5D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x374 DUP6 DUP3 DUP6 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x37F DUP6 DUP6 DUP6 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x395 DUP3 DUP3 PUSH2 0xAB0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3AD PUSH2 0x5D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x3CE DUP2 DUP6 DUP6 PUSH2 0x3BF DUP6 DUP10 PUSH2 0x54D JUMP JUMPDEST PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x430 SWAP1 PUSH2 0xF2A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x45C SWAP1 PUSH2 0xF2A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x48C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4BE PUSH2 0x5D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4CC DUP3 DUP7 PUSH2 0x54D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x511 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x508 SWAP1 PUSH2 0x1030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x51E DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x535 PUSH2 0x5D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x542 DUP2 DUP6 DUP6 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x64B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x10C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x798 SWAP2 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 DUP5 DUP5 PUSH2 0x54D JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x82B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x81D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x814 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x82A DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5DC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x897 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x90F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x906 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x91A DUP4 DUP4 DUP4 PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x9A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x997 SWAP1 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA33 SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA97 SWAP2 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xAAA DUP5 DUP5 DUP5 PUSH2 0xC14 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB16 SWAP1 PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB2B PUSH1 0x0 DUP4 DUP4 PUSH2 0xC0F JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB92 SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xBF7 SWAP2 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xC0B PUSH1 0x0 DUP4 DUP4 PUSH2 0xC14 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC53 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC38 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7B DUP3 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0xC85 DUP2 DUP6 PUSH2 0xC24 JUMP JUMPDEST SWAP4 POP PUSH2 0xC95 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC35 JUMP JUMPDEST PUSH2 0xC9E DUP2 PUSH2 0xC5F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCC3 DUP2 DUP5 PUSH2 0xC70 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCFB DUP3 PUSH2 0xCD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD0B DUP2 PUSH2 0xCF0 JUMP JUMPDEST DUP2 EQ PUSH2 0xD16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD28 DUP2 PUSH2 0xD02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD41 DUP2 PUSH2 0xD2E JUMP JUMPDEST DUP2 EQ PUSH2 0xD4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD5E DUP2 PUSH2 0xD38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD7B JUMPI PUSH2 0xD7A PUSH2 0xCCB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD89 DUP6 DUP3 DUP7 ADD PUSH2 0xD19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD9A DUP6 DUP3 DUP7 ADD PUSH2 0xD4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB9 DUP2 PUSH2 0xDA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDD4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDE3 DUP2 PUSH2 0xD2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDFE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE1D JUMPI PUSH2 0xE1C PUSH2 0xCCB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE2B DUP7 DUP3 DUP8 ADD PUSH2 0xD19 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE3C DUP7 DUP3 DUP8 ADD PUSH2 0xD19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE4D DUP7 DUP3 DUP8 ADD PUSH2 0xD4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE6D DUP2 PUSH2 0xE57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA4 JUMPI PUSH2 0xEA3 PUSH2 0xCCB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEB2 DUP5 DUP3 DUP6 ADD PUSH2 0xD19 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED2 JUMPI PUSH2 0xED1 PUSH2 0xCCB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEE0 DUP6 DUP3 DUP7 ADD PUSH2 0xD19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEF1 DUP6 DUP3 DUP7 ADD PUSH2 0xD19 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF42 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF55 JUMPI PUSH2 0xF54 PUSH2 0xEFB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF95 DUP3 PUSH2 0xD2E JUMP JUMPDEST SWAP2 POP PUSH2 0xFA0 DUP4 PUSH2 0xD2E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xFB8 JUMPI PUSH2 0xFB7 PUSH2 0xF5B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x101A PUSH1 0x25 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x1025 DUP3 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1049 DUP2 PUSH2 0x100D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10AC PUSH1 0x24 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x10B7 DUP3 PUSH2 0x1050 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10DB DUP2 PUSH2 0x109F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113E PUSH1 0x22 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x1149 DUP3 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x116D DUP2 PUSH2 0x1131 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AA PUSH1 0x1D DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x11B5 DUP3 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11D9 DUP2 PUSH2 0x119D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123C PUSH1 0x25 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x1247 DUP3 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x126B DUP2 PUSH2 0x122F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12CE PUSH1 0x23 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x12D9 DUP3 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12FD DUP2 PUSH2 0x12C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1360 PUSH1 0x26 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x136B DUP3 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x138F DUP2 PUSH2 0x1353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13CC PUSH1 0x1F DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x13D7 DUP3 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13FB DUP2 PUSH2 0x13BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0xDD 0x4C CALLVALUE 0xE5 SWAP8 BALANCE DUP14 0xB7 0x4B 0x4D CODECOPY 0xAD GASPRICE DUP5 SHL EQ GT PUSH28 0x972EDE764F2018B879F428B31364736F6C6343000811003300000000 ","sourceMap":"185:892:11:-:0;;;335:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;418:1;421:4;427:6;410:24;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;400:34;;;;;;;;;;335:157;;185:892;;;;;;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:85::-;3581:7;3610:5;3599:16;;3536:85;;;:::o;3627:77::-;3664:7;3693:5;3682:16;;3627:77;;;:::o;3710:60::-;3738:3;3759:5;3752:12;;3710:60;;;:::o;3776:158::-;3834:9;3867:61;3885:42;3894:32;3920:5;3894:32;:::i;:::-;3885:42;:::i;:::-;3867:61;:::i;:::-;3854:74;;3776:158;;;:::o;3940:147::-;4035:45;4074:5;4035:45;:::i;:::-;4030:3;4023:58;3940:147;;:::o;4093:99::-;4145:6;4179:5;4173:12;4163:22;;4093:99;;;:::o;4198:169::-;4282:11;4316:6;4311:3;4304:19;4356:4;4351:3;4347:14;4332:29;;4198:169;;;;:::o;4373:377::-;4461:3;4489:39;4522:5;4489:39;:::i;:::-;4544:71;4608:6;4603:3;4544:71;:::i;:::-;4537:78;;4624:65;4682:6;4677:3;4670:4;4663:5;4659:16;4624:65;:::i;:::-;4714:29;4736:6;4714:29;:::i;:::-;4709:3;4705:39;4698:46;;4465:285;4373:377;;;;:::o;4756:640::-;4953:4;4991:2;4980:9;4976:18;4968:26;;5004:79;5080:1;5069:9;5065:17;5056:6;5004:79;:::i;:::-;5130:9;5124:4;5120:20;5115:2;5104:9;5100:18;5093:48;5158:78;5231:4;5222:6;5158:78;:::i;:::-;5150:86;;5283:9;5277:4;5273:20;5268:2;5257:9;5253:18;5246:48;5311:78;5384:4;5375:6;5311:78;:::i;:::-;5303:86;;4756:640;;;;;;:::o;185:892:11:-;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@borrow_1171":{"entryPoint":157,"id":1171,"parameterSlots":1,"returnSlots":0},"@getToken_1180":{"entryPoint":117,"id":1180,"parameterSlots":0,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":493,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":514,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":577,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_CAT_$1058_to_t_address_fromStack":{"entryPoint":413,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":592,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":607,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_CAT_$1058__to_t_address__fromStack_reversed":{"entryPoint":428,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":559,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":301,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":460,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_CAT_$1058_to_t_address":{"entryPoint":395,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":377,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":343,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":333,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":455,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":470,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2745:13","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:13","statements":[{"nodeType":"YulAssignment","src":"62:65:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:13"},"nodeType":"YulFunctionCall","src":"73:54:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:13"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:13","type":""}],"src":"7:126:13"},{"body":{"nodeType":"YulBlock","src":"171:28:13","statements":[{"nodeType":"YulAssignment","src":"181:12:13","value":{"name":"value","nodeType":"YulIdentifier","src":"188:5:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"181:3:13"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"157:5:13","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"167:3:13","type":""}],"src":"139:60:13"},{"body":{"nodeType":"YulBlock","src":"265:82:13","statements":[{"nodeType":"YulAssignment","src":"275:66:13","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"333:5:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"315:17:13"},"nodeType":"YulFunctionCall","src":"315:24:13"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"306:8:13"},"nodeType":"YulFunctionCall","src":"306:34:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"288:17:13"},"nodeType":"YulFunctionCall","src":"288:53:13"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"275:9:13"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"245:5:13","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"255:9:13","type":""}],"src":"205:142:13"},{"body":{"nodeType":"YulBlock","src":"413:66:13","statements":[{"nodeType":"YulAssignment","src":"423:50:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"467:5:13"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"436:30:13"},"nodeType":"YulFunctionCall","src":"436:37:13"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"423:9:13"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"393:5:13","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"403:9:13","type":""}],"src":"353:126:13"},{"body":{"nodeType":"YulBlock","src":"557:66:13","statements":[{"nodeType":"YulAssignment","src":"567:50:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"611:5:13"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"580:30:13"},"nodeType":"YulFunctionCall","src":"580:37:13"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"567:9:13"}]}]},"name":"convert_t_contract$_CAT_$1058_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"537:5:13","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"547:9:13","type":""}],"src":"485:138:13"},{"body":{"nodeType":"YulBlock","src":"706:78:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"723:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"771:5:13"}],"functionName":{"name":"convert_t_contract$_CAT_$1058_to_t_address","nodeType":"YulIdentifier","src":"728:42:13"},"nodeType":"YulFunctionCall","src":"728:49:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"716:6:13"},"nodeType":"YulFunctionCall","src":"716:62:13"},"nodeType":"YulExpressionStatement","src":"716:62:13"}]},"name":"abi_encode_t_contract$_CAT_$1058_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"694:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"701:3:13","type":""}],"src":"629:155:13"},{"body":{"nodeType":"YulBlock","src":"900:136:13","statements":[{"nodeType":"YulAssignment","src":"910:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"922:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"933:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"918:3:13"},"nodeType":"YulFunctionCall","src":"918:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"910:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1002:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1015:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1026:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1011:3:13"},"nodeType":"YulFunctionCall","src":"1011:17:13"}],"functionName":{"name":"abi_encode_t_contract$_CAT_$1058_to_t_address_fromStack","nodeType":"YulIdentifier","src":"946:55:13"},"nodeType":"YulFunctionCall","src":"946:83:13"},"nodeType":"YulExpressionStatement","src":"946:83:13"}]},"name":"abi_encode_tuple_t_contract$_CAT_$1058__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"872:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"884:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"895:4:13","type":""}],"src":"790:246:13"},{"body":{"nodeType":"YulBlock","src":"1082:35:13","statements":[{"nodeType":"YulAssignment","src":"1092:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1108:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1102:5:13"},"nodeType":"YulFunctionCall","src":"1102:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1092:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1075:6:13","type":""}],"src":"1042:75:13"},{"body":{"nodeType":"YulBlock","src":"1212:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1229:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1232:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1222:6:13"},"nodeType":"YulFunctionCall","src":"1222:12:13"},"nodeType":"YulExpressionStatement","src":"1222:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1123:117:13"},{"body":{"nodeType":"YulBlock","src":"1335:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1352:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1355:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1345:6:13"},"nodeType":"YulFunctionCall","src":"1345:12:13"},"nodeType":"YulExpressionStatement","src":"1345:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1246:117:13"},{"body":{"nodeType":"YulBlock","src":"1414:32:13","statements":[{"nodeType":"YulAssignment","src":"1424:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"1435:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1424:7:13"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1396:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1406:7:13","type":""}],"src":"1369:77:13"},{"body":{"nodeType":"YulBlock","src":"1495:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"1552:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1561:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1564:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1554:6:13"},"nodeType":"YulFunctionCall","src":"1554:12:13"},"nodeType":"YulExpressionStatement","src":"1554:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1518:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1543:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1525:17:13"},"nodeType":"YulFunctionCall","src":"1525:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1515:2:13"},"nodeType":"YulFunctionCall","src":"1515:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1508:6:13"},"nodeType":"YulFunctionCall","src":"1508:43:13"},"nodeType":"YulIf","src":"1505:63:13"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1488:5:13","type":""}],"src":"1452:122:13"},{"body":{"nodeType":"YulBlock","src":"1632:87:13","statements":[{"nodeType":"YulAssignment","src":"1642:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1664:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1651:12:13"},"nodeType":"YulFunctionCall","src":"1651:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1642:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1707:5:13"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1680:26:13"},"nodeType":"YulFunctionCall","src":"1680:33:13"},"nodeType":"YulExpressionStatement","src":"1680:33:13"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1610:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"1618:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1626:5:13","type":""}],"src":"1580:139:13"},{"body":{"nodeType":"YulBlock","src":"1791:263:13","statements":[{"body":{"nodeType":"YulBlock","src":"1837:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1839:77:13"},"nodeType":"YulFunctionCall","src":"1839:79:13"},"nodeType":"YulExpressionStatement","src":"1839:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1812:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"1821:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1808:3:13"},"nodeType":"YulFunctionCall","src":"1808:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"1833:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1804:3:13"},"nodeType":"YulFunctionCall","src":"1804:32:13"},"nodeType":"YulIf","src":"1801:119:13"},{"nodeType":"YulBlock","src":"1930:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1945:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1959:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1949:6:13","type":""}]},{"nodeType":"YulAssignment","src":"1974:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2009:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"2020:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2005:3:13"},"nodeType":"YulFunctionCall","src":"2005:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2029:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1984:20:13"},"nodeType":"YulFunctionCall","src":"1984:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1974:6:13"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1761:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1772:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1784:6:13","type":""}],"src":"1725:329:13"},{"body":{"nodeType":"YulBlock","src":"2105:51:13","statements":[{"nodeType":"YulAssignment","src":"2115:35:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2144:5:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2126:17:13"},"nodeType":"YulFunctionCall","src":"2126:24:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2115:7:13"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2087:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2097:7:13","type":""}],"src":"2060:96:13"},{"body":{"nodeType":"YulBlock","src":"2227:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2244:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2267:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2249:17:13"},"nodeType":"YulFunctionCall","src":"2249:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2237:6:13"},"nodeType":"YulFunctionCall","src":"2237:37:13"},"nodeType":"YulExpressionStatement","src":"2237:37:13"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2215:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2222:3:13","type":""}],"src":"2162:118:13"},{"body":{"nodeType":"YulBlock","src":"2351:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2368:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2391:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2373:17:13"},"nodeType":"YulFunctionCall","src":"2373:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2361:6:13"},"nodeType":"YulFunctionCall","src":"2361:37:13"},"nodeType":"YulExpressionStatement","src":"2361:37:13"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2339:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2346:3:13","type":""}],"src":"2286:118:13"},{"body":{"nodeType":"YulBlock","src":"2536:206:13","statements":[{"nodeType":"YulAssignment","src":"2546:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2558:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2569:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2554:3:13"},"nodeType":"YulFunctionCall","src":"2554:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2546:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2626:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2639:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2650:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2635:3:13"},"nodeType":"YulFunctionCall","src":"2635:17:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2582:43:13"},"nodeType":"YulFunctionCall","src":"2582:71:13"},"nodeType":"YulExpressionStatement","src":"2582:71:13"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2707:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2720:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2731:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2716:3:13"},"nodeType":"YulFunctionCall","src":"2716:18:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2663:43:13"},"nodeType":"YulFunctionCall","src":"2663:72:13"},"nodeType":"YulExpressionStatement","src":"2663:72:13"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2500:9:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2512:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2520:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2531:4:13","type":""}],"src":"2410:332:13"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_CAT_$1058_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_CAT_$1058_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_CAT_$1058_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_CAT_$1058__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_CAT_$1058_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1134":[{"length":32,"start":121},{"length":32,"start":159}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c806321df0da71461003b578063c5ebeaec14610059575b600080fd5b610043610075565b60405161005091906101ac565b60405180910390f35b610073600480360381019061006e9190610202565b61009d565b005b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632daf865d33836040518363ffffffff1660e01b81526004016100f892919061025f565b600060405180830381600087803b15801561011257600080fd5b505af1158015610126573d6000803e3d6000fd5b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061017261016d6101688461012d565b61014d565b61012d565b9050919050565b600061018482610157565b9050919050565b600061019682610179565b9050919050565b6101a68161018b565b82525050565b60006020820190506101c1600083018461019d565b92915050565b600080fd5b6000819050919050565b6101df816101cc565b81146101ea57600080fd5b50565b6000813590506101fc816101d6565b92915050565b600060208284031215610218576102176101c7565b5b6000610226848285016101ed565b91505092915050565b600061023a8261012d565b9050919050565b61024a8161022f565b82525050565b610259816101cc565b82525050565b60006040820190506102746000830185610241565b6102816020830184610250565b939250505056fea264697066735822122002984055a52fa4ec33dfbe2401ef420b485fd02add60ef55de6a11d5d2b466eb64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xC5EBEAEC EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x202 JUMP JUMPDEST PUSH2 0x9D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2DAF865D CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP3 SWAP2 SWAP1 PUSH2 0x25F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x126 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x172 PUSH2 0x16D PUSH2 0x168 DUP5 PUSH2 0x12D JUMP JUMPDEST PUSH2 0x14D JUMP JUMPDEST PUSH2 0x12D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x184 DUP3 PUSH2 0x157 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x196 DUP3 PUSH2 0x179 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A6 DUP2 PUSH2 0x18B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DF DUP2 PUSH2 0x1CC JUMP JUMPDEST DUP2 EQ PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FC DUP2 PUSH2 0x1D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x218 JUMPI PUSH2 0x217 PUSH2 0x1C7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x226 DUP5 DUP3 DUP6 ADD PUSH2 0x1ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A DUP3 PUSH2 0x12D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24A DUP2 PUSH2 0x22F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x1CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x274 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x241 JUMP JUMPDEST PUSH2 0x281 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x250 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL SWAP9 BLOCKHASH SSTORE 0xA5 0x2F LOG4 0xEC CALLER 0xDF 0xBE 0x24 ADD 0xEF TIMESTAMP SIGNEXTEND BASEFEE 0x5F 0xD0 0x2A 0xDD PUSH1 0xEF SSTORE 0xDE PUSH11 0x11D5D2B466EB64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"185:892:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;995:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;500:487;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;995:79;1036:3;1059:7;1052:14;;995:79;:::o;500:487::-;900:7;:16;;;917:10;929:14;900:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;500:487;:::o;7:126:13:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:138::-;547:9;580:37;611:5;580:37;:::i;:::-;567:50;;485:138;;;:::o;629:155::-;728:49;771:5;728:49;:::i;:::-;723:3;716:62;629:155;;:::o;790:246::-;895:4;933:2;922:9;918:18;910:26;;946:83;1026:1;1015:9;1011:17;1002:6;946:83;:::i;:::-;790:246;;;;:::o;1123:117::-;1232:1;1229;1222:12;1369:77;1406:7;1435:5;1424:16;;1369:77;;;:::o;1452:122::-;1525:24;1543:5;1525:24;:::i;:::-;1518:5;1515:35;1505:63;;1564:1;1561;1554:12;1505:63;1452:122;:::o;1580:139::-;1626:5;1664:6;1651:20;1642:29;;1680:33;1707:5;1680:33;:::i;:::-;1580:139;;;;:::o;1725:329::-;1784:6;1833:2;1821:9;1812:7;1808:23;1804:32;1801:119;;;1839:79;;:::i;:::-;1801:119;1959:1;1984:53;2029:7;2020:6;2009:9;2005:22;1984:53;:::i;:::-;1974:63;;1930:117;1725:329;;;;:::o;2060:96::-;2097:7;2126:24;2144:5;2126:24;:::i;:::-;2115:35;;2060:96;;;:::o;2162:118::-;2249:24;2267:5;2249:24;:::i;:::-;2244:3;2237:37;2162:118;;:::o;2286:::-;2373:24;2391:5;2373:24;:::i;:::-;2368:3;2361:37;2286:118;;:::o;2410:332::-;2531:4;2569:2;2558:9;2554:18;2546:26;;2582:71;2650:1;2639:9;2635:17;2626:6;2582:71;:::i;:::-;2663:72;2731:2;2720:9;2716:18;2707:6;2663:72;:::i;:::-;2410:332;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"140400","executionCost":"infinite","totalCost":"infinite"},"external":{"borrow(uint256)":"infinite","getToken()":"infinite"}},"methodIdentifiers":{"borrow(uint256)":"c5ebeaec","getToken()":"21df0da7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"toBorrowAmount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"contract CAT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vault.sol\":\"Vault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/CAT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\n\\r\\ncontract CAT is ERC20 {\\r\\n    constructor(\\r\\n        uint256 initialSupply,\\r\\n        string memory name,\\r\\n        string memory symbol\\r\\n    ) ERC20(name, symbol) {\\r\\n        _mint(msg.sender, initialSupply);\\r\\n    }\\r\\n\\r\\n    function _mintCAT(address receivingAddress, uint256 amount) public {\\r\\n        _mint(receivingAddress, amount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x5cbfafe37676a905ca47123c090ba83f243036506a68eb61606ef0d34ba54f09\",\"license\":\"MIT\"},\"contracts/Loan.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\n/*A loan  */\\r\\ncontract Loan {\\r\\n    //simply holds the collateral value and the outstanding loan value and the issue date from which the interest needs to be calculated by liquidators and checked by liquidation contract\\r\\n    uint256 private s_blockHeightLastInterestUpdate;\\r\\n    mapping(address => uint256) collateralAmountByToken;\\r\\n\\r\\n    address public immutable i_token;\\r\\n\\r\\n    constructor(address commodityToken) {\\r\\n        i_token = commodityToken;\\r\\n        s_blockHeightLastInterestUpdate = block.timestamp;\\r\\n    }\\r\\n\\r\\n    uint256 private s_amountBorrowedPerToken;\\r\\n\\r\\n    //mapping(address, uint256) accruedInterestPerToken\\r\\n}\\r\\n\",\"keccak256\":\"0x967915ebb4818d0b37baa7294d938fcf66f6216c0bc408d8c67bda305b67766f\",\"license\":\"MIT\"},\"contracts/Vault.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\n/*  This is a generic vault where a set of loans are held\\r\\n    Loans are  */\\r\\n\\r\\nimport \\\"./CAT.sol\\\";\\r\\nimport \\\"./Loan.sol\\\";\\r\\n\\r\\ncontract Vault {\\r\\n    CAT private immutable i_token;\\r\\n    mapping(address => Loan) private s_addressesToLoans; //the list of outstanding loans\\r\\n\\r\\n    constructor(string memory name, string memory symbol) {\\r\\n        i_token = new CAT(0, name, symbol);\\r\\n        //TODO: add address of price feed of CAT\\r\\n    }\\r\\n\\r\\n    function borrow(uint256 toBorrowAmount) public {\\r\\n        /**1. check if this user is allowed to borrow: i.e. has remaining free collateral\\r\\n         * 2. mint the tokens & send to user\\r\\n         * 3. update Loan object\\r\\n         * 4. add Loan object to s_addressesToLoans\\r\\n         */\\r\\n\\r\\n        //TODO: 1. check if user is allowed to borrw\\r\\n\\r\\n        //2. mint the tokens and send to user\\r\\n        i_token._mintCAT(msg.sender, toBorrowAmount);\\r\\n\\r\\n        //3. update Loan object\\r\\n    }\\r\\n\\r\\n    function getToken() public view returns (CAT) {\\r\\n        return i_token;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xfdbcdd4ca2ec1d45465f3f42704e8774398c525b86647a3ae850cb34ed167c7e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1139,"contract":"contracts/Vault.sol:Vault","label":"s_addressesToLoans","offset":0,"slot":"0","type":"t_mapping(t_address,t_contract(Loan)1127)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(Loan)1127":{"encoding":"inplace","label":"contract Loan","numberOfBytes":"20"},"t_mapping(t_address,t_contract(Loan)1127)":{"encoding":"mapping","key":"t_address","label":"mapping(address => contract Loan)","numberOfBytes":"32","value":"t_contract(Loan)1127"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}